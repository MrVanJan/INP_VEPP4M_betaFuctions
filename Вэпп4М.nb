(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    218074,       4717]
NotebookOptionsPosition[    214681,       4661]
NotebookOutlinePosition[    215122,       4678]
CellTagsIndexPosition[    215079,       4675]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"name", ",", " ", "first"}], "}"}], " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Ivan\\\\Documents\\\\\:0423\:0447\:0435\:0431\:0430\\\
\\\:0414\:0438\:043f\:043b\:043e\:043c\\\\\:0414\:0430\:043d\:043d\:044b\:0435\
\\\\name.dat\>\"", ",", " ", "\"\<Table\>\""}], "]"}], "]"}]}], " ", 
  ";"}], "\n", "name", "\n", "first"}], "Code",
 CellChangeTimes->{{3.828621050942292*^9, 3.828621096747547*^9}, {
   3.8286212672815566`*^9, 3.82862133654743*^9}, 3.8286214201243496`*^9, 
   3.829213937135821*^9, {3.829617637837129*^9, 3.8296176395223875`*^9}},
 CellLabel->
  "In[379]:=",ExpressionUUID->"ef3fa8d3-4578-44fb-bde5-dd388c2cabe9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"stp0\"\>", ",", "\<\"stp2\"\>", ",", "\<\"stp4\"\>", 
   ",", "\<\"srp1\"\>", ",", "\<\"srp2\"\>", ",", "\<\"srp3\"\>", 
   ",", "\<\"srp4\"\>", ",", "\<\"srp5\"\>", ",", "\<\"srp6\"\>", 
   ",", "\<\"srp7\"\>", ",", "\<\"srp8\"\>", ",", "\<\"srp9\"\>", 
   ",", "\<\"sip1\"\>", ",", "\<\"sip2\"\>", ",", "\<\"srp10\"\>", 
   ",", "\<\"srp11\"\>", ",", "\<\"srp12\"\>", ",", "\<\"srp13\"\>", 
   ",", "\<\"srp14\"\>", ",", "\<\"srp15\"\>", ",", "\<\"srp16\"\>", 
   ",", "\<\"srp17\"\>", ",", "\<\"sep5\"\>", ",", "\<\"sep4\"\>", 
   ",", "\<\"sep3\"\>", ",", "\<\"sep1\"\>", ",", "\<\"sep0\"\>", 
   ",", "\<\"nep0\"\>", ",", "\<\"nep1\"\>", ",", "\<\"nep3\"\>", 
   ",", "\<\"nep4\"\>", ",", "\<\"nep5\"\>", ",", "\<\"nrp17\"\>", 
   ",", "\<\"nrp16\"\>", ",", "\<\"nrp15\"\>", ",", "\<\"nrp14\"\>", 
   ",", "\<\"nrp13\"\>", ",", "\<\"nrp12\"\>", ",", "\<\"nrp11\"\>", 
   ",", "\<\"nrp10\"\>", ",", "\<\"nip3\"\>", ",", "\<\"nip1\"\>", 
   ",", "\<\"nrp9\"\>", ",", "\<\"nrp8\"\>", ",", "\<\"nrp7\"\>", 
   ",", "\<\"nrp6\"\>", ",", "\<\"nrp5\"\>", ",", "\<\"nrp4\"\>", 
   ",", "\<\"nrp3\"\>", ",", "\<\"nrp2\"\>", ",", "\<\"nrp1\"\>", 
   ",", "\<\"ntp4\"\>", ",", "\<\"ntp2\"\>", ",", "\<\"ntp0\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.829617654766736*^9, 3.829813630167271*^9, 
  3.8298839064251776`*^9, 3.829887813236827*^9, 3.8298892105591426`*^9, 
  3.829891404755792*^9},
 CellLabel->
  "Out[380]=",ExpressionUUID->"1dfd587c-df5b-480a-bc93-b7745aede01d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", 
   ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
   "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "9", 
   ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", 
   "9", ",", "9", ",", "8", ",", "8", ",", "8", ",", "8", ",", "9", ",", "9", 
   ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", 
   "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", 
   ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.829617654766736*^9, 3.829813630167271*^9, 
  3.8298839064251776`*^9, 3.829887813236827*^9, 3.8298892105591426`*^9, 
  3.829891404771443*^9},
 CellLabel->
  "Out[381]=",ExpressionUUID->"b62c3b2c-2354-48a8-a1e6-8164bdd4c822"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"IntegerString", "[", 
     RowBox[{"#", ",", " ", "10", ",", " ", "2"}], "]"}], " ", "&"}], " ", "/@",
    " ", 
   RowBox[{"Range", "[", "10", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.828608783167131*^9, 3.828608786770503*^9}},
 CellLabel->
  "In[382]:=",ExpressionUUID->"64ddd3de-cbf7-4b14-a652-239a59267a06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"01\"\>", ",", "\<\"02\"\>", ",", "\<\"03\"\>", 
   ",", "\<\"04\"\>", ",", "\<\"05\"\>", ",", "\<\"06\"\>", ",", "\<\"07\"\>",
    ",", "\<\"08\"\>", ",", "\<\"09\"\>", ",", "\<\"10\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8296176548982253`*^9, 3.82961765504533*^9}, 
   3.8298136313997645`*^9, 3.829883911444871*^9, 3.829887815176143*^9, 
   3.8298892137825317`*^9, 3.829891406810391*^9},
 CellLabel->
  "Out[382]=",ExpressionUUID->"8a6ff777-a76c-43b2-b71a-204986e81ff8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Load", " ", "experiment", " ", "data"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "load", "]"}], " ", ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"load", "[", "id_", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "prefix", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"prefix", " ", "=", " ", 
         RowBox[{
          RowBox[{
          "StringTemplate", "[", 
           "\"\<C:\\\\Users\\\\Ivan\\\\Documents\\\\\:0423\:0447\:0435\:0431\
\:0430\\\\\:0414\:0438\:043f\:043b\:043e\:043c\\\\\:0414\:0430\:043d\:043d\
\:044b\:0435\\\\`1`-n450-2000-10000-\>\"", "]"}], "[", 
          RowBox[{"IntegerString", "[", 
           RowBox[{"id", ",", " ", "10", ",", " ", "2"}], "]"}], "]"}]}], " ",
         ";", "\n", "\t", 
        RowBox[{"Table", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"N", "[", 
             RowBox[{"Import", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringTemplate", "[", "\"\<`1``2`.dat\>\"", "]"}], 
                "[", 
                RowBox[{"prefix", ",", " ", 
                 RowBox[{"name", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", " ", 
               "\"\<CSV\>\""}], "]"}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"first", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ",", " ", 
              RowBox[{
               RowBox[{"first", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", "1", " ", "+", " ", 
               "1023"}]}], "}"}]}], "]"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "54"}], "}"}]}], "\n", "\t", 
         "]"}]}]}], "\n", "]"}]}], " ", ";"}], "\n", 
   RowBox[{
    RowBox[{"dataExp", " ", "=", " ", 
     RowBox[{"load", "[", "1", "]"}]}], " ", ";"}]}]}]], "Code",
 CellChangeTimes->{{3.8292140635657153`*^9, 3.8292140952320585`*^9}, 
   3.8292141855126276`*^9, {3.829214438207858*^9, 3.8292144480545263`*^9}, 
   3.8292209819034796`*^9, {3.829617690868705*^9, 3.82961769479043*^9}, 
   3.829818981173086*^9, 3.829819044616317*^9, {3.829819152213455*^9, 
   3.8298191524607005`*^9}, 3.829819240075521*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"f423771b-ea4f-4ab4-8b14-82420984accd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Load", " ", "model", " ", "data"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"dataModel", " ", "=", " ", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Ivan\\\\Downloads\\\\vepp.dat\>\"", ",", " ", 
      "\"\<Table\>\""}], "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{
  3.827197426088817*^9, 3.8272252739345818`*^9, {3.8272253717229433`*^9, 
   3.827225394386552*^9}, {3.8284046233953705`*^9, 3.828404628500825*^9}, {
   3.8292144506734953`*^9, 3.8292144528785963`*^9}, 3.829265204783497*^9, {
   3.8296176852204404`*^9, 3.8296176862895527`*^9}, 3.8296353567449512`*^9, 
   3.8296353937925053`*^9, {3.829819838282477*^9, 3.829819867859058*^9}, {
   3.82981996318083*^9, 3.8298199654663057`*^9}, {3.829820264203663*^9, 
   3.8298202746583414`*^9}, 3.8298883719886165`*^9, 3.82988846580433*^9},
 CellLabel->
  "In[261]:=",ExpressionUUID->"9a0140c3-e33d-4712-aa1c-d65b98e2283f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Load", " ", "New", " ", "model", " ", "data"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"dataModelNew", " ", "=", "  ", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Ivan\\\\Documents\\\\\:0423\:0447\:0435\:0431\:0430\\\
\\\:0414\:0438\:043f\:043b\:043e\:043c\\\\vepp4mBPM.dat\>\"", ",", " ", 
      "\"\<Table\>\""}], "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{
  3.827197426088817*^9, 3.8272252739345818`*^9, {3.8272253717229433`*^9, 
   3.827225394386552*^9}, {3.8284046233953705`*^9, 3.828404628500825*^9}, {
   3.8292144506734953`*^9, 3.8292144528785963`*^9}, 3.829265204783497*^9, {
   3.8296176852204404`*^9, 3.8296176862895527`*^9}, 3.8296353567449512`*^9, 
   3.8296353937925053`*^9, {3.829819838282477*^9, 3.829819867859058*^9}, {
   3.82981996318083*^9, 3.8298199766400948`*^9}, {3.829820021895631*^9, 
   3.829820035950294*^9}, {3.829820260982338*^9, 3.829820275428272*^9}, 
   3.829888191708471*^9, 3.8298884651729193`*^9, 3.8298910755554633`*^9},
 CellLabel->
  "In[346]:=",ExpressionUUID->"4eb92024-4091-4911-ae3b-d476ea045f8d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "optics", " ", "data", " ", 
    RowBox[{"(", 
     RowBox[{"all", " ", "elements"}], ")"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"dataTwiss", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Ivan\\\\Documents\\\\\:0423\:0447\:0435\:0431\:0430\
\\\\\:0414\:0438\:043f\:043b\:043e\:043c\\\\\:0414\:0430\:043d\:043d\:044b\
\:0435\\\\01-n450-2000-10000-twiss.dat\>\"", ",", "\"\<CSV\>\""}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"bx", " ", "=", " ", 
     RowBox[{"dataTwiss", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "4"}], "]"}], "]"}]}], " ", ";"}], "\n", 
   RowBox[{
    RowBox[{"ax", " ", "=", " ", 
     RowBox[{"dataTwiss", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], " ", ";"}], "\n", 
   RowBox[{
    RowBox[{"by", " ", "=", " ", 
     RowBox[{"dataTwiss", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "8"}], "]"}], "]"}]}], " ", ";"}], "\n", 
   RowBox[{
    RowBox[{"ay", " ", "=", " ", 
     RowBox[{"dataTwiss", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "6"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"fx", "=", 
     RowBox[{"dataTwiss", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.827197435301783*^9, 3.827197447971239*^9}, {
   3.827197498783147*^9, 3.8271975279875236`*^9}, {3.8271977277846713`*^9, 
   3.8271977378514776`*^9}, {3.82719785665621*^9, 3.827197858239774*^9}, {
   3.829226325292921*^9, 3.829226329093754*^9}, {3.829226419425185*^9, 
   3.8292264298273673`*^9}, {3.8292268367771473`*^9, 3.829227039292827*^9}, 
   3.829227080521838*^9, {3.829265580648939*^9, 3.829265605068609*^9}, {
   3.829265710320039*^9, 3.8292657135823393`*^9}, 3.8296177336324005`*^9, {
   3.829629059454585*^9, 3.8296290836804557`*^9}, {3.829629159937229*^9, 
   3.8296291864330826`*^9}, {3.8296292824240417`*^9, 3.829629290331197*^9}, 
   3.829629411178076*^9},
 CellLabel->
  "In[263]:=",ExpressionUUID->"017d61e2-5027-47b6-b2be-b48746f02155"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Process", " ", "data", " ", 
    RowBox[{"(", 
     RowBox[{"optics", " ", "at", " ", "BPMs"}], ")"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"data$bpm", " ", "=", " ", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Rest", "[", "dataModel", "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<MARK\>\"", ",", " ", "__"}], "}"}]}], "]"}]}], " ", 
    ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Formal", " ", "ideal", " ", "model", " ", "data"}], " ", "*)"}], 
   "\n", 
   RowBox[{"bpm$count", "    ", "=", " ", 
    RowBox[{
     RowBox[{"Length", "[", "data$bpm", "]"}], "-", "1"}]}], 
   "                ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "number"}], " ", "of", " ", "unique", " ", "BPMs"}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$name", "     ", "=", " ", 
     RowBox[{
      RowBox[{"data$bpm", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";", "          ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"--", " ", "list"}], " ", "of", " ", "BPM", " ", "names"}], " ",
      "*)"}], "\n", 
    RowBox[{"bpm$position", " ", "=", " ", 
     RowBox[{
      RowBox[{"data$bpm", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "3"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";", "           ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"--", " ", "list"}], " ", "of", " ", "BPM", " ", "positions"}], 
     " ", "*)"}], "\n", 
    RowBox[{"bpm$bx", "       ", "=", " ", 
     RowBox[{
      RowBox[{"data$bpm", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";"}], "\n", 
   RowBox[{"Length", "[", "bpm$bx", " ", "]"}], "               ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "bx"}], " ", "values", " ", "at", " ", "BPMs"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$ax", "       ", "=", " ", 
     RowBox[{
      RowBox[{"data$bpm", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], ";", "            ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"--", " ", "ax"}], " ", "values", " ", "at", " ", "BPMs"}], " ",
      "*)"}], "\n", 
    RowBox[{"bpm$fx", "       ", "=", " ", 
     RowBox[{"Differences", "[", 
      RowBox[{"data$bpm", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "6"}], "]"}], "]"}], "]"}]}], ";"}], "  ", 
   "\n", 
   RowBox[{"Length", "[", "bpm$fx", "]"}], 
   "                                        ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "x"}], " ", "phase", " ", "advance", " ", "between", 
     " ", "BPMs"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$by", "       ", "=", " ", 
     RowBox[{
      RowBox[{"data$bpm", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";", "           ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"--", " ", "by"}], " ", "values", " ", "at", " ", "BPMs"}], " ",
      "*)"}], "\n", 
    RowBox[{"bpm$ay", "       ", "=", " ", 
     RowBox[{
      RowBox[{"data$bpm", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";", "           ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"--", " ", "ay"}], " ", "values", " ", "at", " ", "BPMs"}], " ",
      "*)"}], "\n", 
    RowBox[{"bpm$fy", "       ", "=", " ", 
     RowBox[{"Differences", "[", 
      RowBox[{"data$bpm", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "9"}], "]"}], "]"}], "]"}]}], " ", ";", 
    "      ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"--", " ", "y"}], " ", "phase", " ", "advance", " ", "between", 
      " ", "BPMs"}], " ", "*)"}]}]}]}]], "Code",
 CellChangeTimes->{{3.827107417946533*^9, 3.8271074188767233`*^9}, {
   3.827198059193431*^9, 3.8271980748022556`*^9}, {3.827199119495802*^9, 
   3.827199126903598*^9}, 3.82720725096161*^9, {3.827215088950941*^9, 
   3.827215102842969*^9}, {3.8272151692335634`*^9, 3.827215178005029*^9}, {
   3.827900900578096*^9, 3.827900936517803*^9}, {3.8279036032549915`*^9, 
   3.827903618466657*^9}, {3.827904110705126*^9, 3.827904118014843*^9}, 
   3.8292145125490217`*^9, {3.8298885813891363`*^9, 3.82988858895383*^9}, {
   3.8298887040382648`*^9, 3.8298887079559827`*^9}, {3.829889838637018*^9, 
   3.8298898591860833`*^9}, {3.8298899285655375`*^9, 3.829889932149302*^9}, {
   3.829890040266541*^9, 3.829890055531517*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"d2c23efe-5191-4c66-b8fe-beaf264e4fe1"],

Cell[BoxData["54"], "Output",
 CellChangeTimes->{
  3.829888603476226*^9, {3.8298887002824297`*^9, 3.8298887083719554`*^9}, 
   3.8298892547970486`*^9, {3.829889840238282*^9, 3.8298898596643496`*^9}, {
   3.8298899289122458`*^9, 3.829889932549574*^9}, {3.8298900406981907`*^9, 
   3.8298900649146724`*^9}, 3.829890201836543*^9},
 CellLabel->
  "Out[270]=",ExpressionUUID->"81e8ee22-21aa-4658-b83c-6380526b695b"],

Cell[BoxData["54"], "Output",
 CellChangeTimes->{
  3.829888603476226*^9, {3.8298887002824297`*^9, 3.8298887083719554`*^9}, 
   3.8298892547970486`*^9, {3.829889840238282*^9, 3.8298898596643496`*^9}, {
   3.8298899289122458`*^9, 3.829889932549574*^9}, {3.8298900406981907`*^9, 
   3.8298900649146724`*^9}, 3.8298902018521643`*^9},
 CellLabel->
  "Out[272]=",ExpressionUUID->"0035798e-bd82-400f-9114-13a2e569d27e"],

Cell[BoxData["54"], "Output",
 CellChangeTimes->{
  3.829888603476226*^9, {3.8298887002824297`*^9, 3.8298887083719554`*^9}, 
   3.8298892547970486`*^9, {3.829889840238282*^9, 3.8298898596643496`*^9}, {
   3.8298899289122458`*^9, 3.829889932549574*^9}, {3.8298900406981907`*^9, 
   3.8298900649146724`*^9}, 3.8298902018586698`*^9},
 CellLabel->
  "Out[274]=",ExpressionUUID->"d0f17047-ff45-4ca8-a57a-24e019e56b9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Process", " ", "data", " ", 
    RowBox[{"(", 
     RowBox[{"New", " ", "optics", " ", "at", " ", "BPMs"}], ")"}]}], " ", 
   "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Formal", " ", "ideal", " ", "model", " ", "data"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{"bpm$countN", "    ", "=", " ", 
    RowBox[{
     RowBox[{"Length", "[", "dataModelNew", "]"}], "-", "1"}]}], 
   "                ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "number"}], " ", "of", " ", "unique", " ", "BPMs"}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$nameN", "     ", "=", " ", 
     RowBox[{
      RowBox[{"dataModelNew", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";"}], "         ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "list"}], " ", "of", " ", "BPM", " ", "names"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$bxN", "       ", "=", " ", 
     RowBox[{
      RowBox[{"dataModelNew", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "3"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";"}], "\n", 
   RowBox[{"Length", "[", "bpm$bxN", " ", "]"}], "               ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "bx"}], " ", "values", " ", "at", " ", "BPMs"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$axN", "       ", "=", " ", 
     RowBox[{
      RowBox[{"dataModelNew", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], "  ", ";", "          ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"--", " ", "ax"}], " ", "values", " ", "at", " ", "BPMs"}], " ",
      "*)"}], "\n", 
    RowBox[{"bpm$fxN", "       ", "=", " ", 
     RowBox[{"Differences", "[", 
      RowBox[{"dataModelNew", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}]}], ";"}], " ", 
   "\n", 
   RowBox[{"Length", "[", "bpm$fxN", "]"}], 
   "                                        ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "x"}], " ", "phase", " ", "advance", " ", "between", 
     " ", "BPMs"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$byN", "       ", "=", " ", 
     RowBox[{
      RowBox[{"dataModelNew", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "6"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";", "           ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"--", " ", "by"}], " ", "values", " ", "at", " ", "BPMs"}], " ",
      "*)"}], "\n", 
    RowBox[{"bpm$ayN", "       ", "=", " ", 
     RowBox[{
      RowBox[{"dataModelNew", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";", "           ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"--", " ", "ay"}], " ", "values", " ", "at", " ", "BPMs"}], " ",
      "*)"}], "\n", 
    RowBox[{"bpm$fyN", "       ", "=", " ", 
     RowBox[{"Differences", "[", 
      RowBox[{"dataModelNew", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}]}], " ", ";", 
    "      ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"--", " ", "y"}], " ", "phase", " ", "advance", " ", "between", 
      " ", "BPMs"}], " ", "*)"}]}]}]}]], "Code",
 CellChangeTimes->{{3.827107417946533*^9, 3.8271074188767233`*^9}, {
   3.827198059193431*^9, 3.8271980748022556`*^9}, {3.827199119495802*^9, 
   3.827199126903598*^9}, 3.82720725096161*^9, {3.827215088950941*^9, 
   3.827215102842969*^9}, {3.8272151692335634`*^9, 3.827215178005029*^9}, {
   3.827900900578096*^9, 3.827900936517803*^9}, {3.8279036032549915`*^9, 
   3.827903618466657*^9}, {3.827904110705126*^9, 3.827904118014843*^9}, 
   3.8292145125490217`*^9, {3.8298885813891363`*^9, 3.829888644481986*^9}, {
   3.8298886854047146`*^9, 3.8298887948543887`*^9}, {3.8298897448264613`*^9, 
   3.8298897451495886`*^9}, {3.8298898114984503`*^9, 3.829889814029374*^9}, {
   3.829889917278942*^9, 3.829890025302967*^9}, 3.8298900698500767`*^9, 
   3.829890190582183*^9, {3.8298907202338085`*^9, 3.8298907273392572`*^9}, {
   3.8298910848467426`*^9, 3.829891171252141*^9}, {3.8298912201586237`*^9, 
   3.8298912901701546`*^9}},
 CellLabel->
  "In[361]:=",ExpressionUUID->"a5769926-b177-4ee0-872a-370666a54b92"],

Cell[BoxData["54"], "Output",
 CellChangeTimes->{
  3.829617936321395*^9, 3.829634483200383*^9, 3.8298136519840355`*^9, 
   3.82988394502783*^9, 3.829887847129279*^9, {3.8298886494690714`*^9, 
   3.829888686427411*^9}, 3.829888737356525*^9, {3.8298887748472013`*^9, 
   3.8298887997427473`*^9}, 3.8298892570840006`*^9, {3.8298897251875467`*^9, 
   3.829889745827665*^9}, 3.8298898144137907`*^9, 3.829889890815031*^9, {
   3.8298899226664324`*^9, 3.829890025603189*^9}, 3.8298900702659407`*^9, 
   3.8298902043768067`*^9, 3.829890721387991*^9, {3.8298912702402835`*^9, 
   3.829891291354575*^9}},
 CellLabel->
  "Out[361]=",ExpressionUUID->"2325c1d2-f082-4fd3-bf11-53b156c1e9bb"],

Cell[BoxData["54"], "Output",
 CellChangeTimes->{
  3.829617936321395*^9, 3.829634483200383*^9, 3.8298136519840355`*^9, 
   3.82988394502783*^9, 3.829887847129279*^9, {3.8298886494690714`*^9, 
   3.829888686427411*^9}, 3.829888737356525*^9, {3.8298887748472013`*^9, 
   3.8298887997427473`*^9}, 3.8298892570840006`*^9, {3.8298897251875467`*^9, 
   3.829889745827665*^9}, 3.8298898144137907`*^9, 3.829889890815031*^9, {
   3.8298899226664324`*^9, 3.829890025603189*^9}, 3.8298900702659407`*^9, 
   3.8298902043768067`*^9, 3.829890721387991*^9, {3.8298912702402835`*^9, 
   3.829891291354575*^9}},
 CellLabel->
  "Out[364]=",ExpressionUUID->"06cfb970-ebd6-4347-8d31-e160436bf473"],

Cell[BoxData["54"], "Output",
 CellChangeTimes->{
  3.829617936321395*^9, 3.829634483200383*^9, 3.8298136519840355`*^9, 
   3.82988394502783*^9, 3.829887847129279*^9, {3.8298886494690714`*^9, 
   3.829888686427411*^9}, 3.829888737356525*^9, {3.8298887748472013`*^9, 
   3.8298887997427473`*^9}, 3.8298892570840006`*^9, {3.8298897251875467`*^9, 
   3.829889745827665*^9}, 3.8298898144137907`*^9, 3.829889890815031*^9, {
   3.8298899226664324`*^9, 3.829890025603189*^9}, 3.8298900702659407`*^9, 
   3.8298902043768067`*^9, 3.829890721387991*^9, {3.8298912702402835`*^9, 
   3.829891291354575*^9}},
 CellLabel->
  "Out[366]=",ExpressionUUID->"8be5ad56-a128-4fd5-89b2-261cd9552e7c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"window", " ", "function"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "S$COSINE$WINDOW", "]"}], " ", ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"S$COSINE$WINDOW", "::", "usage"}], " ", "=", " ", 
     "\"\<\nS$COSINE$WINDOW[ORDER,LENGTH] -- generate cosine window data of \
order <ORDER> (integer) and window length <LENGTH> (integer)\n\>\""}], " ", 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"S$COSINE$WINDOW", "[", "                    ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"--", " ", "GENERATE"}], " ", "COSINE", " ", "WINDOW", " ", 
        "DATA", " ", 
        RowBox[{"(", "LIST", ")"}]}], " ", "*)"}], "\n", "  ", 
      RowBox[{
       RowBox[{"ORDER_", "?", "NumericQ"}], ",", "                  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"--", " ", "WINDOW"}], " ", "ORDER", " ", 
         RowBox[{"(", 
          RowBox[{"INTEGER", "/", "REAL"}], ")"}]}], " ", "*)"}], "\n", "  ", 
       "LENGTH_Integer"}], "                    ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"--", " ", "WINDOW"}], " ", "LENGTH", " ", 
        RowBox[{"(", "INTEGER", ")"}]}], " ", "*)"}], "\n", "]"}], " ", ":=", 
     " ", 
     RowBox[{
      RowBox[{"If", "[", "\n", "  ", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{"N", "[", "ORDER", "]"}], ",", 
          RowBox[{"N", "[", "0", "]"}]}], "]"}], ",", "\n", "  ", 
        RowBox[{"N", "[", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", "LENGTH"}], "]"}], "]"}], ",", "\n", "  ", 
        RowBox[{"Times", "[", "\n", "    ", 
         RowBox[{
          RowBox[{"Power", "[", 
           RowBox[{
            RowBox[{"Plus", "[", 
             RowBox[{"1", ",", "1"}], "]"}], ",", "ORDER"}], "]"}], ",", "\n",
           "    ", 
          RowBox[{"Power", "[", 
           RowBox[{
            RowBox[{"Factorial", "[", "ORDER", "]"}], ",", 
            RowBox[{"Plus", "[", 
             RowBox[{"1", ",", "1"}], "]"}]}], "]"}], ",", "\n", "    ", 
          RowBox[{"Power", "[", 
           RowBox[{
            RowBox[{"Factorial", "[", 
             RowBox[{"Times", "[", 
              RowBox[{
               RowBox[{"Plus", "[", 
                RowBox[{"1", ",", "1"}], "]"}], ",", "ORDER"}], "]"}], "]"}], 
            ",", 
            RowBox[{"Subtract", "[", 
             RowBox[{"0", ",", "1"}], "]"}]}], "]"}], ",", "\n", "    ", 
          RowBox[{"Power", "[", 
           RowBox[{
            RowBox[{"Plus", "[", 
             RowBox[{"1", ",", 
              RowBox[{"Cos", "[", 
               RowBox[{"Times", "[", 
                RowBox[{
                 RowBox[{"Plus", "[", 
                  RowBox[{"1", ",", "1"}], "]"}], ",", "Pi", ",", 
                 RowBox[{"Subtract", "[", 
                  RowBox[{
                   RowBox[{"Divide", "[", 
                    RowBox[{
                    RowBox[{"Subtract", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"Range", "[", "LENGTH", "]"}], "]"}], ",", "1"}], 
                    "]"}], ",", "LENGTH"}], "]"}], ",", 
                   RowBox[{"Divide", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"Plus", "[", 
                    RowBox[{"1", ",", "1"}], "]"}]}], "]"}]}], "]"}]}], "]"}],
                "]"}]}], "]"}], ",", "ORDER"}], "]"}]}], "\n", "  ", "]"}]}], 
       "\n", "]"}], " ", "/;", " ", 
      RowBox[{"And", "[", "\n", "  ", 
       RowBox[{
        RowBox[{"GreaterEqual", "[", 
         RowBox[{"ORDER", ",", "0"}], "]"}], ",", "\n", "  ", 
        RowBox[{"GreaterEqual", "[", 
         RowBox[{"LENGTH", ",", "1"}], "]"}]}], "\n", "]"}]}]}], " ", 
    ";"}]}]}]], "Code",
 CellChangeTimes->{
  3.8255858082371845`*^9, {3.825590224940668*^9, 3.8255902367311287`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"17f66576-d936-4350-bda2-7e0d9f663b11"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "CalculateFreq", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CalculateFreq", "[", 
   RowBox[{"sig_", ",", "pad_"}], "]"}], ":=", 
  RowBox[{"Block", "[", "\n", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "res", ",", "max", ",", "len", ",", "sig1", ",", "dat", ",", "pos", ",", 
      "bin", ",", "amp", ",", "fun", ",", "x", ",", "fra", ",", "sigm"}], 
     "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"len", "=", 
      RowBox[{"Length", "[", "sig", "]"}]}], ";", "\n", 
     RowBox[{"sigm", "=", 
      RowBox[{"sig", "-", 
       RowBox[{"Mean", "[", "sig", "]"}]}]}], ";", "\n", 
     RowBox[{"sig1", " ", "=", " ", 
      RowBox[{"sigm", "*", 
       RowBox[{"S$COSINE$WINDOW", "[", 
        RowBox[{"1", ",", "len"}], "]"}]}]}], " ", ";", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"sig1", " ", "=", " ", 
        RowBox[{"PadRight", "[", 
         RowBox[{"sig1", ",", " ", "pad"}], "]"}]}], " ", ";"}], " ", "*)"}], 
     "\n", 
     RowBox[{"amp", " ", "=", " ", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"Fourier", "[", "sig1", "]"}], "]"}], ",", 
        RowBox[{"pad", "/", "2"}]}], "]"}]}], " ", ";", "\n", 
     RowBox[{"bin", " ", "=", " ", 
      RowBox[{"First", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"amp", ",", 
          RowBox[{"Max", "[", 
           RowBox[{"Take", "[", 
            RowBox[{"amp", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "pad"}], "/", "2"}], "+", "2"}]}], "]"}], "]"}]}],
          "]"}], "]"}], "]"}]}], " ", ";", "\n", "\n", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"1", "/", "pad"}], "*", 
        RowBox[{"(", 
         RowBox[{"bin", "-", "1"}], ")"}]}], "]"}]}], ";", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
      "fractional", " ", "fourier", " ", "and", " ", "max", " ", "bin", " ", 
       "of", " ", "fractional", " ", "fourier"}], " ", "*)"}], "\n", 
     RowBox[{"fra", " ", "=", " ", 
      RowBox[{"Abs", "[", 
       RowBox[{"Fourier", "[", 
        RowBox[{
         RowBox[{"sig1", "*", 
          RowBox[{"Exp", "[", 
           RowBox[{"2", "*", "Pi", "*", "I", "*", 
            RowBox[{"(", 
             RowBox[{"bin", "-", "2"}], ")"}], "*", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", 
                RowBox[{"pad", "-", "1"}]}], "]"}], "]"}], "/", "pad"}]}], 
           "]"}]}], ",", " ", 
         RowBox[{"FourierParameters", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"2", "/", "pad"}]}], "}"}]}]}], "]"}], "]"}]}], ";", "\n", 
     RowBox[{"max", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"fra", ",", " ", 
          RowBox[{"Max", "[", "fra", "]"}]}], "]"}], " ", "//", " ", 
        "Flatten"}], " ", "//", " ", "First"}]}], ";", "\n", "\n", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"1", "/", "pad"}], "*", 
         RowBox[{"(", 
          RowBox[{"bin", "-", "2"}], ")"}]}], "]"}], " ", "+", " ", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"pad", "^", "2"}]}], "*", "2", "*", 
         RowBox[{"(", 
          RowBox[{"max", "-", "1"}], ")"}]}], "]"}]}]}], ";", "\n", "\n", 
     RowBox[{"pos", " ", "=", " ", 
      RowBox[{"max", " ", "+", " ", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "10"}], "]"}]}]}], " ", ";", "\n", 
     RowBox[{"dat", " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", 
         RowBox[{"Log10", "[", 
          RowBox[{"fra", "[", 
           RowBox[{"[", "pos", "]"}], "]"}], "]"}]}], "}"}], " ", "//", " ", 
       "Transpose"}]}], " ", ";", "\n", "\n", "\n", 
     RowBox[{"fun", " ", "=", " ", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"dat", ",", " ", 
        RowBox[{"InterpolationOrder", " ", "\[Rule]", " ", "4"}]}], " ", 
       "]"}]}], " ", ";", "\n", "\n", "\n", 
     RowBox[{"max", " ", "=", " ", 
      RowBox[{"x", " ", "/.", " ", 
       RowBox[{"Last", "[", 
        RowBox[{
         RowBox[{"FindMaximum", "[", 
          RowBox[{
           RowBox[{"fun", "[", "x", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"max", "-", "1"}], ",", 
             RowBox[{"max", "+", "1"}]}], "}"}]}], "]"}], " ", "//", " ", 
         "Quiet"}], "]"}]}]}], ";", "\n", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"1", "/", "pad"}], "*", 
         RowBox[{"(", 
          RowBox[{"bin", "-", "2"}], ")"}]}], "]"}], " ", "+", " ", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"pad", "^", "2"}]}], "*", "2", "*", 
         RowBox[{"(", 
          RowBox[{"max", "-", "1"}], ")"}]}], "]"}]}]}]}]}], "\n", "\n", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.8280572699929566`*^9, 3.828057372436961*^9}, {
   3.828057426700857*^9, 3.828057503321555*^9}, 3.828266365644664*^9, {
   3.828407947488987*^9, 3.8284079708227687`*^9}, {3.828408486900875*^9, 
   3.8284084924938784`*^9}, {3.8284139197254343`*^9, 3.8284139215416336`*^9}, 
   3.8284139589201016`*^9, {3.8284141443464546`*^9, 3.8284141488639665`*^9}, {
   3.828414185734503*^9, 3.828414256960594*^9}, {3.8284144084806213`*^9, 
   3.8284144086430817`*^9}, {3.8284145112633076`*^9, 
   3.8284145123645315`*^9}, {3.828414590373176*^9, 3.8284146386990995`*^9}, {
   3.8284160152703495`*^9, 3.8284160324503307`*^9}, {3.829265277443117*^9, 
   3.8292652789340982`*^9}, 3.8296179739208994`*^9, {3.8296320178627467`*^9, 
   3.829632059923089*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"6a29126c-9f93-4c67-91e3-6ed2ff61c69c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "calculateAmplandPhase", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"calculateAmplandPhase", "[", 
   RowBox[{"sig_", ",", "freqMid_"}], "]"}], ":=", 
  RowBox[{"Block", "[", "\n", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
     "pad", ",", " ", "WF", ",", " ", "sumWF", " ", ",", " ", "c", ",", " ", 
      "s", ",", " ", "ampl", ",", " ", "phase", ",", "sig1"}], "}"}], ",", 
    "\n", 
    RowBox[{
     RowBox[{"sig1", "=", " ", 
      RowBox[{"sig", " ", "-", " ", 
       RowBox[{"Mean", "[", "sig", "]"}]}]}], " ", ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"sig", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "-", 
          RowBox[{"Mean", "[", "sig", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "sig", "]"}]}], "}"}]}], "]"}], ";"}], 
      "*)"}], "\n", "\n", 
     RowBox[{"WF", "=", 
      RowBox[{"S$COSINE$WINDOW", "[", 
       RowBox[{"0", ",", 
        RowBox[{"Length", "[", "sig1", "]"}]}], "]"}]}], ";", "\n", 
     RowBox[{"sumWF", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"WF", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "sig1", "]"}]}], "}"}]}], "]"}]}], ";", "\n",
      "\n", 
     RowBox[{"c", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "/", "sumWF"}], ")"}], "*", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"sig1", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"WF", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "*", "Pi", "*", "freqMid", "*", "i"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "sig1", "]"}]}], "}"}]}], "]"}]}]}], ";", 
     "\n", 
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "/", "sumWF"}], ")"}], "*", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"sig1", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"WF", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", "*", "Pi", "*", "freqMid", "*", "i"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "sig1", "]"}]}], "}"}]}], "]"}]}]}], ";", 
     "\n", "\n", 
     RowBox[{"ampl", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"c", "^", "2"}], "+", 
        RowBox[{"s", "^", "2"}]}], "]"}]}], ";", "\n", 
     RowBox[{"phase", "=", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"c", ",", " ", "s"}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{"ampl", ",", "phase", ",", "freqMid"}], "}"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.8255908264113855`*^9, 3.825590861732855*^9}, {
   3.8255913277820315`*^9, 3.82559135981629*^9}, {3.825591437903133*^9, 
   3.8255914512903175`*^9}, {3.8255914858319054`*^9, 3.8255915385598354`*^9}, 
   3.8255918183497143`*^9, {3.8255957748930387`*^9, 3.8255958756873446`*^9}, {
   3.82559590813055*^9, 3.825595918359185*^9}, {3.825595949501896*^9, 
   3.825596013702103*^9}, {3.8255962276227894`*^9, 3.825596531802988*^9}, {
   3.8255966196080666`*^9, 3.8255966623367853`*^9}, {3.825596732185916*^9, 
   3.825596746989304*^9}, {3.8255971698150563`*^9, 3.8255971926280575`*^9}, 
   3.8255977628904696`*^9, {3.825598391023775*^9, 3.8255984222631702`*^9}, {
   3.82619167606707*^9, 3.8261916846382656`*^9}, {3.826191865644725*^9, 
   3.826191896314025*^9}, {3.82620136130409*^9, 3.826201405207695*^9}, {
   3.8262015387098513`*^9, 3.8262015399414997`*^9}, {3.8262023055133357`*^9, 
   3.8262023164896493`*^9}, {3.8262024030308533`*^9, 
   3.8262024125459356`*^9}, {3.8262037553522806`*^9, 
   3.8262037785158725`*^9}, {3.827207465422239*^9, 3.827207507606112*^9}, {
   3.8272254405370913`*^9, 3.8272254488826895`*^9}, 3.8272266366450415`*^9, 
   3.827227020279852*^9, {3.827227254122197*^9, 3.8272272545535507`*^9}, {
   3.8272272958181133`*^9, 3.827227325304256*^9}, {3.8272282416260443`*^9, 
   3.8272282432213945`*^9}, {3.8284413508395185`*^9, 
   3.8284414217033033`*^9}, {3.8285807356703925`*^9, 3.828580839809061*^9}, {
   3.828606925437593*^9, 3.828606937869399*^9}, {3.828607861795918*^9, 
   3.8286078689318476`*^9}, {3.8292196390883265`*^9, 3.8292196398473005`*^9}, 
   3.8292204542032795`*^9, {3.8292233630064754`*^9, 3.8292233803411183`*^9}, {
   3.82922341829362*^9, 3.829223426842763*^9}, {3.8292653202755303`*^9, 
   3.8292653409611616`*^9}, {3.8292663926376934`*^9, 3.8292663929588366`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"95dd9788-8aea-4c6e-bd07-2ce8de38799e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"beta", " ", "from", " ", "ampl"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "betaFromAmpl", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"betaFromAmpl", "[", 
     RowBox[{"amplAndPhaseData_", ",", "betaModelMassive_"}], "]"}], ":=", 
    RowBox[{"Block", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ActionTheor", ",", "betaFromAmpl"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"ActionTheor", "=", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"amplAndPhaseData", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ")"}], "^", "2"}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              RowBox[{"betaModelMassive", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "amplAndPhaseData", "]"}]}], "}"}]}], 
          "]"}], "/", 
         RowBox[{"Length", "[", "amplAndPhaseData", "]"}]}]}], ";", "\n", 
       RowBox[{"betaFromAmpl", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"amplAndPhaseData", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}], "^", "2"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "ActionTheor"}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "amplAndPhaseData", "]"}]}], "}"}]}], 
         "]"}]}]}]}], "\n", "]"}]}]}]}]], "Code",
 CellChangeTimes->{
  3.827197426088817*^9, {3.827198282859421*^9, 3.8271982992686234`*^9}, {
   3.827198336201497*^9, 3.82719838631446*^9}, {3.827198427608919*^9, 
   3.827198429111168*^9}, {3.827198557575631*^9, 3.8271985668368297`*^9}, 
   3.827198617976087*^9, {3.827198658133216*^9, 3.827198952875272*^9}, {
   3.827199022140627*^9, 3.8271990581170745`*^9}, {3.82719909400753*^9, 
   3.8271990941294703`*^9}, {3.827199186154127*^9, 3.827199221445007*^9}, {
   3.827204552560258*^9, 3.8272047278002443`*^9}, {3.8272048218719397`*^9, 
   3.827204822671855*^9}, {3.8272049612873473`*^9, 3.827204961418498*^9}, 
   3.827205151671059*^9, {3.827205330836753*^9, 3.827205359905258*^9}, {
   3.8272054466295385`*^9, 3.827205526461063*^9}, {3.8272055607651744`*^9, 
   3.827205561669833*^9}, {3.827205824409975*^9, 3.827205838894021*^9}, 
   3.8272059037119856`*^9, {3.827206070529018*^9, 3.8272061611695833`*^9}, {
   3.8272067799566483`*^9, 3.8272068056589375`*^9}, {3.8272068576116447`*^9, 
   3.8272070690783167`*^9}, {3.827207108232736*^9, 3.8272071391353865`*^9}, 
   3.82721150749188*^9, 3.8272117036233044`*^9, {3.8272141876187687`*^9, 
   3.8272142070551443`*^9}, {3.827214359430418*^9, 3.8272143600862055`*^9}, 
   3.8272153290073442`*^9, 3.827215376459967*^9, {3.827216664114671*^9, 
   3.8272167307103148`*^9}, {3.827216811980519*^9, 3.8272168154969807`*^9}, {
   3.827216911865579*^9, 3.8272170398699293`*^9}, {3.827217188019002*^9, 
   3.8272171887751827`*^9}, 3.827217331312521*^9, {3.827225607940216*^9, 
   3.827225608109233*^9}, 3.8272256628852215`*^9, {3.827225895350099*^9, 
   3.827225903637212*^9}, {3.827226029114352*^9, 3.827226049928774*^9}, {
   3.827226152183095*^9, 3.827226163783845*^9}, {3.827226194572822*^9, 
   3.827226194888917*^9}, {3.8272262475954037`*^9, 3.8272262477799377`*^9}, 
   3.8272264232620115`*^9, {3.827228139933781*^9, 3.8272281409567957`*^9}, {
   3.8272283213373528`*^9, 3.827228378102493*^9}, {3.8272285724470425`*^9, 
   3.8272287005308075`*^9}, 3.8272290224792233`*^9, {3.8272321136220384`*^9, 
   3.827232311141796*^9}, {3.8272323670353274`*^9, 3.827232415381198*^9}, {
   3.8272324841354713`*^9, 3.8272325814277687`*^9}, 3.827232623217759*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"fa0ba695-4a5e-402e-abe5-e171babcf299"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Beta", " ", "from", " ", "phase"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "betaFromPhase", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"betaFromPhase", "[", 
     RowBox[{"amplAndPhaseData_", ",", "betaModel_", ",", "theorPhase_"}], 
     "]"}], ":=", 
    RowBox[{"Block", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "betaModelp", ",", "DeltPhaseExpp", ",", "theorPhasep", ",", 
        "betaFromPhase1", ",", "DeltPhaseEx", ",", "betaFromPhaseMassive", 
        ",", "DeltPhaseExp", ",", "deltPhaseExp9$11", ",", 
        "deltPhaseTheor9$11", ",", "bet9", ",", "bet11"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"betaModelp", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"betaModel", "[", 
            RowBox[{"[", "54", "]"}], "]"}], "}"}], ",", "betaModel", ",", 
          RowBox[{"{", 
           RowBox[{"betaModel", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "]"}]}], ";", "\n", 
       RowBox[{"Length", "[", "betaModelp", "]"}], ";", "\n", 
       RowBox[{"DeltPhaseExp", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"amplAndPhaseData", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{"id", "+", "1"}], ",", " ", "54", ",", " ", "1"}], 
                 "]"}], ",", " ", "2"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"amplAndPhaseData", "[", 
              RowBox[{"[", 
               RowBox[{"id", ",", " ", "2"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"id", " ", "\[Equal]", " ", "1"}], ",", " ", 
               RowBox[{
                RowBox[{"amplAndPhaseData", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], "*", "2", "*", 
                "Pi"}], ",", " ", "0"}], "]"}], "-", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"id", " ", "\[Equal]", " ", "33"}], ",", " ", 
               RowBox[{
                RowBox[{"amplAndPhaseData", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], "*", "2", "*", 
                "Pi"}], ",", " ", "0"}], "]"}], "+", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"id", " ", "\[Equal]", " ", "36"}], ",", " ", 
               RowBox[{
                RowBox[{"amplAndPhaseData", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], "*", "2", "*", 
                "Pi"}], ",", " ", "0"}], "]"}]}], ",", " ", 
            RowBox[{"2", "*", "Pi"}], ",", " ", 
            RowBox[{"-", "Pi"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"id", ",", " ", "1", ",", " ", "54"}], "}"}]}], "]"}]}], 
       " ", ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"DeltPhaseExp", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"amplAndPhaseData", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             RowBox[{
              RowBox[{"amplAndPhaseData", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               RowBox[{"Length", "[", "amplAndPhaseData", "]"}], "-", "1"}]}],
              "}"}]}], "]"}]}], ";"}], "*)"}], "\n", 
       RowBox[{"DeltPhaseExpp", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"DeltPhaseExp", "[", 
            RowBox[{"[", "54", "]"}], "]"}], "}"}], ",", "DeltPhaseExp"}], 
         "]"}]}], ";", "\n", 
       RowBox[{"Length", "[", "DeltPhaseExpp", "]"}], ";", "\n", 
       RowBox[{"theorPhasep", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"theorPhase", "[", 
            RowBox[{"[", "54", "]"}], "]"}], "}"}], ",", "theorPhase"}], 
         "]"}]}], ";", "\n", 
       RowBox[{"Length", "[", "theorPhasep", "]"}], ";", "\n", 
       RowBox[{"betaFromPhase1", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"betaModelp", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cot", "[", 
                RowBox[{"DeltPhaseExpp", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "-", "1"}], "]"}], "]"}], "]"}], "+", 
               RowBox[{"Cot", "[", 
                RowBox[{"DeltPhaseExpp", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cot", "[", 
                RowBox[{"theorPhasep", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "-", "1"}], "]"}], "]"}], "]"}], "+", 
               RowBox[{"Cot", "[", 
                RowBox[{"theorPhasep", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ")"}]}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2", ",", 
            RowBox[{"bpm$count", "+", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
       ";", "\n", 
       RowBox[{
        RowBox[{"betaFromPhase1", "[", 
         RowBox[{"[", "10", "]"}], "]"}], "=", "\"\<non\>\""}], ";", "\n", 
       RowBox[{"deltPhaseExp9$11", "=", 
        RowBox[{
         RowBox[{"amplAndPhaseData", "[", 
          RowBox[{"[", 
           RowBox[{"11", ",", "2"}], "]"}], "]"}], "-", 
         RowBox[{"amplAndPhaseData", "[", 
          RowBox[{"[", 
           RowBox[{"9", ",", "2"}], "]"}], "]"}]}]}], ";", "\n", 
       RowBox[{"deltPhaseTheor9$11", "=", 
        RowBox[{
         RowBox[{"theorPhase", "[", 
          RowBox[{"[", "9", "]"}], "]"}], "+", 
         RowBox[{"theorPhase", "[", 
          RowBox[{"[", "10", "]"}], "]"}]}]}], ";", "\n", 
       RowBox[{"bet9", "=", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"betaModelp", "[", 
           RowBox[{"[", "10", "]"}], "]"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cot", "[", 
              RowBox[{"DeltPhaseExpp", "[", 
               RowBox[{"[", "9", "]"}], "]"}], "]"}], "+", 
             RowBox[{"Cot", "[", "deltPhaseExp9$11", "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cot", "[", 
              RowBox[{"theorPhasep", "[", 
               RowBox[{"[", "9", "]"}], "]"}], "]"}], "+", 
             RowBox[{"Cot", "[", "deltPhaseTheor9$11", "]"}]}], ")"}]}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"bet11", "=", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"betaModelp", "[", 
           RowBox[{"[", "12", "]"}], "]"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cot", "[", "deltPhaseExp9$11", "]"}], "+", 
             RowBox[{"Cot", "[", 
              RowBox[{"DeltPhaseExpp", "[", 
               RowBox[{"[", "12", "]"}], "]"}], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cot", "[", "deltPhaseTheor9$11", "]"}], "+", 
             RowBox[{"Cot", "[", 
              RowBox[{"theorPhasep", "[", 
               RowBox[{"[", "12", "]"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}], 
       ";", "\n", 
       RowBox[{"betaFromPhase1", "=", 
        RowBox[{"ReplacePart", "[", 
         RowBox[{"betaFromPhase1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"9", "\[Rule]", "bet9"}], ",", 
            RowBox[{"11", "\[Rule]", "bet11"}]}], "}"}]}], "]"}]}]}]}], "\n", 
     RowBox[{"(*", 
      RowBox[{"betaFromPhase", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"betaFromPhase1", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "betaFromPhase1", "]"}]}], "}"}]}], "]"}]}],
       "*)"}], "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"betaFromPhase1", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"betaModelp", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cot", "[", 
                   RowBox[{"DeltPhaseExpp", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "2"}], "]"}], "]"}], "]"}], "-", 
                  RowBox[{"Cot", "[", 
                   RowBox[{
                    RowBox[{"DeltPhaseExpp", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "+", 
                    RowBox[{"DeltPhaseExpp", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "2"}], "]"}], "]"}]}], "]"}]}], ")"}], 
                "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cot", "[", 
                   RowBox[{"theorPhasep", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "2"}], "]"}], "]"}], "]"}], "-", 
                  RowBox[{"Cot", "[", 
                   RowBox[{
                    RowBox[{"theorPhasep", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "+", 
                    RowBox[{"theorPhasep", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "2"}], "]"}], "]"}]}], "]"}]}], 
                 ")"}]}]}], "]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"betaModelp", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cot", "[", 
                   RowBox[{"DeltPhaseExpp", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "]"}], "+", 
                  RowBox[{"Cot", "[", 
                   RowBox[{"DeltPhaseExpp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cot", "[", 
                   RowBox[{"theorPhasep", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "]"}], "+", 
                  RowBox[{"Cot", "[", 
                   RowBox[{"theorPhasep", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ")"}]}]}], "]"}],
              "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"betaModelp", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cot", "[", 
                   RowBox[{
                    StyleBox["DeltPhaseExpp",
                    FontWeight->"Bold"], "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}], "-", 
                  RowBox[{"Cot", "[", 
                   RowBox[{
                    RowBox[{"DeltPhaseExpp", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "+", 
                    RowBox[{"DeltPhaseExpp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cot", "[", 
                   RowBox[{"theorPhasep", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}], "-", 
                  RowBox[{"Cot", "[", 
                   RowBox[{
                    RowBox[{"theorPhasep", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "+", 
                    RowBox[{"theorPhasep", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ")"}]}]}], 
              "]"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3", ",", 
            RowBox[{"bpm$count", "+", "2"}], ",", "1"}], "}"}]}], "]"}]}], 
       ";"}], "*)"}], "\n", 
     RowBox[{"(*", 
      RowBox[{"betaFromPhaseMassive", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"betaFromPhase1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"betaFromPhase1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"betaFromPhase1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "}"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"betaFromPhase1", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "3", ",", 
             RowBox[{
              RowBox[{"Length", "[", "betaFromPhase1", "]"}], "-", "2"}]}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"betaFromPhase1", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Length", "[", "betaFromPhase1", "]"}], "-", "1"}], 
               "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"betaFromPhase1", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Length", "[", "betaFromPhase1", "]"}], "-", "1"}], 
               "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"betaFromPhase1", "[", 
             RowBox[{"[", 
              RowBox[{"Length", "[", "betaFromPhase1", "]"}], "]"}], "]"}], 
            "[", 
            RowBox[{"[", "1", "]"}], "]"}], "}"}], "}"}]}], "]"}]}], "*)"}], 
     "\n", "]"}]}]}]}]], "Code",
 CellChangeTimes->{
  3.827197426088817*^9, {3.827198282859421*^9, 3.8271982992686234`*^9}, {
   3.827198336201497*^9, 3.82719838631446*^9}, {3.827198427608919*^9, 
   3.827198429111168*^9}, {3.827198557575631*^9, 3.8271985668368297`*^9}, 
   3.827198617976087*^9, {3.827198658133216*^9, 3.827198952875272*^9}, {
   3.827199022140627*^9, 3.8271990581170745`*^9}, {3.82719909400753*^9, 
   3.8271990941294703`*^9}, {3.827199186154127*^9, 3.827199221445007*^9}, {
   3.827204552560258*^9, 3.8272047278002443`*^9}, {3.8272048218719397`*^9, 
   3.827204822671855*^9}, {3.8272049612873473`*^9, 3.827204961418498*^9}, 
   3.827205151671059*^9, {3.827205330836753*^9, 3.827205359905258*^9}, {
   3.8272054466295385`*^9, 3.827205526461063*^9}, {3.8272055607651744`*^9, 
   3.827205561669833*^9}, {3.827205824409975*^9, 3.827205838894021*^9}, 
   3.8272059037119856`*^9, {3.827206070529018*^9, 3.8272061611695833`*^9}, {
   3.8272067799566483`*^9, 3.8272068056589375`*^9}, {3.8272068576116447`*^9, 
   3.8272070690783167`*^9}, {3.827207108232736*^9, 3.8272071391353865`*^9}, 
   3.82721150749188*^9, 3.8272117036233044`*^9, {3.8272141876187687`*^9, 
   3.8272142070551443`*^9}, {3.827214359430418*^9, 3.8272143600862055`*^9}, 
   3.8272153290073442`*^9, 3.827215376459967*^9, {3.8272823779007864`*^9, 
   3.827282423983735*^9}, {3.8272824872234893`*^9, 3.8272825682141113`*^9}, 
   3.8272828516129737`*^9, {3.8279226608382196`*^9, 3.8279226701166573`*^9}, {
   3.8279227903898253`*^9, 3.8279228797943816`*^9}, {3.8279229321779003`*^9, 
   3.8279229371364813`*^9}, {3.8279241357841096`*^9, 3.8279241440041647`*^9}, 
   3.8279244997581367`*^9, {3.827924938818339*^9, 3.8279249981621175`*^9}, {
   3.8279250741148396`*^9, 3.827925075131493*^9}, {3.8279251085638533`*^9, 
   3.8279252086494665`*^9}, {3.8279252401169233`*^9, 
   3.8279252583353505`*^9}, {3.827925301099075*^9, 3.827925353795431*^9}, {
   3.8279253928325615`*^9, 3.827925486267435*^9}, {3.8279257119724274`*^9, 
   3.8279257217820787`*^9}, {3.827925836575137*^9, 3.827925911671851*^9}, {
   3.827925941733238*^9, 3.827925974436178*^9}, {3.8279260496721797`*^9, 
   3.8279260926845694`*^9}, {3.827926344548684*^9, 3.82792636432353*^9}, {
   3.827926499240838*^9, 3.827926499387643*^9}, {3.8279265631387625`*^9, 
   3.8279265632859077`*^9}, {3.8279267399713383`*^9, 
   3.8279267471505527`*^9}, {3.827927709864891*^9, 3.827927725814393*^9}, 
   3.827927771873475*^9, {3.8279278218817115`*^9, 3.827927828071281*^9}, 
   3.827928013319561*^9, {3.8279284328382187`*^9, 3.827928554505924*^9}, {
   3.8279290347195964`*^9, 3.8279290878872347`*^9}, {3.8279291242115283`*^9, 
   3.8279292768233075`*^9}, {3.8279293076292105`*^9, 3.827929458207901*^9}, {
   3.827929525025894*^9, 3.8279295336662335`*^9}, 3.8279298956290913`*^9, {
   3.8279317020528765`*^9, 3.8279317081778817`*^9}, {3.827931751901884*^9, 
   3.8279317658781796`*^9}, {3.8279318058867693`*^9, 
   3.8279318528340282`*^9}, {3.8279318919886465`*^9, 3.827932063211644*^9}, {
   3.827932210290639*^9, 3.827932227277639*^9}, {3.827933130557108*^9, 
   3.8279331338442907`*^9}, {3.827933258238948*^9, 3.827933259403513*^9}, {
   3.8280089022939963`*^9, 3.8280089078246284`*^9}, {3.828008937858917*^9, 
   3.828008990860978*^9}, {3.828009665774168*^9, 3.8280097063244777`*^9}, {
   3.8280097441684475`*^9, 3.8280097695336337`*^9}, {3.8280099620413647`*^9, 
   3.8280099626386175`*^9}, {3.828009996433916*^9, 3.8280100245375395`*^9}, 
   3.8280122421796236`*^9, {3.828012286732626*^9, 3.8280123877739444`*^9}, {
   3.8280124253755836`*^9, 3.8280125869680862`*^9}, 3.828016374232724*^9, {
   3.8280190678634815`*^9, 3.8280190853428097`*^9}, {3.828268172398432*^9, 
   3.828268222327898*^9}, {3.828268258978706*^9, 3.8282683053643923`*^9}, {
   3.828268343002713*^9, 3.8282685240889425`*^9}, {3.828268554995661*^9, 
   3.8282685794937687`*^9}, {3.828269042842805*^9, 3.828269059106718*^9}, {
   3.828269261366499*^9, 3.828269660891148*^9}, {3.828269821566449*^9, 
   3.828269899900519*^9}, 3.828269972980322*^9, {3.8282700729351826`*^9, 
   3.828270073700779*^9}, {3.828270285971681*^9, 3.8282702861435165`*^9}, {
   3.828270584278449*^9, 3.828270637249265*^9}, {3.828270725125577*^9, 
   3.8282707321557236`*^9}, {3.8282707648607206`*^9, 3.828270772099696*^9}, {
   3.8282712633452435`*^9, 3.8282713821756325`*^9}, {3.8282714576639194`*^9, 
   3.828271503142728*^9}, {3.8282716150175285`*^9, 3.8282717000729666`*^9}, {
   3.828271742706545*^9, 3.82827175223921*^9}, {3.8282719742161646`*^9, 
   3.8282720124921*^9}, {3.828272292189502*^9, 3.828272398346738*^9}, {
   3.828272454123045*^9, 3.8282724609644566`*^9}, {3.8282724959129586`*^9, 
   3.8282725027558317`*^9}, {3.8282725554234867`*^9, 3.828272592780015*^9}, {
   3.828272634617296*^9, 3.8282726533853073`*^9}, {3.828272822436057*^9, 
   3.828272890165168*^9}, {3.828272955726567*^9, 3.828273017585728*^9}, {
   3.8282731071995087`*^9, 3.82827327022622*^9}, {3.8282733641395507`*^9, 
   3.8282735467325373`*^9}, {3.828273578454198*^9, 3.8282736464480944`*^9}, {
   3.828273732468233*^9, 3.828273735482459*^9}, {3.8282737668237286`*^9, 
   3.828273796069688*^9}, 3.828274149414448*^9, {3.8282763523886175`*^9, 
   3.8282763526045237`*^9}, {3.8283505529595394`*^9, 
   3.8283506098072205`*^9}, {3.828517416125991*^9, 3.828517430205721*^9}, {
   3.8285175582219725`*^9, 3.8285175646989927`*^9}, {3.828517705509946*^9, 
   3.8285177119454403`*^9}, {3.8285181666625757`*^9, 3.82851816722529*^9}, 
   3.8285188300283837`*^9, 3.828518879235729*^9, {3.82851923893116*^9, 
   3.8285192391782165`*^9}, {3.8285267929016943`*^9, 
   3.8285267944189863`*^9}, {3.828530148540061*^9, 3.828530158814907*^9}, 
   3.82853020249203*^9, {3.8292244828323317`*^9, 3.8292244860078125`*^9}, {
   3.829224725992037*^9, 3.8292248164956574`*^9}, {3.8292291061209517`*^9, 
   3.8292291460561867`*^9}, {3.8296258402963424`*^9, 
   3.8296258456183453`*^9}, {3.8296260720782137`*^9, 
   3.8296260774137173`*^9}, {3.829626855036058*^9, 3.8296268786810675`*^9}, {
   3.8296270424598475`*^9, 3.829627047870241*^9}, {3.829627184492219*^9, 
   3.829627194072403*^9}, {3.829628303554182*^9, 3.8296283044489126`*^9}, {
   3.8296308852361937`*^9, 3.829630889209688*^9}, {3.8296310651228385`*^9, 
   3.829631070127206*^9}, 3.8296314593103347`*^9, 3.829631494005138*^9, {
   3.8296315570847273`*^9, 3.8296316110349383`*^9}, {3.829631656698023*^9, 
   3.829631664504328*^9}, {3.8296317730417385`*^9, 3.8296318370509415`*^9}, {
   3.829631897527207*^9, 3.829631951100871*^9}, 3.8296403439413176`*^9, {
   3.829814390847829*^9, 3.8298144037510524`*^9}, 3.8298146136293564`*^9, {
   3.829814649956599*^9, 3.8298147555866423`*^9}, {3.829814799335704*^9, 
   3.8298148349751377`*^9}, {3.829815025001884*^9, 3.829815044595564*^9}, {
   3.829815257710801*^9, 3.829815257995077*^9}, 3.829815289032714*^9, 
   3.8298153213357773`*^9, {3.829815417152254*^9, 3.829815420787573*^9}, {
   3.8298155127098775`*^9, 3.829815515494272*^9}, 3.829815833001113*^9, {
   3.8298159307696805`*^9, 3.8298159308857136`*^9}, {3.8298161275806723`*^9, 
   3.82981623626413*^9}, {3.8298165361752357`*^9, 3.8298165363440957`*^9}, {
   3.829816678743116*^9, 3.8298166837157373`*^9}, {3.8298167193985643`*^9, 
   3.8298167345208693`*^9}, {3.829816970688548*^9, 3.829816996962777*^9}, {
   3.829817036177074*^9, 3.8298171531045723`*^9}, {3.829817236627269*^9, 
   3.8298174415358286`*^9}, {3.829817596007121*^9, 3.8298176557780356`*^9}, {
   3.829817700584589*^9, 3.829817716095399*^9}, {3.8298177705702395`*^9, 
   3.8298177851806507`*^9}},
 CellLabel->
  "In[575]:=",ExpressionUUID->"91f571e2-00d4-4bc6-812e-98dc5134f070"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Calculate", " ", "Signal"}], "  ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"X", ":", "k"}], "=", "1"}], ";", "  ", 
    RowBox[{
     RowBox[{"Y", ":", "k"}], "=", "2"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"signalProc", "[", 
    RowBox[{"data_", ",", "k_", ",", "len_"}], "]"}], ":=", 
   RowBox[{"Block", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"signal", ",", "midlefreq", ",", "Ampl"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"signal", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "k", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "data", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"data", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"midlefreq", "=", 
       RowBox[{"Mean", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"CalculateFreq", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Drop", "[", 
              RowBox[{"signal", ",", 
               RowBox[{"{", 
                RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"Length", "[", 
             RowBox[{"signal", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "signal", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}], "]"}]}], ";", "\n", 
      RowBox[{"Ampl", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"calculateAmplandPhase", "[", 
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", 
              RowBox[{"1", ";;", "len"}], ",", " ", "k"}], "]"}], "]"}], ",", 
           "midlefreq"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "signal", "]"}]}], "}"}]}], "]"}]}]}]}], 
    "\n", "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.827197426088817*^9, {3.827198282859421*^9, 3.8271982992686234`*^9}, {
   3.827198336201497*^9, 3.82719838631446*^9}, {3.827198427608919*^9, 
   3.827198429111168*^9}, {3.827198557575631*^9, 3.8271985668368297`*^9}, 
   3.827198617976087*^9, {3.827198658133216*^9, 3.827198952875272*^9}, {
   3.827199022140627*^9, 3.8271990581170745`*^9}, {3.82719909400753*^9, 
   3.8271990941294703`*^9}, {3.827199186154127*^9, 3.827199221445007*^9}, {
   3.827204552560258*^9, 3.8272047278002443`*^9}, {3.8272048218719397`*^9, 
   3.827204822671855*^9}, {3.8272049612873473`*^9, 3.827204961418498*^9}, 
   3.827205151671059*^9, {3.827205330836753*^9, 3.827205359905258*^9}, {
   3.8272054466295385`*^9, 3.827205526461063*^9}, {3.8272055607651744`*^9, 
   3.827205561669833*^9}, {3.827205824409975*^9, 3.827205838894021*^9}, 
   3.8272059037119856`*^9, {3.827206070529018*^9, 3.8272061611695833`*^9}, {
   3.8272067799566483`*^9, 3.8272068056589375`*^9}, {3.8272068576116447`*^9, 
   3.8272070690783167`*^9}, {3.827207108232736*^9, 3.8272071391353865`*^9}, 
   3.82721150749188*^9, 3.8272117036233044`*^9, {3.8272141876187687`*^9, 
   3.8272142070551443`*^9}, {3.827214359430418*^9, 3.8272143600862055`*^9}, 
   3.8272153290073442`*^9, 3.827215376459967*^9, {3.827216664114671*^9, 
   3.8272167307103148`*^9}, {3.827216811980519*^9, 3.8272168154969807`*^9}, {
   3.827216911865579*^9, 3.8272170398699293`*^9}, {3.827217188019002*^9, 
   3.8272171887751827`*^9}, 3.827217331312521*^9, {3.827225607940216*^9, 
   3.827225608109233*^9}, 3.8272256628852215`*^9, {3.827225895350099*^9, 
   3.827225903637212*^9}, {3.827226029114352*^9, 3.827226049928774*^9}, {
   3.827226152183095*^9, 3.827226163783845*^9}, {3.827226194572822*^9, 
   3.827226194888917*^9}, {3.8272262475954037`*^9, 3.8272262477799377`*^9}, 
   3.8272264232620115`*^9, {3.827228139933781*^9, 3.8272281409567957`*^9}, 
   3.8284291705486765`*^9, {3.8284295539830837`*^9, 3.828429586215954*^9}, 
   3.8284296188216143`*^9, {3.828429695436594*^9, 3.8284297060090384`*^9}, {
   3.8292197306238008`*^9, 3.829219768244198*^9}, {3.8292198048203816`*^9, 
   3.8292198934563093`*^9}, {3.8292199385617175`*^9, 3.829219982711648*^9}, {
   3.8292200247103367`*^9, 3.829220039738661*^9}, {3.8292200713451653`*^9, 
   3.8292201062088995`*^9}, {3.8292203319272757`*^9, 
   3.8292204419401035`*^9}, {3.829220582569029*^9, 3.829220599226482*^9}, {
   3.8292206739396515`*^9, 3.829220751260302*^9}, {3.829220839356714*^9, 
   3.8292208452758555`*^9}, {3.82922088166457*^9, 3.8292208824384985`*^9}, 
   3.8292215033061485`*^9, {3.8292235067336206`*^9, 3.829223516306994*^9}, {
   3.8292237507531033`*^9, 3.8292237528564467`*^9}, {3.8296182000906935`*^9, 
   3.8296182004752493`*^9}, {3.829618470289775*^9, 3.8296185213167443`*^9}, {
   3.8298139657585216`*^9, 3.829814046681361*^9}, {3.8298141568015876`*^9, 
   3.8298141778553753`*^9}, {3.829814248507146*^9, 3.829814272291072*^9}, {
   3.829814314321057*^9, 3.82981431535296*^9}},
 CellLabel->
  "In[577]:=",ExpressionUUID->"4857fdaa-0fc8-446f-a120-342a01d88dba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"signalProc", "[", 
    RowBox[{"dataExp", ",", "1", ",", "128"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"12ecd1f4-8ffc-48f2-9cda-51e21a60e86a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmpX", " ", "=", " ", 
   RowBox[{"Table", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"bpm$fx", "[", 
        RowBox[{"[", "id", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"tmp", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"id", "+", "1"}], ",", " ", "54", ",", " ", "1"}], 
              "]"}], ",", " ", "2"}], "]"}], "]"}], " ", "-", " ", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", 
            RowBox[{"id", ",", " ", "2"}], "]"}], "]"}], " ", "-", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"id", " ", "\[Equal]", " ", "1"}], ",", " ", 
            RowBox[{
             RowBox[{"tmp", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], "*", "2", "*", 
             "Pi"}], ",", " ", "0"}], "]"}], "-", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"id", " ", "\[Equal]", " ", "33"}], ",", " ", 
            RowBox[{
             RowBox[{"tmp", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], "*", "2", "*", 
             "Pi"}], ",", " ", "0"}], "]"}], "+", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"id", " ", "\[Equal]", " ", "36"}], ",", " ", 
            RowBox[{
             RowBox[{"tmp", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], "*", "2", "*", 
             "Pi"}], ",", " ", "0"}], "]"}]}], ",", " ", 
         RowBox[{"2", "*", "Pi"}], ",", " ", 
         RowBox[{"-", "Pi"}]}], "]"}], ","}], "\n", "\t\t", "\n", "\t", "}"}],
      ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"id", ",", " ", "1", ",", " ", "54"}], "}"}]}], "\n", "]"}]}], 
  " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "tmpX", "]"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"PointSize", "[", "Large", "]"}], ",", " ", "Black"}], 
           "]"}], ",", " ", "Red"}], "}"}]}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Delt phase model\>\"", ",", "\"\<Calculated Delt phase\>\""}], 
         "}"}]}], ",", 
       RowBox[{"ImageSize", " ", "\[Rule]", " ", "500"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Delt phase\>\""}]}], "]"}], ",", 
     "\n", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Cot", "[", 
        RowBox[{"Transpose", "[", "tmpX", "]"}], "]"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"PointSize", "[", "Large", "]"}], ",", " ", "Black"}], 
           "]"}], ",", " ", "Red"}], "}"}]}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Delt phase model\>\"", ",", "\"\<Calculated Delt phase\>\""}], 
         "}"}]}], ",", 
       RowBox[{"ImageSize", " ", "\[Rule]", " ", "500"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Cot(Delt phase)\>\""}]}], "]"}]}],
     "\n", "}"}], "//", "List"}], "//", "Grid"}]}], "Code",
 CellChangeTimes->{
  3.827197426088817*^9, {3.827198282859421*^9, 3.8271982992686234`*^9}, {
   3.827198336201497*^9, 3.82719838631446*^9}, {3.827198427608919*^9, 
   3.827198429111168*^9}, {3.827198557575631*^9, 3.8271985668368297`*^9}, 
   3.827198617976087*^9, {3.827198658133216*^9, 3.827198952875272*^9}, {
   3.827199022140627*^9, 3.8271990581170745`*^9}, {3.82719909400753*^9, 
   3.8271990941294703`*^9}, {3.827199186154127*^9, 3.827199221445007*^9}, {
   3.827204552560258*^9, 3.8272047278002443`*^9}, {3.8272048218719397`*^9, 
   3.827204822671855*^9}, {3.8272049612873473`*^9, 3.827204961418498*^9}, 
   3.827205151671059*^9, {3.827205330836753*^9, 3.827205359905258*^9}, {
   3.8272054466295385`*^9, 3.827205526461063*^9}, {3.8272055607651744`*^9, 
   3.827205561669833*^9}, {3.827205824409975*^9, 3.827205838894021*^9}, 
   3.8272059037119856`*^9, {3.827206070529018*^9, 3.8272061611695833`*^9}, {
   3.8272067799566483`*^9, 3.8272068056589375`*^9}, {3.8272068576116447`*^9, 
   3.8272070690783167`*^9}, {3.827207108232736*^9, 3.8272071391353865`*^9}, 
   3.82721150749188*^9, 3.8272117036233044`*^9, {3.8272141876187687`*^9, 
   3.8272142070551443`*^9}, {3.827214359430418*^9, 3.8272143600862055`*^9}, 
   3.8272153290073442`*^9, 3.827215376459967*^9, 3.827902129792162*^9, {
   3.827902915594882*^9, 3.827902916333785*^9}, 3.827908503583885*^9, {
   3.8279085636484876`*^9, 3.8279085644114456`*^9}, {3.828016065346431*^9, 
   3.82801608593821*^9}, 3.8280172322826242`*^9, 3.8280172625037465`*^9, {
   3.828017301672845*^9, 3.8280173022280164`*^9}, {3.8280184401093483`*^9, 
   3.8280184463890123`*^9}, 3.828018963326889*^9, 3.828019299298891*^9, 
   3.828056256557631*^9, {3.8280577335896826`*^9, 3.8280577343137493`*^9}, {
   3.8280580832854295`*^9, 3.828058087439319*^9}, {3.828058121811386*^9, 
   3.8280581225145054`*^9}, {3.8280581527187214`*^9, 3.828058179238793*^9}, {
   3.8280593470729127`*^9, 3.828059364815459*^9}, {3.8282754299103217`*^9, 
   3.8282756617123423`*^9}, {3.82827633142671*^9, 3.8282763317429085`*^9}, {
   3.8283489147498913`*^9, 3.828348942937025*^9}, {3.828348980534913*^9, 
   3.82834902712753*^9}, {3.8284343645096836`*^9, 3.8284344073364625`*^9}, {
   3.8284344506727734`*^9, 3.828434452557824*^9}, 3.828434532052945*^9, {
   3.8284346805957417`*^9, 3.828434704513351*^9}, {3.828434803724147*^9, 
   3.8284348230321097`*^9}, {3.8284348629748545`*^9, 
   3.8284348679142694`*^9}, {3.8285176501958523`*^9, 3.828517686696538*^9}, {
   3.8285179338443947`*^9, 3.82851794485418*^9}, {3.8285180507839513`*^9, 
   3.828518068784422*^9}, 3.8285198663894725`*^9, {3.8285232261130953`*^9, 
   3.8285232651943254`*^9}, {3.8285240049525757`*^9, 
   3.8285240092956715`*^9}, {3.8285288282864847`*^9, 3.8285288791846423`*^9}, 
   3.8285289149597006`*^9, {3.828528978105982*^9, 3.828528996452592*^9}, {
   3.828529070671118*^9, 3.828529081015851*^9}, {3.829638274285959*^9, 
   3.8296382852666864`*^9}, 3.829638521474373*^9, {3.8296385517019396`*^9, 
   3.8296385615353975`*^9}, {3.8296387217102027`*^9, 
   3.8296387640086718`*^9}, {3.8296388440431557`*^9, 3.8296388958967257`*^9}, 
   3.829638929719447*^9, {3.8296390891476836`*^9, 3.8296390953104687`*^9}, {
   3.8296393524936886`*^9, 3.829639385411916*^9}, {3.8296400216205606`*^9, 
   3.8296400291926622`*^9}, 3.829640176102764*^9, {3.8296402403319874`*^9, 
   3.829640257373907*^9}, {3.829640311298774*^9, 3.8296403245248375`*^9}, 
   3.8296405452090845`*^9, {3.8296405760236387`*^9, 3.8296405928974857`*^9}, {
   3.8296406275201216`*^9, 3.8296407565608034`*^9}, {3.829640788719697*^9, 
   3.829640865452622*^9}, {3.8296409051330695`*^9, 3.829640943766222*^9}, {
   3.829813736326651*^9, 3.8298137738854733`*^9}, {3.8298138151827774`*^9, 
   3.8298138574498024`*^9}, {3.829813896498881*^9, 3.829813927185247*^9}, {
   3.829814065451295*^9, 3.8298140836852055`*^9}, {3.82981433273569*^9, 
   3.8298143521458406`*^9}, {3.829817849510941*^9, 3.829817893057517*^9}, {
   3.829817966410164*^9, 3.82981797445193*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"069d5113-f8d0-4da4-acf3-c44228a5cde5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[Large], 
             GrayLevel[0]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQDQEf7NddlaidY/vRHirgsMDPwHDKwldQPofDmp4z
8+crf4LyBRy4vCbEJZ+FqRdxWPFOc2GFHUxewmHCW3nj+pcweRmHP7xcJ388
gvEVHH54ZV7Wd4CpV3JgWNw989hFmLyKwwzHlkbH/zC+mkNHLcc2exOYeg2H
itMqFxdH/YDytRw2GDjs+DjhAZSv42Dg+f7vZzGYej0Hh3m18gfbYXwDB4Hb
AXNjM2DmGzp8YHDd4W0LkzdySHijUvHBD8Y3drjA8u4zXwpMvQnQ/KD41dUw
eVOHAqaFhx+zwvhmDg5fv898M+sulG/ucMD6tP8unpdQvoXDg5krs5dtfQzl
WzowrH7MFMp2Dsq3cmDgmPSE5d56KN/awcI6QdP+MasDhG+DJm/rwLAcWb+d
w4JpyObbOzRYINvv4MDwE8l9DQ4OE1iQ3e/o0OCK5L8GR4cFrMj+d3JoeIcU
Pg1ODg/+uSCFn7PDgbtI4dvg7NCAEv4uDg3ND9VyFj6Dyrs4HLC37c2VfQeV
d3U4cAYpfhtcHRyqkePfzUHBFSl9NLg5JCxETj/uDgzI6avB3SFBADn9eTg4
vEZKnw1A/nvk9OvpwOCLlL4bPB0aupDTv5fDAeT80eDlwHADOf94OzCsDXtq
9fy6PQB1L/wU
             "]]}, {
            Directive[
             PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1:eJw10WtIk1EYB/C5kqSJjFxoUbKJmoSYS52XzP29bOqcCC5hlX1R01zZTVDT
yLeWUCBWH1wflNJQF93UHHmpKFQYmmXF8IIXNsOcUjQvqxWFFTvPCy8vv/f/
nHN4niPJP5NznM/j8WT/3v9f9+OQN9v1+wzRK3L2AzPdompz4jKzFx7J3nio
+JQLoSgtWJvikUWw5tTGnhKuM/tDoFPlla07mHfh11pwW5VslVmMgL7eI1uc
5EB0FahfCso8X7sdBG/Tk5W2Gecrt0MAyfhQjI3qQzEqdVkN7T+Y98LYt7j1
5LiNOQy66u4HEhGdH44T4sUWk9cacwS0DXt+SudpPymeCS3GHbFUvx/Fp79w
xWrqJxIOP1vc3XLqNwr9F7P0fQJyNHIvrcquSqheBm3Np9mE7bPMMYhQX1CJ
Sz8zx6Ip+F7tkN3KHIfK0DFNi/875ng019+3m81dzAfwh9+UN1jvCbcT0Hts
unFOSvlB2L/etn54T+sTYRob1IdV0Tzk+CgdUvQI7cyAq8wYfujytNsc4L0w
f7T/PM0jCSPmjVs1I8xcEjQTHTcgoX6TkeuLeOcU5clw6vgleiWtT0Hlb+Ny
6zlWz6VAnK1oWJ6mPBXX1KNng6PZPLhU3EywPh+8TvNXgNsZYLGNuliuQKDH
07ptbylXovN7lqGI7odTotw3xKfDRXkaSjTy7E1FdH4agnzy7vgN0/2no8JX
N7BUwOq5dEwKMqtb8ynPQE+nwVFRR/1l4PDuyM1zD7+xXIXHlsJhrXqJ5Sp0
R20MFC7Q+kz4TzZeKX0xIf8Ly84DmQ==
             "]]}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Delt phase\"", TraditionalForm], 
         PlotRange -> {{0, 54.}, {-2.6811747349679185`, 2.7359603149883718`}},
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Delt phase model\"", "\"Calculated Delt phase\""}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], 
               ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[Large], 
             GrayLevel[0]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQDQEf7Ddv5PO8ZPzQHirg0BfyoGyO0lson8PBm7cr
2PP5XShfwKFxq9Dqo/33oXwRB7Vtano3U2DyEg5RyudKy1hg8jIOj3d3vNiu
AuMrOHR/FbbuioGpV3K4vsOS/XslTF7F4WjxBTWnmfegfDUHK573pdnTYOo1
HFh7vR79er8Cytdy0Dh5WstG4g+Ur+OwroklUF4Vpl/P4eNmc969LHegfAOH
UHaDYrNjD6B8Q4clqzY/78qCmW/ksDfE1cJKFMY3driyrsLP+CJMvYnDSp3e
L1l2MPNMHZpL/p1aVwGzz8yhlE2m7hMXgwOEb+7AtvGunr/oB6i8hQOnUn2a
5uxvUL6lQ40Wm770XgGoeisHq/MRy/ZzG0D51g4TVwTceLGA6QCEb4Mmb+tw
RgdZv53DCzVk8+0dvLcg2+/gIM2C5L4GBwfxLGT3Ozp42iH5r8HR4eAaZP87
OdR4IYVPg5PD4i3I4efsUM2AFL4Nzg4HNiGHv4tD6L+4yfk7PkHlXRykJUVY
jQKfQ+VdHd4kI8Vvg6uDrzhy/Ls5ZCchpY8GN4cXB5DTj7uDzS+k9NXg7sC/
ATn9eTic0ENKnw0eDm6bkdOvp8OJZUjpu8HT4YE4cvr3cghCzh8NXg7bVyPn
H2+H63uu7hDMYnEAABcw7JU=
             "]]}, {
            Directive[
             PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1:eJw1kXtI01EUx39agUg0rchKybTwESq+8q37bjr3MEG0HCWNiBQDK4qof5R+
zEhsJCYMRNNhmYZRw9EwFZqG0hQXiY+5ZpipSAznmmHL9UfFzr1wuXzu59xz
7zk34vKN0kp/juPS/s3/q2+4hFpLx3SDbFlIG1BHu+bLbBvEAWhqVvZsW5gP
wqcQ3ezQNOOD0A/srB/zzhIfxrCmb7HQzXwY3s41lLVqvhAfx0Rknvq932fi
SDxvLaqXR3Dw8Uk42tT3HzdOmnwcBVNwwhWJisXHoK5S2Wn4MEB8CrIY1/pY
32/iOMR6rJ3lZavECTgbe/1jdo+NOBECQbPFcJ7lS4I+aqB+07lCnAxvqcD7
wj1DnIKpA2s3nV1fiVOxZ9wcLzOy+k5DZdef4PWs/jQMt4+OiC6xetLxqPva
zMK2m3wGniWVpORWe4kz8T38iUFjCKL4LPiplC12UxxxNtL/HKnq6udGfJwD
hzMwp3g4nnwuMqtnVxwKdj4PjjNKla50h/ILUXHIvGk5+oMYuNjv9spv+/ni
ecBUrRxNvLpIXoSmsWXntJn6w4vQMRlfk1rH6hVjv/iWLZ9nXozePm5jI5f9
bz50g/7d2tfULz4fg3tFgSF3Wb8L0Fjxrt2YtUW+APUj1nbvPtZ/CVz2Nn2M
VEteAk/ouWLVhW/kCzEebOResf/hC3EvbrQmep29T4pw09KDtCl2vxRwlXu2
MubJy7DaO/kz9A7dx8uQbP1llgYskJdDqFyqlTrt5OWQe2ofPt21Rl4BsW2i
7s3LTfIKlGiaGquG5sgXwRCWJW9o2Y2/J2cF/g==
             "]]}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Cot(Delt phase)\"", TraditionalForm], 
         PlotRange -> {{0, 54.}, {-2.3285691165556917`, 16.04589309375954}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Delt phase model\"", "\"Calculated Delt phase\""}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], 
               ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.829640723935175*^9, 3.8296407580468407`*^9}, 
   3.829640824069931*^9, 3.8296408673384295`*^9, {3.829640934921189*^9, 
   3.829640944982889*^9}, 3.829813660352518*^9, {3.8298137519399376`*^9, 
   3.8298137744859734`*^9}, {3.8298138255563865`*^9, 
   3.8298138580347023`*^9}, {3.829813898284743*^9, 3.8298139277792053`*^9}, 
   3.8298140512342405`*^9, {3.8298140841701183`*^9, 3.82981409264659*^9}, 
   3.82981414997152*^9, {3.829814180934631*^9, 3.8298141956679115`*^9}, {
   3.829814254293544*^9, 3.829814283435936*^9}, {3.8298143239485283`*^9, 
   3.829814353892949*^9}, 3.8298144353458486`*^9, 3.829815537444171*^9, 
   3.8298178243577266`*^9, {3.82981785807059*^9, 3.8298178941803503`*^9}, {
   3.829817967726514*^9, 3.829817976894167*^9}, 3.829819030041795*^9, 
   3.8298190874720173`*^9, 3.8298192998260713`*^9, {3.8298839668059726`*^9, 
   3.8298839821803427`*^9}, {3.829887906458947*^9, 3.8298879190018044`*^9}, 
   3.829889278357267*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"3852e23c-942e-4d23-8ad3-89f871a7bc1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nBPM", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "54"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"betaFromPhaseX", "=", 
     RowBox[{"betaFromPhase", "[", 
      RowBox[{"tmp", ",", "bpm$bx", ",", "bpm$fx"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"betaXFromAmpl", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"nBPM", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"betaFromAmpl", "[", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{"tmp", ",", 
              RowBox[{"{", 
               RowBox[{"10", ",", "10"}], "}"}]}], "]"}], ",", 
            RowBox[{"Drop", "[", 
             RowBox[{"bpm$bx", " ", ",", 
              RowBox[{"{", 
               RowBox[{"10", ",", "10"}], "}"}]}], "]"}]}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "nBPM", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ModelBetAndBetaFromAmpl", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"nBPM", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"betaXFromAmpl", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             RowBox[{
              RowBox[{"Drop", "[", 
               RowBox[{"bpm$bx", " ", ",", 
                RowBox[{"{", 
                 RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "/", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{"bpm$bx", " ", ",", 
              RowBox[{"{", 
               RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "*", "100"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "nBPM", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                 "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
          "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "*******)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"tmp", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", "ax"}], 
          "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"PointSize", "[", "Large", "]"}], ",", " ", "Black"}], 
             "]"}], ",", " ", "Red"}], "}"}]}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<Ampl from data and calculated ampl\>\""}], ",", " ", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "2"}]}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Nbpm\>\"", ",", " ", "\"\<ampl\>\""}], "}"}]}], ",", 
         " ", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Ampl from data\>\"", ",", "\"\<Calculated ampl\>\""}],
            "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"nBPM", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Drop", "[", 
                   RowBox[{
                    RowBox[{"tmp", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{
                  RowBox[{"Drop", "[", 
                   RowBox[{"ax", ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "/", 
               RowBox[{
                RowBox[{"Drop", "[", 
                 RowBox[{"ax", ",", 
                  RowBox[{"{", 
                   RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "*", "100"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "nBPM", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<(%)(CalculatedAmpl-AmplFromData)/AmplFromData\>\""}], ",", " ", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "2"}]}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Nbpm\>\"", ",", " ", "\"\<error(%)\>\""}], "}"}]}]}], 
        "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "//", 
     "List"}], "//", "Grid"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotBetaX", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"betaXFromAmpl", ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", " ", "Red"}], 
          "]"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Beta from ampl\>\"", "}"}]}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotBetaModelX", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"nBPM", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"Drop", "[", 
              RowBox[{"bpm$bx", ",", 
               RowBox[{"{", 
                RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "nBPM", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", " ", "Black"}], 
          "]"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Beta from model\>\"", "}"}]}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotBetaModelXN", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"nBPM", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"Drop", "[", 
              RowBox[{"bpm$bxN", ",", 
               RowBox[{"{", 
                RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "nBPM", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", " ", "Black"}], 
          "]"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Beta from model\>\"", "}"}]}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotBetaRealX", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"bx", ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", " ", "Green"}], 
          "]"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Beta real\>\"", "}"}]}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotBetaPhaseX", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"betaFromPhaseX", ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", " ", "Purple"}], 
          "]"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Beta from Phase\>\"", "}"}]}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plot$bpm", " ", "=", " ", 
     RowBox[{"Graphics", "[", "\n", "\t", 
      RowBox[{"Table", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Style", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Text", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"Rotate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StringTemplate", "[", "\"\<`2`-`1`\>\"", "]"}], "[", 
               RowBox[{
                RowBox[{"bpm$name", "[", 
                 RowBox[{"[", "id", "]"}], "]"}], ",", " ", 
                RowBox[{"IntegerString", "[", 
                 RowBox[{"id", ",", " ", "10", ",", " ", "2"}], "]"}]}], 
               "]"}], ",", " ", 
              RowBox[{
               RowBox[{"-", "90"}], " ", "Degree"}]}], "]"}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"id", ",", " ", 
              RowBox[{"-", "1"}]}], "}"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "1"}], "}"}]}], "\n", "\t\t\t", "]"}], 
          ",", "\n", "\t\t\t", "8"}], "\n", "\t\t", "]"}], ",", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"id", ",", " ", "1", ",", " ", "bpm$count"}], "}"}]}], "\n", 
       "\t", "]"}], "\n", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{"plot$beta", " ", "=", " ", 
    RowBox[{"Show", "[", "\n", "\t", 
     RowBox[{
     "plotBetaX", ",", " ", "\n", "\t", "plotBetaModelX", ",", 
      "\[IndentingNewLine]", "plot$bpm", " ", ",", "\[IndentingNewLine]", 
      "plotBetaPhaseX", ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"All", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", " ", "All"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<BETA (OLD MODEL DATA)\>\""}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<BPM names\>\"", ",", " ", "\"\<Beta\>\""}], "}"}]}], ",",
       "\n", "\t", 
      RowBox[{"ImageSize", " ", "\[Rule]", " ", "900"}]}], "\n", "]"}]}], " ",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{"ModelBetAndBetaFromAmpl", ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<(%)(BetaFromAmpl-ModelBeta)/ModelBeta\>\""}], ",", " ", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "2"}]}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Nbpm\>\"", ",", " ", "\"\<error(%)\>\""}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"betaFromPhaseX", "-", "bpm$bx"}], ")"}], "/", "bpm$bx"}],
           "*", "100"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<(%)(BetaFromPhase-ModelBeta)/ModelBeta\>\""}], ",", " ", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "2"}]}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Nbpm\>\"", ",", " ", "\"\<error(%)\>\""}], "}"}]}]}], 
        "]"}]}], "\[IndentingNewLine]", "}"}], "//", "List"}], "//", "Grid"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**"}], "*******)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.829618169372303*^9, 3.829618188954553*^9}, {
   3.8296183920968976`*^9, 3.829618397296671*^9}, {3.829618551545023*^9, 
   3.8296185626983995`*^9}, {3.829618800745964*^9, 3.8296188011154227`*^9}, {
   3.829618920387555*^9, 3.8296189549102125`*^9}, 3.829618992551549*^9, {
   3.829619099655219*^9, 3.8296191748600173`*^9}, {3.8296196078812103`*^9, 
   3.8296196270613103`*^9}, {3.8296196734575357`*^9, 3.8296196737736154`*^9}, 
   3.8296198912284155`*^9, {3.8296199921395435`*^9, 3.82962003338142*^9}, {
   3.8296200862951665`*^9, 3.829620125787877*^9}, {3.8296204887815065`*^9, 
   3.8296205376519723`*^9}, 3.829620573624823*^9, {3.829620838561872*^9, 
   3.829620869908047*^9}, {3.8296209065731196`*^9, 3.829621073949585*^9}, {
   3.8296211188376913`*^9, 3.8296211349263887`*^9}, {3.8296216140206137`*^9, 
   3.8296216291265645`*^9}, {3.829621720684843*^9, 3.82962189117773*^9}, {
   3.8296220239739065`*^9, 3.8296220648229136`*^9}, {3.829622232222217*^9, 
   3.829622272692799*^9}, {3.829622310961693*^9, 3.829622317882908*^9}, {
   3.8296223501453533`*^9, 3.8296225051800227`*^9}, {3.8296225500801077`*^9, 
   3.8296225937052402`*^9}, {3.8296226269283843`*^9, 
   3.8296226708555765`*^9}, {3.8296227398028636`*^9, 
   3.8296228065933275`*^9}, {3.829622887107476*^9, 3.8296229513880863`*^9}, {
   3.829623019731415*^9, 3.829623030345662*^9}, 3.829623068544873*^9, {
   3.829623118446474*^9, 3.82962316605029*^9}, {3.8296233016990843`*^9, 
   3.829623337173185*^9}, {3.829623423669058*^9, 3.829623459268669*^9}, {
   3.829623492559741*^9, 3.829623551498787*^9}, {3.829623601442627*^9, 
   3.8296237628668737`*^9}, {3.829623794886768*^9, 3.8296238130545034`*^9}, {
   3.829623902371518*^9, 3.8296239802889695`*^9}, {3.829624025208415*^9, 
   3.829624044210679*^9}, {3.82962408312409*^9, 3.829624092805127*^9}, {
   3.829624150020189*^9, 3.8296241888119783`*^9}, {3.8296242817215643`*^9, 
   3.8296242858242884`*^9}, {3.8296243270586967`*^9, 
   3.8296243339572797`*^9}, {3.829624432064375*^9, 3.829624434180721*^9}, {
   3.8296245775103617`*^9, 3.829624585615199*^9}, {3.8296247340482774`*^9, 
   3.8296247343265553`*^9}, 3.829625416439164*^9, {3.8296254584053073`*^9, 
   3.829625493643697*^9}, {3.829625985126682*^9, 3.8296259936138473`*^9}, {
   3.8296262028267813`*^9, 3.829626315403964*^9}, {3.8296272261479087`*^9, 
   3.8296272288651795`*^9}, {3.8296272661493216`*^9, 3.829627292551578*^9}, {
   3.82962904290868*^9, 3.829629053432435*^9}, 3.829629202286118*^9, {
   3.8296294330244474`*^9, 3.8296294552364435`*^9}, {3.82962950867338*^9, 
   3.829629558843916*^9}, {3.8296295922623973`*^9, 3.829629604539007*^9}, {
   3.82962967650686*^9, 3.8296296769384847`*^9}, 3.8296297244868593`*^9, {
   3.829630318738618*^9, 3.82963032037134*^9}, {3.829630904540101*^9, 
   3.8296309147953415`*^9}, {3.8296310881823387`*^9, 3.8296310984488926`*^9}, 
   3.829632759355863*^9, {3.8296333188293886`*^9, 3.829633336777824*^9}, {
   3.8296334427229304`*^9, 3.829633451882594*^9}, {3.829633486452692*^9, 
   3.829633487522402*^9}, {3.8296387854329042`*^9, 3.8296388018693523`*^9}, {
   3.8296410107113457`*^9, 3.829641047361068*^9}, {3.829641540488596*^9, 
   3.8296415659591165`*^9}, {3.829641609891522*^9, 3.8296417204316907`*^9}, {
   3.8296417605298815`*^9, 3.829641860309639*^9}, {3.829641902180899*^9, 
   3.8296419850463324`*^9}, {3.8296421128896933`*^9, 3.829642119648625*^9}, {
   3.8296421541799564`*^9, 3.8296423099271345`*^9}, {3.8296424245708137`*^9, 
   3.8296424370179462`*^9}, 3.8296425072338676`*^9, {3.8298180917084184`*^9, 
   3.8298180922554703`*^9}, {3.829818122796958*^9, 3.829818135706196*^9}, {
   3.829882495920641*^9, 3.8298825287254972`*^9}, 3.829883750821653*^9, {
   3.8298877023706884`*^9, 3.8298877081855907`*^9}, 3.829887910978161*^9, {
   3.829887970117035*^9, 3.8298879719492006`*^9}, {3.8298903295666604`*^9, 
   3.829890336273425*^9}},
 CellLabel->
  "In[578]:=",ExpressionUUID->"ade08007-e6b4-4b99-8268-809e716dc210"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[Large], 
             GrayLevel[0]], 
            PointBox[CompressedData["
1:eJw1kmtIk1EYx1e5qaGk2AetIXNrammSqVvZ1v5eXy8FFSTtQyOGppRNpCxM
szdDcCZahAwLyylWUhZ4aTnRLjNnX8oRVKJEfUnRcs6sadlW4XleOLz8zu85
D/9zidCXHCpYKxAIFP/G///qN69566+T6jo9GjYBk+N6XfjPRcZ+KDWY08qH
ZxkHYVAYzl8wuRhvRHN7W6LV5mQcisDBO2OX15MXI+yU6Fv0jwXGEhjLZKpP
jnnGUtTte5WqclD9Fpzsb/BB0X6sciRqzZFqk4Tqo5EXNtJlPUv126Do09sr
xV7GsZgM6X2Rf/Ur4zhwNd4rhkXKtwNd5+TO7nXULx7ij8faXyoo3074fn48
qh4gn4Bou+1ZbTxxIowJlpICN9UnYeqWb5y6mrwC1xaSjK5RYiW01pXGrdpl
xrvg/a3lLhavYfvbje6abInx0grzyVgq7BD4KIKY34OnzTMHNmuEjFWQfRnx
5FYQq2G2u9wBh6l+Lz48yJfP9lA/DVqHDMvoEDAPuCe5Kp1zadXzgKl9okF/
ms4zBdvHbFVzepafT8G7mDPHAyTkUzF9W5QhKWPMp8LSIx2v6qT9pqFoMKTX
cpR8GqKCW2bPN9H6dNyU3xAe1M4xn44Jf3l99T06nwxMmmbyLYnsPfIZKC5X
Dvn1Uf9M/GlR9Uc8p3yZsNzdNN5mI89h+lHpYngTux+eQ6D7oe6Xk3wWKupP
LMnslC8LjT6v39wXUb5scGbu/QDYe+GzEVsZ4/KE0n3nYINf8pMUEeXPQd9w
XlTw1Hfmc1F4RMxFKj2av3RA/sU=
             "]]}, {
            Directive[
             PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1:eJw1kjtIQmEUx69SEdUQFD2gQRsiIjQty573aprZg6CgMS5RU4gtRS5xS2hp
iAiaJWoKGiJoC6klSprS2QZxyEqzd2L5/T3nwr0fv/s73zn/+zDO+6cX9ZIk
2QqnWItHWi5cVGfVn0w3FMG+pzficsFK4vqRuBpePc8Q14JrjGniBsHhiwr2
TfAlpiyxQbC0Vsa+WbCWiDK3wN8McL9W9IttsW+Dn9rmvO3w9bcpYhM4q+P9
HYLj5klmi2DDr+OV2Ip+iXv2nchrXWfugg/+cr0N/d1n7LuRX/5k7sG85Mo3
sR2c8OuUIveKNWQ/zZHvw7zgXDX5ftRfrpYSDyBvbpd5EPWNS1w/hDXzzv1k
5JtNSuQV9LuyUB4NHHrY4PfpEKx8LlB+DRyK+tg74b82iTWwdhDj5x1G/5kd
9mDJs8f7XcjvvXgmX+RI5Q95N+bFXHnyYLUuzf1HMD+Q4nxgtS/C3gOvv6Pv
oxV5v4Tnj2KeOc75wMqRh70X/tj2Qh6sqRP8vccw73CZ84PDTR/8P49j/0kg
L/8D/vOoIw==
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[
           Rational[1, 2], 0.5], Axes -> {False, False}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"ampl\"", TraditionalForm], None}, {
            FormBox["\"Nbpm\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Ampl from data and calculated ampl\"", TraditionalForm], 
         PlotRange -> {{0., 54.}, {0, 3.20124888420105}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Ampl from data\"", "\"Calculated ampl\""}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, 
       {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw10mtIU2EYB/ApQRIZxZRkJOnwxtzMk5umTv1P59w0FlkDFYuSnIHV/LKY
OtqJbh+SyCxJqCQxdCRGE80UM0nIS7ScU6PLyExZTc1LUrmKij3nwMvh9/45
7/s8PCe8xJBf6s/j8WT/1v+371nKsDW06mTu1X7agK7c2n90cDDDxwAIhCYn
nA8o34rtT3nLpyxz5CB8XJw7f/XMD3IIHj5Jr4i5bSTvwJ+Y3NOCSyvkMIwd
eBxbq+XuE0IaNCeTC3vIUTBsiOqN65wlx2D2snq2Zn2SLII39KYgfG2NLEa9
0i5trv5MjsPoZKNlk2iIHA/nmHloWvyLzMBW2XNDZXtJ3o2T790lEYEz5ATo
RevHdgb+Jksx6i4yMO2dZBnqnDNNJ7q5fhKRUNBX+HbLMjkJbaN2tTT5HXkP
CgIOf33OdpCToW/pruXLuP5SsNHWK5mYXySnwhi6mbFJl8hyuNevNTTnvSGn
IbNdoj44/IGcjnzLjElkmSdnoK1+oTTJwM0DKD7kt3DFROexAFN337K3w0m5
An786EeTr1opV6CgxT/Y8clLeSZel9+xVj4bpzwTVmfZkdgBrr4s8ENcxfta
qX82C2L+9cX4bVb6f5Roqg/74rj4jXIlJGZj5K7x7/R9NnQ/zQG37o5Qng2v
NqK6cISbrwpVRX3HG/24+lV4YfCuBNUNU56D/Sld0Vo3zYPNwYTwbFWVykW5
GhcYuX/kuWnK1dDw9HEMy92vQXBqmkPaM+Crl9XAU6bo6qvh5pmLxFLbqmuK
6mFzYWKE9+xTDsrzwLRUVng0nv6/eQcP7Q==
         "]]}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 2], 0.5],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"error(%)\"", TraditionalForm], None}, {
         FormBox["\"Nbpm\"", TraditionalForm], None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImageSize->500,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"(%)(CalculatedAmpl-AmplFromData)/AmplFromData\"", TraditionalForm],
      PlotRange->{{0, 54.}, {-1.8157037681982273`, 0.16224309786306415`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8298839773865023`*^9, 3.829887741961478*^9, 
  3.8298879218200703`*^9, 3.829887979466814*^9, 3.8298892806547174`*^9, 
  3.8298903395070114`*^9, 3.829891413419357*^9, 3.829893184420267*^9},
 CellLabel->
  "Out[582]=",ExpressionUUID->"d3eac643-a611-432c-a75b-08e9299a0cc0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Medium], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBWIQDQEf7Lcfr3rt9EfXASrgsJhRf60auwyUz+HwN/7+
wa7pHFC+gENIblTaxr3CUL6Ig5D7p5tW4gJQvoSDq8OVYvs2IShfxkHk8uXk
D2/EoHwFh4qyS1tfcMPklRxunN61Q95BBMpXc1jR8Xi5/3SYeRoOf55Efswr
gdmn5aASW8YhfF8Pytdx6P+a/+01KxeUr+fwO3DGmh0eMP0GDhvXG78RioHx
DR2+hjc31WuKQvlGDk3ye73LbwtC+cYOU/W/Ftvtgqk3cRB+dDop8hPM/aYO
9Y+2Fs1Mgqk3c6jZsen2oR8wvrnDkQK211F1KlC+hcOTit09K2ONoXxLB16G
9/kPXmlC+VYOR1JLnjUeDoDyrR1uHOKRXnXaBsq3cTDwLjLfkW8L5ds6dFR6
sr9nDoTy7Ry02WyZzrtpQfn2Dl8ZfvxctsYQyndwyBZnXbv+ijKE3+Dg8PuB
kMmfHFh4OjrMUdm05LkC1P0Njg7HH15+qLsVFj9ODtP7lbbeKYCqb3ByOHno
ocyqrTD/OjusOHPj2R0bmLyzg8thlcN6O2HmuzgIN7X8rEnghcq7OOx99/Jf
wX9Y+Lg66N+cMvuMJDT9Nbg6/HBvvmB5Dma+mwOXwewQnhcw97k5FMr5qqa/
hcm7O7i2Rfz7wgaNnwZ3h6c8ay7u8oG538PBVYjvgrEmNH01eDjs0e0SfVoL
k/d0SC2U/6atzg+V93TQ+sPO1v4Elh69HA4fr8/sOcADlfdyOMJRbTvTRRIq
7+2w/LbUnxo5XQcA4qDcEg==
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Medium], 
          GrayLevel[0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBWIQDQEf7K8tcT1Q807XASrgEBR591g3jxyUz+GwbGWW
20p+TihfwCH1zYWt2guEoHwRh33rrut7+MH4Eg7LvAU4i1RgfBmHdAXW3E+r
YHwFh20/90sv1obxlRycN6o+sXGF8dUcXM+sN1IWhvE1HOa7/s1fkgXjazmc
Sqs+cqZPA8rXcQjkeKWdxi8C5es5fPPcWy29VhDKN3CYM7PRy7sWpt/Qgc9h
TtL+FzC+kYOxjNm33Ikw9cYOhyalntt5FSZv4uC1q1bHfCqMb+pQaPz1FPci
mHozh+XLFtXEiAhD+eYOgrbb5kZVKkP5Fg6pc6O3XmY1hPItHeK/FO+9oKMF
5Vs5/HnWZfpzXxCUb+0gt96q52WgE5Rv4zBjHTLf1uElino7h+pvyObZO2xf
gGyfg8M2GyT3NDg4FCxGdq+jwzVk/zQ4OizYg+xfJwf+fqTwaHBycJRDDi9n
h+fI4dng7GA8DTm8XRwMfJHio8HFIZB9Z/0Ta1WovKvDxUSk+GxwdUj1RI5v
N4e9p5DSQ4Obw8pAe7+oJTB5dweFrUjpp8Hd4dA35PTl4RCMnP4aPBxm+iGn
T08H/tVI6bfB04HxHXL69nLYuhop/Td4OewORs4f3g4uyyD5BwAacNF+
          "]]}}}, {{}, {}}}, {
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"01-STP0\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {1, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"02-STP2\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {2, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"03-STP4\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {3, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"04-SRP1\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {4, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"05-SRP2\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {5, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"06-SRP3\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {6, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"07-SRP4\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {7, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"08-SRP5\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {8, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"09-SRP6\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {9, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"10-SRP7\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {10, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"11-SRP8\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {11, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"12-SRP9\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {12, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"13-SIP1\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {13, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"14-SIP2\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {14, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"15-SRP10\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {15, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"16-SRP11\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {16, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"17-SRP12\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {17, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"18-SRP13\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {18, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"19-SRP14\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {19, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"20-SRP15\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {20, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"21-SRP16\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {21, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"22-SRP17\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {22, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"23-SEP5\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {23, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"24-SEP4\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {24, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"25-SEP3\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {25, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"26-SEP1\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {26, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"27-SEP0\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {27, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"28-NEP0\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {28, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"29-NEP1\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {29, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"30-NEP3\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {30, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"31-NEP4\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {31, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"32-NEP5\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {32, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"33-NRP17\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {33, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"34-NRP16\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {34, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"35-NRP15\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {35, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"36-NRP14\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {36, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"37-NRP13\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {37, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"38-NRP12\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {38, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"39-NRP11\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {39, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"40-NRP10\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {40, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"41-NIP3\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {41, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"42-NIP1\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {42, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"43-NRP9\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {43, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"44-NRP8\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {44, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"45-NRP7\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {45, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"46-NRP6\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {46, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"47-NRP5\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {47, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"48-NRP4\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {48, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"49-NRP3\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {49, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"50-NRP2\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {50, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"51-NRP1\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {51, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"52-NTP4\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {52, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"53-NTP2\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {53, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"54-NTP0\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {54, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False]}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Medium], 
          RGBColor[0.5, 0, 0.5]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBWIQDQEf7B+KT192UFXPASrgUCJdMb1sghyUz+FQW3JW
cK0YN5Qv4HBTJmgt73RRKF/Ewf2p3afXDIJQvoTDhspNKRUiML6MQ2vunuZn
y4ShfAWHWzOlPe6tE4DylRyamJsYrF+JQPlqDn9uLXBSnwXjazhkMVpuMjES
gvK1HOY3SvBrSqhD+ToOZeac3YI6MPV6DitXN1poqMH4Bg5xJf4qzdb8UL6h
w3y5LwKnHsHcY+SwpazEbcI3mHuNHSwc007xf4OpN3FYMiOh324BzDxTh97v
H0QUbsLcb+agZbJkepIlzH3mDvZ14TuaXqhA+RYOlvteisukm0D5lg5XTd25
1rVrQ/lWDj/2pElKGQRC+dYOdfGnuKwyHaB8G4cuZgZWJUFHKN/WIWLnxavT
e2Dq7Rzm84XKpO/VgvLtHXpUFFY3SRtD+Q4OD6/nn7ZjV4XwGxwcdifKHXQz
gPnH0cEtu3Jz/mSofxocHdZ/s4gJ6YH5x8lhtvAhv64yKL/BycHbWl6scy/M
/84Oy3YF52qchck7O7xTsL237jssPF0c1J4piwccgvIbXBzKnTxVPkjCwsfV
4bRexfbVFcpQeVeHr7JcklrZsPTl5nAtaeP3Scww/W4Ou5lnd8Tvg9nv7nD2
/zeNGdeh/mlwdzi5sZLB5zBM3sPBpeTt6TsxMPd5ODxf/ruX8QXMf54Ovp1n
OB6ZQuO7wdOhUuRYgZQxzH4vh7ITkSfvfuKFyns5uNxV22c9VRoq7+1Qy5wc
bGqi4wAAcZTGjQ==
          "]]}}}, {{}, {}}}}, {
    PlotRange -> {All, {-10, All}}, PlotLabel -> 
     FormBox["\"BETA (OLD MODEL DATA)\"", TraditionalForm], FrameLabel -> {
       FormBox["\"BPM names\"", TraditionalForm], 
       FormBox["\"Beta\"", TraditionalForm]}, ImageSize -> 900, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 54.}, {0, 30.103154599227885`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Beta from ampl\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Beta from model\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Beta from Phase\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium], 
                    RGBColor[0.5, 0, 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium], 
                    RGBColor[0.5, 0, 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8298839773865023`*^9, 3.829887741961478*^9, 
  3.8298879218200703`*^9, 3.829887979466814*^9, 3.8298892806547174`*^9, 
  3.8298903395070114`*^9, 3.829891413419357*^9, 3.829893184768009*^9},
 CellLabel->
  "Out[589]=",ExpressionUUID->"1c410a82-a241-42f1-838c-5b69ac82e076"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, 
       {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwtj2tIUwEUx6eSuRWjx9AaS+d8ZmrmnDpr+t/UqTMIHzQssFQMKUqWIZaa
Q8Roig/yg+kHHa4ge2GwDDO2cpY1NXUqkvUhzDdSSytzaA/uuXC5/O7/cc7x
zi1Mz3dmsViSf+//L/N8i2vqnJbmOL+Jox8Q9ip3Zs3zzQy6odhX5/i4tmli
eBckX8b8hlY9wDAPznfrH2eKA8m/D5M+CnbnFIt0ATLq0urmhiOJhQg1vp7u
sM1SnwgFveqFrgd+pPvDnB5UOnleSH2BuM5pmP1U6056EMqKrgZVGqXEwejf
OFfb2CgnfyietGna+7RexGHgtrlkGtgBxEfgNd5+PHo8gPLhmBEJmkdObtD9
YgTL3ubUnPUnfwQ2bXXZ+tIo8ktgSt3v6l7+k/aPBN/wvbtD6kH+KJTbbD+c
7DzyR0Ouj40punGIWAqLVD+I8q+Uj8HktR6Ot78f5Y+ipWG51VogIT4Ghc+l
lzvuiYllMPWXGC3FIuJYpMZwHDrbFO0fh/XfLmX8di7NAx7eZBcun9hkdC2w
sfeRcG07MUsO0ynP03tmXJk+rRyKCbVcrJ0lXYGmvHx1xgs206dVoEc1seA7
sEh6PCpbz4guDDmoPx4tnrsvrnTxaX4C3n8YyObNh1F/AkbzZMNcq53uT8RT
c/Piq4pw6k/EL3uV220dh+5TQmepyjUMrjB+rRKyGsFz3n0u6UmocHxeelcf
QfkkOEpWVfa+OdovGSlF607GLS/SkyFY6tJ0jmyRnoLLB2/1to6G0H4p+JN1
oNqqDqT9VTCI+uPvXAmhvArelmqNeuwwzU9FrmH6WVr3NvNfCy32cQ==
         "]]}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 2], 0.5],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"error(%)\"", TraditionalForm], None}, {
         FormBox["\"Nbpm\"", TraditionalForm], None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImageSize->500,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"(%)(BetaFromAmpl-ModelBeta)/ModelBeta\"", TraditionalForm],
      PlotRange->{{0, 54.}, {-35.13725428608226, 25.709017424250746`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic},
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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
AjOd1pU8n7ZkNxbwSNk+oJiluRcxPXzYu/feoDX0KVfbaVM9p2FlrKsn6U0x
GZVNvQB44AG9FhoM/qbSc1eY+5rRwJB3UrFtG9V7cqw024WtGTb3LHZjv+ii
h0ppGOvD5Yp0c6hX1q+net+sAwUoiFDaCMWq+GyxDhSQkPjauxouNCqwkgno
xHr5k/qrrUcNJgvQaPBv5064PGcSowUr17VrPd6A1TWu+HaJ+hdhfVjmAuld
fbjAle/Zlfo+h30DCsLEBxSYm8OMTTq9yCz1PJrANT6/Lgfdl7cfCB6Ro/tc
VUUe/4UpEkBBlxUUnVWph19mOqF+Rz+S1v8BVDMtlUMdVW89jPSGWdmMsv4H
VF9cJKzYGmkKzZCnd6yvf45QQMKl/8cQLdvAfUevQoPnPpyVq/HMQR7dwFfF
vHGBUpS3DtoR/g0G59aBy540OTJX14HC2dkExSYhl0AZdXwfitNmbo7Kt9QZ
R6BdPGe+GpQvKiV9daAdDh58daWnSW4GA9Ino8ywy9mLfuJqvoEpjNfXHlcq
vR5bB7mAiS5iB9s+fDoJBfeO5LyCgZ2vP5+qAoX1Vmytoj+frALFdCe2vjL2
dFsjBiKB8zj01nC3+cTnNNx34favyHXiqwTVb2SKGIPC6lhQ96iDN484qulo
dAEl2eYj77WcZ8DKwPHagDRCWwc6AJoDyHRQK1X1dEVOwH5L/zCtZoyx4mHG
s/l5zI+ATMRa1V//kcSAOBoGFHlR+sz3MobBzGA2QXkYSNoACVwsIY3BTYwB
qOojR7KP4jVbltRnXtGdFy9njN6kv5q6PhgMQAkk1t4kDlLXEj+CLAW9uuEG
Kj8fy605kuOYtoAnOcxRGfVGXf5Oa6kfYmu8hplh/YJjShYN26ktMVP+Ipaz
F0Ta9vrrw0kM/l1/tZw1A6COHbNWJK9fCC7H696I5TDvx0def/1q0O6LzBNl
5+3FVvGn8YigzeFohHyruaiL98Aqqtq+8bPU8FasRV6FJoF9QcEeOnRLnLNY
4stxsLspqkbOyuyMGwU30aiBTkIdNTcS71bzWlY/ES7mV3u3bSPUkqigo/zc
oaZtFM6c9tlg75Q+hDUol1G6FNYne5Ru+jvZKKGxRH549dX/u26dViMwxywu
LjmS14E/Dr/1rWz5Hdq//wCFsJZDf5fb77M9mjS9nuy1i9YZa2CWLQU+MtFl
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
9joyEkw6OU/u1Al2Y3x/KX3neJOM5O3C+nKnEq/+H5rE+PKpBS5Whfm47uTA
AHvOo9df30u2QHzsn6RsznSnEzbl2Sq8P1l/5XP7fcjvRAggVMH7WeC6OCqZ
hqi/nodQ2KMd2xmQ73HM50kjyfvDZR7+rpojWe4DfT7SGlq0jhd3vvQPSntu
P88+D2A9nv9L/dXSEnXzzZo+IGrHjjG2W5LPftlca57CvZI0psAtoW5/VRUo
8u3GuWybq5JQaC+xtNd4r4GF8spatEd9lJMi1vg3T3Rslt4nLYFfrEhXvS++
WJLGM8ajcNk0TrByqKL5cpV4YveYr9Mzw5oJt56mo2z9HeJ6/TIrr9ebc0qg
lZXXrT+FN1r98J0009FdWfCmo7uS4eVHV+lC+t/mEuV9rqt1x3oL9bs39AmR
dH6neR+Hvu6K8mdEuYaxiaHZXG7r+TyDru0b3zqiHPe+2pcA8l5Yrh+D7nLv
6SQ29jW2RbmEvkPU1zAvY+inUM+s3/QsDxfne3blO+LQuX4MOntrLa76nVGG
jsab2FT42iJzjGlLYNsUEGT72ndJflDvpTAGlsHgUsaF8+BNvbbXL+dXVval
iXTs/MLQni0aeIADSA2Hof5g7L9hz2Xl06sAsjmUld7GyG+6QIid4QK9Ls29
aL1Pb7tZZWG5LH5lEYWLWa99joN3lH2JCAI1LxWjKEjTe1gV3Ol4d1yzlHdA
fdV33GNFsGf9O8oRzvWvi8jZj6t9quMFLybP6GQN0fNGoudmFPg9I6YEHrHP
2thFMEarvLeRKNELuGiPe5zb+XH2NYuLTdHbQRS3eRJT6GtOvj06dJkO3tut
Oi5q5KJWiiXalc4IaJ4Omp+3bxZtB9k9pnKr4D7201BZA8Hzidte/wokOdA9
VrN0XLyngvT5cuwEGfVw15YhIqU6oRuVZBjJFF5Shi1sG0CynOV6PRPrdduD
Tk03iXv6PV82xHOz/rQg2DPrjmMc1wTVlM9jjsmknK44KjS4WvZV5STS9cda
VPadusid4bRt52KklpvjZ1RMLsR1UylSC3AP6UuXPa1fzJ3T7QvEQmKIy3me
jnR1q3ks4dPS+hy/TQRBakNO21VmXi/eSxIbIFwK64yYxHrYFSMXl9uCXYyC
a2cTNAhr9GUFrpEfuzXh2Ek2xovjwAle/qbj4UDiPbt1Sr8U/XxN4aTdyNVq
tnEUr5s8yDEtMCPgyPKWys9hzo7w9JOvR/k6sAG43EGX2iBYJ8zzztuuf6f+
nOuexd6EVF/aDM65O4W4xXUBXS70ffp3A/glvRdrqK63rgie7cRw54vxjqu5
7uR74WUgnxR0+LqRzR/l+Ailk/VcWjq7XtcCjpKyaWY3mVMGf87GsF7F6gVW
KH18C95wyH2tJJkeTFwve4iWW9Xt/BgYK6qebR6VRqbObBQjfTEYZF3ocnaq
W3oFZOaLYNXYiXIN9r7tnrd/oRwELfMz3SQfjnMsoxLnresaCCPZ/Wdv74tk
0EQZV7kZ0ksCDHmosvwZOrSE5ckrA2n6svcUF+oZrRRKLeQxSF5H0B2vcA3S
ccI3uvR5ZZILkC7r3LrIJ7L3t5+bGWWWJPe1hCLHVlflZ2f/YgzjKO3bnPQp
y3g4nmcsuftp6VsG/f9qSv5a4RzI1u08va04mAFzopGTQKtxIla69RfloLTs
MzosAQYI+/Sq2qflsujW3+We3UDqpCcyhKHBjndW1O8n6AIlsnWht8KvG8wQ
CTZK8mU7Pyt0KnDmuMfXnxnd6sfZX3nZrEWCtGwuExrg/Kgcp7nce8NF+u3B
PQ4uoNqydBpSZM+Lnnl0jK8i59n3y28kZ0o2fd7NOdtmvdGS0smap+O72lhO
aq0k9UWxpLn6Ub9DENUKoSTgCjzya8qYEUVryjO9BkPCMSNLMU9SwaGmbCyh
J1GzsrMqbDJqz488znEfBbuJcGxXPBV8ORUzHrev7d9ez9dV+q9VQhpTnuB5
N4PzHOx7y7woo1NAuXWw5PLBkO+EPjHZajcvvYi0GYPTq/mFzTW5ZvtoUXSc
t3ahb2GqON4yEthJwF0Xhcu85dHLdTwYZZLhtuNeyw1ilxQ/UM+76bcv7Jq1
iREVOOKFeyPoJPlCxi1cTMcbsym9mF6+XmBiWL3gu5WcGqRZfNaH7sdsQyj5
GJHX72ikrOmkeNDH2BqrTbJR8tauZ1uDFqO4NkPSLdr5XT6ra9tWSFJNIlS2
JggqRixi1ixNH1gUVtvrkl+vE1HdiiI/jkuZxJQhY8ci5NIG9pPp2Pb6StAr
RSpXy8kvp3XGN5JdD0Pl85LczSnkduVSpMEY+rGZZo42qz2BVIEH2Co7P94b
WLGSyq4XXuZXOIOxOpvnNzr7s928zSRpee4fnd+C3N+wD+WtByO3p9m+OK3J
QlGUQeV7GFxkq9njken3bG4L6UqbXyYWVDRnVIUXZErZJZx+gEqDRKqieXoQ
jkCb1Ss/UClLiIt0gX20dMzS0YuJjr7cIe5n17BtftJTyc3JMnfTW0tIyc/l
pXXEszKLs0z2T/XGSmvG54j6m2hM7ANWFs73tYzjfYq7o6bt2dMBcG97f4Gh
niFaXVNrLCTOp0VpwHwUZAQcX8yeEmPsxpH4KWZ7+Rae6U/be5Y9RhJW1AJD
LTtQZaOMb29mo4Xsk/QYowiwH6hF+PSWRsmqOIuzF1qBlNgVV4OJak9RmDBu
bpyl597GUghr7V1j+jrPLcpySzzbjsGSHjLPi76GsDIqSoyyV98+YE5m1bv7
7TJ0YbihdMRxfWUwa/JNqBilaFH0thRnQYMgAuCNsr2DlJsIPrmRZa3SsJTh
Kcn5SZzs+nNfz9uhEOimfE57z84tp9n6Azzv8NRqY0oDplEoGFMz7toZpNvp
WA5Ht28N+rVL8F0T67/2oi2wDXVc8BjwONIMac23bDW1QHcyWd4V18+Ia/3l
9mHYT/VdMtkp/w8LaPyc\
\>"]], 
     GraphicsBox[{{}, 
       {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBWIQDQEf7N+FunnfFHluDxVw0C9xWCJT8BvK53A4mKYy
97euggOEL+DQnvV404kr+lC+iMMq+Y5epxKZAxC+hAPzh72a5TniUL6MQ01i
+Ib1YqJQ9QoO/11m1gjHK0DllRzOc8p+OvlJByqv5tBj/+pdyHdtKF/D4fUz
7ztS6p/3Q/haDtbfXb5rXoOZr+NgN79TJ+ruQ6h79Rz0d/H57/kF02/gcOan
4EE/EX2oekOH9CkHMoNWikDljRzYVwQnRP1lhPKNHVR1ZRi++elB1Zs43HV9
5qz2VxUqb+qw/95V7WtnBaHyZg4sQg+rzr2D8c0dpmT3lZSWykLVWzjIqfbs
Er9tDOVbOjz3y1i3fgvMfisHl1l71bvmw8LD2sHm3U1OxusqUL6Nw7HoM/ve
RktD+bYOQY0sVs2dklC+nUNbVvMqMWeY++0d0pcn77au04DyHRxYuSxZDr6R
h/AbHBwM08187RzEofKODr/Y3u7Y9gsang2ODkXPtz3Z+eI4NLydHBav51j9
bOp/CL/ByeF4y5wjrTeEoPY7O+Q/e3aRwfYRVN7Z4XqizX7hqWxQeReHZRtb
GW/+vQuJnwYXB3Ov1nzxMFGovKvDEoM+Ht9tJlD7XR36Wjew/vMxgLrPzSHg
1MXCE5Uw97k5WHw5I3UhFhY+7g5LFE55n1SDpp8GdweOmFeGhX/koPIeDpZx
Ld4TVH5B3efhUOlmOXHDdQGo+Z4OEVx5c+wadaHmezqExJu5dCyGpR8vBzGv
T3mzGqDx1+DlcC0x/P+jTFh8eTu8r7H83S4mfgAAQMfpPw==
         "]]}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 2], 0.5],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"error(%)\"", TraditionalForm], None}, {
         FormBox["\"Nbpm\"", TraditionalForm], None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImageSize->500,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"(%)(BetaFromPhase-ModelBeta)/ModelBeta\"", TraditionalForm],
      PlotRange->{{0., 54.}, {-20.71211317511974, 19.855830821242414`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic},
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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
X6Zzyv8D4laDng==\
\>"]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8298839773865023`*^9, 3.829887741961478*^9, 
  3.8298879218200703`*^9, 3.829887979466814*^9, 3.8298892806547174`*^9, 
  3.8298903395070114`*^9, 3.829891413419357*^9, 3.8298931849060717`*^9},
 CellLabel->
  "Out[590]=",ExpressionUUID->"3c295670-ff5e-47d4-829c-fe4e520f9794"]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{-5.3999999999999995`, Automatic}, {
  Automatic, -5.3999999999999995`}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1cad2618-7bef-4802-bf48-5e206f5aff14"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 764, 16, 85, "Code",ExpressionUUID->"ef3fa8d3-4578-44fb-bde5-dd388c2cabe9"],
Cell[1347, 40, 1519, 25, 72, "Output",ExpressionUUID->"1dfd587c-df5b-480a-bc93-b7745aede01d"],
Cell[2869, 67, 869, 15, 32, "Output",ExpressionUUID->"b62c3b2c-2354-48a8-a1e6-8164bdd4c822"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3775, 87, 382, 10, 49, "Code",ExpressionUUID->"64ddd3de-cbf7-4b14-a652-239a59267a06"],
Cell[4160, 99, 526, 10, 32, "Output",ExpressionUUID->"8a6ff777-a76c-43b2-b71a-204986e81ff8"]
}, Open  ]],
Cell[4701, 112, 2492, 58, 223, "Code",ExpressionUUID->"f423771b-ea4f-4ab4-8b14-82420984accd"],
Cell[7196, 172, 958, 19, 68, "Code",ExpressionUUID->"9a0140c3-e33d-4712-aa1c-d65b98e2283f"],
Cell[8157, 193, 1128, 21, 68, "Code",ExpressionUUID->"4eb92024-4091-4911-ae3b-d476ea045f8d"],
Cell[9288, 216, 2153, 51, 154, "Code",ExpressionUUID->"017d61e2-5027-47b6-b2be-b48746f02155"],
Cell[CellGroupData[{
Cell[11466, 271, 4783, 123, 292, "Code",ExpressionUUID->"d2c23efe-5191-4c66-b8fe-beaf264e4fe1"],
Cell[16252, 396, 411, 7, 32, "Output",ExpressionUUID->"81e8ee22-21aa-4658-b83c-6380526b695b"],
Cell[16666, 405, 413, 7, 32, "Output",ExpressionUUID->"0035798e-bd82-400f-9114-13a2e569d27e"],
Cell[17082, 414, 413, 7, 32, "Output",ExpressionUUID->"d0f17047-ff45-4ca8-a57a-24e019e56b9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17532, 426, 4424, 110, 257, "Code",ExpressionUUID->"a5769926-b177-4ee0-872a-370666a54b92"],
Cell[21959, 538, 678, 11, 32, "Output",ExpressionUUID->"2325c1d2-f082-4fd3-bf11-53b156c1e9bb"],
Cell[22640, 551, 678, 11, 32, "Output",ExpressionUUID->"06cfb970-ebd6-4347-8d31-e160436bf473"],
Cell[23321, 564, 678, 11, 32, "Output",ExpressionUUID->"8be5ad56-a128-4fd5-89b2-261cd9552e7c"]
}, Open  ]],
Cell[24014, 578, 4031, 99, 395, "Code",ExpressionUUID->"17f66576-d936-4350-bda2-7e0d9f663b11"],
Cell[28048, 679, 5985, 151, 516, "Code",ExpressionUUID->"6a29126c-9f93-4c67-91e3-6ed2ff61c69c"],
Cell[34036, 832, 4905, 112, 292, "Code",ExpressionUUID->"95dd9788-8aea-4c6e-bd07-2ce8de38799e"],
Cell[38944, 946, 4149, 81, 154, "Code",ExpressionUUID->"fa0ba695-4a5e-402e-abe5-e171babcf299"],
Cell[43096, 1029, 22766, 485, 430, "Code",ExpressionUUID->"91f571e2-00d4-4bc6-812e-98dc5134f070"],
Cell[65865, 1516, 5529, 112, 188, "Code",ExpressionUUID->"4857fdaa-0fc8-446f-a120-342a01d88dba"],
Cell[71397, 1630, 229, 5, 28, "Input",ExpressionUUID->"12ecd1f4-8ffc-48f2-9cda-51e21a60e86a"],
Cell[CellGroupData[{
Cell[71651, 1639, 7850, 152, 223, "Code",ExpressionUUID->"069d5113-f8d0-4da4-acf3-c44228a5cde5"],
Cell[79504, 1793, 32625, 661, 353, "Output",ExpressionUUID->"3852e23c-942e-4d23-8ad3-89f871a7bc1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112166, 2459, 20254, 472, 1669, "Input",ExpressionUUID->"ade08007-e6b4-4b99-8268-809e716dc210"],
Cell[132423, 2933, 16218, 346, 331, "Output",ExpressionUUID->"d3eac643-a611-432c-a75b-08e9299a0cc0"],
Cell[148644, 3281, 35397, 831, 604, "Output",ExpressionUUID->"1c410a82-a241-42f1-838c-5b69ac82e076"],
Cell[184044, 4114, 30621, 544, 298, "Output",ExpressionUUID->"3c295670-ff5e-47d4-829c-fe4e520f9794"]
}, Open  ]]
}
]
*)

