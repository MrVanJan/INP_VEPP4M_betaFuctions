(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    190528,       4245]
NotebookOptionsPosition[    187070,       4188]
NotebookOutlinePosition[    187577,       4206]
CellTagsIndexPosition[    187534,       4203]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"name", ",", " ", "first"}], "}"}], " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Ivan\\\\Documents\\\\\:0423\:0447\:0435\:0431\:0430\\\
\\\:0414\:0438\:043f\:043b\:043e\:043c\\\\\:0414\:0430\:043d\:043d\:044b\:0435\
\\\\name.dat\>\"", ",", " ", "\"\<Table\>\""}], "]"}], "]"}]}], " ", 
  ";"}], "\n", "name", "\n", "first"}], "Code",
 CellChangeTimes->{{3.828621050942292*^9, 3.828621096747547*^9}, {
   3.8286212672815566`*^9, 3.82862133654743*^9}, 3.8286214201243496`*^9, 
   3.829213937135821*^9, {3.829617637837129*^9, 3.8296176395223875`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"ef3fa8d3-4578-44fb-bde5-dd388c2cabe9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"stp0\"\>", ",", "\<\"stp2\"\>", ",", "\<\"stp4\"\>", 
   ",", "\<\"srp1\"\>", ",", "\<\"srp2\"\>", ",", "\<\"srp3\"\>", 
   ",", "\<\"srp4\"\>", ",", "\<\"srp5\"\>", ",", "\<\"srp6\"\>", 
   ",", "\<\"srp7\"\>", ",", "\<\"srp8\"\>", ",", "\<\"srp9\"\>", 
   ",", "\<\"sip1\"\>", ",", "\<\"sip2\"\>", ",", "\<\"srp10\"\>", 
   ",", "\<\"srp11\"\>", ",", "\<\"srp12\"\>", ",", "\<\"srp13\"\>", 
   ",", "\<\"srp14\"\>", ",", "\<\"srp15\"\>", ",", "\<\"srp16\"\>", 
   ",", "\<\"srp17\"\>", ",", "\<\"sep5\"\>", ",", "\<\"sep4\"\>", 
   ",", "\<\"sep3\"\>", ",", "\<\"sep1\"\>", ",", "\<\"sep0\"\>", 
   ",", "\<\"nep0\"\>", ",", "\<\"nep1\"\>", ",", "\<\"nep3\"\>", 
   ",", "\<\"nep4\"\>", ",", "\<\"nep5\"\>", ",", "\<\"nrp17\"\>", 
   ",", "\<\"nrp16\"\>", ",", "\<\"nrp15\"\>", ",", "\<\"nrp14\"\>", 
   ",", "\<\"nrp13\"\>", ",", "\<\"nrp12\"\>", ",", "\<\"nrp11\"\>", 
   ",", "\<\"nrp10\"\>", ",", "\<\"nip3\"\>", ",", "\<\"nip1\"\>", 
   ",", "\<\"nrp9\"\>", ",", "\<\"nrp8\"\>", ",", "\<\"nrp7\"\>", 
   ",", "\<\"nrp6\"\>", ",", "\<\"nrp5\"\>", ",", "\<\"nrp4\"\>", 
   ",", "\<\"nrp3\"\>", ",", "\<\"nrp2\"\>", ",", "\<\"nrp1\"\>", 
   ",", "\<\"ntp4\"\>", ",", "\<\"ntp2\"\>", ",", "\<\"ntp0\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.829617654766736*^9, 3.829813630167271*^9, 3.8298839064251776`*^9, 
   3.829887813236827*^9, 3.8298892105591426`*^9, 3.829891404755792*^9, {
   3.83058052445787*^9, 3.830580562382058*^9}},
 CellLabel->"Out[69]=",ExpressionUUID->"a0145592-f067-43ef-b2d0-73e6438b4c41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", 
   ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
   "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "9", 
   ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", 
   "9", ",", "9", ",", "8", ",", "8", ",", "8", ",", "8", ",", "9", ",", "9", 
   ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", 
   "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", 
   ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{
  3.829617654766736*^9, 3.829813630167271*^9, 3.8298839064251776`*^9, 
   3.829887813236827*^9, 3.8298892105591426`*^9, 3.829891404755792*^9, {
   3.83058052445787*^9, 3.830580562397647*^9}},
 CellLabel->"Out[70]=",ExpressionUUID->"f4af5823-0cfb-4963-98b0-0ae74e1e737f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"IntegerString", "[", 
     RowBox[{"#", ",", " ", "10", ",", " ", "2"}], "]"}], " ", "&"}], " ", "/@",
    " ", 
   RowBox[{"Range", "[", "10", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.828608783167131*^9, 3.828608786770503*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"64ddd3de-cbf7-4b14-a652-239a59267a06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"01\"\>", ",", "\<\"02\"\>", ",", "\<\"03\"\>", 
   ",", "\<\"04\"\>", ",", "\<\"05\"\>", ",", "\<\"06\"\>", ",", "\<\"07\"\>",
    ",", "\<\"08\"\>", ",", "\<\"09\"\>", ",", "\<\"10\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8296176548982253`*^9, 3.82961765504533*^9}, 
   3.8298136313997645`*^9, 3.829883911444871*^9, 3.829887815176143*^9, 
   3.8298892137825317`*^9, 3.829891406810391*^9, 3.830580524674045*^9, 
   3.8305805641516004`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"30deb97e-9aea-4fc2-b0af-8246990f9b55"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Load", " ", "experiment", " ", "data"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "load", "]"}], " ", ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"load", "[", "id_", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "prefix", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"prefix", " ", "=", " ", 
         RowBox[{
          RowBox[{
          "StringTemplate", "[", 
           "\"\<C:\\\\Users\\\\Ivan\\\\Documents\\\\\:0423\:0447\:0435\:0431\
\:0430\\\\\:0414\:0438\:043f\:043b\:043e\:043c\\\\\:0414\:0430\:043d\:043d\
\:044b\:0435\\\\`1`-n450-2000-10000-\>\"", "]"}], "[", 
          RowBox[{"IntegerString", "[", 
           RowBox[{"id", ",", " ", "10", ",", " ", "2"}], "]"}], "]"}]}], " ",
         ";", "\n", "\t", 
        RowBox[{"Table", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"N", "[", 
             RowBox[{"Import", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringTemplate", "[", "\"\<`1``2`.dat\>\"", "]"}], 
                "[", 
                RowBox[{"prefix", ",", " ", 
                 RowBox[{"name", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", " ", 
               "\"\<CSV\>\""}], "]"}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"first", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ",", " ", 
              RowBox[{
               RowBox[{"first", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", "1", " ", "+", " ", 
               "1023"}]}], "}"}]}], "]"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "54"}], "}"}]}], "\n", "\t", 
         "]"}]}]}], "\n", "]"}]}], " ", ";"}], "\n", 
   RowBox[{
    RowBox[{"dataExp", " ", "=", " ", 
     RowBox[{"load", "[", "1", "]"}]}], " ", ";"}]}]}]], "Code",
 CellChangeTimes->{{3.8292140635657153`*^9, 3.8292140952320585`*^9}, 
   3.8292141855126276`*^9, {3.829214438207858*^9, 3.8292144480545263`*^9}, 
   3.8292209819034796`*^9, {3.829617690868705*^9, 3.82961769479043*^9}, 
   3.829818981173086*^9, 3.829819044616317*^9, {3.829819152213455*^9, 
   3.8298191524607005`*^9}, 3.829819240075521*^9, 3.8305847870260153`*^9, 
   3.830584854251886*^9, {3.830584980156774*^9, 3.8305849803944716`*^9}, 
   3.8306061261144843`*^9, 3.830606341389493*^9, 3.8306071234319696`*^9},
 CellLabel->
  "In[974]:=",ExpressionUUID->"f423771b-ea4f-4ab4-8b14-82420984accd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Load", " ", "model", " ", "data"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"dataModel", " ", "=", " ", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Ivan\\\\Downloads\\\\vepp.dat\>\"", ",", " ", 
      "\"\<Table\>\""}], "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{
  3.827197426088817*^9, 3.8272252739345818`*^9, {3.8272253717229433`*^9, 
   3.827225394386552*^9}, {3.8284046233953705`*^9, 3.828404628500825*^9}, {
   3.8292144506734953`*^9, 3.8292144528785963`*^9}, 3.829265204783497*^9, {
   3.8296176852204404`*^9, 3.8296176862895527`*^9}, 3.8296353567449512`*^9, 
   3.8296353937925053`*^9, {3.829819838282477*^9, 3.829819867859058*^9}, {
   3.82981996318083*^9, 3.8298199654663057`*^9}, {3.829820264203663*^9, 
   3.8298202746583414`*^9}, 3.8298883719886165`*^9, 3.82988846580433*^9},
 CellLabel->"In[75]:=",ExpressionUUID->"9a0140c3-e33d-4712-aa1c-d65b98e2283f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Load", " ", "New", " ", "model", " ", "data"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"dataModelNew", " ", "=", "  ", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Ivan\\\\Documents\\\\\:0423\:0447\:0435\:0431\:0430\\\
\\\:0414\:0438\:043f\:043b\:043e\:043c\\\\vepp4mBPM.dat\>\"", ",", " ", 
      "\"\<Table\>\""}], "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{
  3.827197426088817*^9, 3.8272252739345818`*^9, {3.8272253717229433`*^9, 
   3.827225394386552*^9}, {3.8284046233953705`*^9, 3.828404628500825*^9}, {
   3.8292144506734953`*^9, 3.8292144528785963`*^9}, 3.829265204783497*^9, {
   3.8296176852204404`*^9, 3.8296176862895527`*^9}, 3.8296353567449512`*^9, 
   3.8296353937925053`*^9, {3.829819838282477*^9, 3.829819867859058*^9}, {
   3.82981996318083*^9, 3.8298199766400948`*^9}, {3.829820021895631*^9, 
   3.829820035950294*^9}, {3.829820260982338*^9, 3.829820275428272*^9}, 
   3.829888191708471*^9, 3.8298884651729193`*^9, 3.8298910755554633`*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"4eb92024-4091-4911-ae3b-d476ea045f8d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "optics", " ", "data", " ", 
    RowBox[{"(", 
     RowBox[{"all", " ", "elements"}], ")"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"dataTwiss", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\Ivan\\\\Documents\\\\\:0423\:0447\:0435\:0431\:0430\
\\\\\:0414\:0438\:043f\:043b\:043e\:043c\\\\\:0414\:0430\:043d\:043d\:044b\
\:0435\\\\01-n450-2000-10000-twiss.dat\>\"", ",", "\"\<CSV\>\""}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"bx", " ", "=", " ", 
     RowBox[{"dataTwiss", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "4"}], "]"}], "]"}]}], " ", ";"}], "\n", 
   RowBox[{
    RowBox[{"ax", " ", "=", " ", 
     RowBox[{"dataTwiss", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], " ", ";"}], "\n", 
   RowBox[{
    RowBox[{"by", " ", "=", " ", 
     RowBox[{"dataTwiss", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "8"}], "]"}], "]"}]}], " ", ";"}], "\n", 
   RowBox[{
    RowBox[{"ay", " ", "=", " ", 
     RowBox[{"dataTwiss", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "6"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"fx", "=", 
     RowBox[{"dataTwiss", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.827197435301783*^9, 3.827197447971239*^9}, {
   3.827197498783147*^9, 3.8271975279875236`*^9}, {3.8271977277846713`*^9, 
   3.8271977378514776`*^9}, {3.82719785665621*^9, 3.827197858239774*^9}, {
   3.829226325292921*^9, 3.829226329093754*^9}, {3.829226419425185*^9, 
   3.8292264298273673`*^9}, {3.8292268367771473`*^9, 3.829227039292827*^9}, 
   3.829227080521838*^9, {3.829265580648939*^9, 3.829265605068609*^9}, {
   3.829265710320039*^9, 3.8292657135823393`*^9}, 3.8296177336324005`*^9, {
   3.829629059454585*^9, 3.8296290836804557`*^9}, {3.829629159937229*^9, 
   3.8296291864330826`*^9}, {3.8296292824240417`*^9, 3.829629290331197*^9}, 
   3.829629411178076*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"017d61e2-5027-47b6-b2be-b48746f02155"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Process", " ", "data", " ", 
    RowBox[{"(", 
     RowBox[{"optics", " ", "at", " ", "BPMs"}], ")"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"data$bpm", " ", "=", " ", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Rest", "[", "dataModel", "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<MARK\>\"", ",", " ", "__"}], "}"}]}], "]"}]}], " ", 
    ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Formal", " ", "ideal", " ", "model", " ", "data"}], " ", "*)"}], 
   "\n", 
   RowBox[{"bpm$count", "    ", "=", " ", 
    RowBox[{
     RowBox[{"Length", "[", "data$bpm", "]"}], "-", "1"}]}], 
   "                ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "number"}], " ", "of", " ", "unique", " ", "BPMs"}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$name", "     ", "=", " ", 
     RowBox[{
      RowBox[{"data$bpm", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";"}], "          ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "list"}], " ", "of", " ", "BPM", " ", "names"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$position", " ", "=", " ", 
     RowBox[{
      RowBox[{"data$bpm", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "3"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";"}], "           ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "list"}], " ", "of", " ", "BPM", " ", "positions"}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$bx", "       ", "=", " ", 
     RowBox[{
      RowBox[{"data$bpm", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";"}], "\n", 
   RowBox[{"Length", "[", "bpm$bx", " ", "]"}], "               ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "bx"}], " ", "values", " ", "at", " ", "BPMs"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$ax", "       ", "=", " ", 
     RowBox[{
      RowBox[{"data$bpm", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], ";"}], "            ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "ax"}], " ", "values", " ", "at", " ", "BPMs"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$fx", "       ", "=", " ", 
     RowBox[{"Differences", "[", 
      RowBox[{"data$bpm", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "6"}], "]"}], "]"}], "]"}]}], ";"}], "  ", 
   "\n", 
   RowBox[{"Length", "[", "bpm$fx", "]"}], 
   "                                        ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "x"}], " ", "phase", " ", "advance", " ", "between", 
     " ", "BPMs"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$by", "       ", "=", " ", 
     RowBox[{
      RowBox[{"data$bpm", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";"}], "           ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "by"}], " ", "values", " ", "at", " ", "BPMs"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$ay", "       ", "=", " ", 
     RowBox[{
      RowBox[{"data$bpm", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";"}], "           ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "ay"}], " ", "values", " ", "at", " ", "BPMs"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$fy", "       ", "=", " ", 
     RowBox[{"Differences", "[", 
      RowBox[{"data$bpm", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "9"}], "]"}], "]"}], "]"}]}], " ", ";"}], 
   "      ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "y"}], " ", "phase", " ", "advance", " ", "between", 
     " ", "BPMs"}], " ", "*)"}]}]}]], "Code",
 CellChangeTimes->{{3.827107417946533*^9, 3.8271074188767233`*^9}, {
   3.827198059193431*^9, 3.8271980748022556`*^9}, {3.827199119495802*^9, 
   3.827199126903598*^9}, 3.82720725096161*^9, {3.827215088950941*^9, 
   3.827215102842969*^9}, {3.8272151692335634`*^9, 3.827215178005029*^9}, {
   3.827900900578096*^9, 3.827900936517803*^9}, {3.8279036032549915`*^9, 
   3.827903618466657*^9}, {3.827904110705126*^9, 3.827904118014843*^9}, 
   3.8292145125490217`*^9, {3.8298885813891363`*^9, 3.82988858895383*^9}, {
   3.8298887040382648`*^9, 3.8298887079559827`*^9}, {3.829889838637018*^9, 
   3.8298898591860833`*^9}, {3.8298899285655375`*^9, 3.829889932149302*^9}, {
   3.829890040266541*^9, 3.829890055531517*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"d2c23efe-5191-4c66-b8fe-beaf264e4fe1"],

Cell[BoxData["54"], "Output",
 CellChangeTimes->{
  3.829888603476226*^9, {3.8298887002824297`*^9, 3.8298887083719554`*^9}, 
   3.8298892547970486`*^9, {3.829889840238282*^9, 3.8298898596643496`*^9}, {
   3.8298899289122458`*^9, 3.829889932549574*^9}, {3.8298900406981907`*^9, 
   3.8298900649146724`*^9}, 3.829890201836543*^9, 3.830580547752659*^9, 
   3.8305805932480783`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"2f40b701-8a03-480e-8c24-8b76967f575c"],

Cell[BoxData["54"], "Output",
 CellChangeTimes->{
  3.829888603476226*^9, {3.8298887002824297`*^9, 3.8298887083719554`*^9}, 
   3.8298892547970486`*^9, {3.829889840238282*^9, 3.8298898596643496`*^9}, {
   3.8298899289122458`*^9, 3.829889932549574*^9}, {3.8298900406981907`*^9, 
   3.8298900649146724`*^9}, 3.829890201836543*^9, 3.830580547752659*^9, 
   3.8305805932480783`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"c39d5ccc-5273-4128-88b6-474a09418db6"],

Cell[BoxData["54"], "Output",
 CellChangeTimes->{
  3.829888603476226*^9, {3.8298887002824297`*^9, 3.8298887083719554`*^9}, 
   3.8298892547970486`*^9, {3.829889840238282*^9, 3.8298898596643496`*^9}, {
   3.8298899289122458`*^9, 3.829889932549574*^9}, {3.8298900406981907`*^9, 
   3.8298900649146724`*^9}, 3.829890201836543*^9, 3.830580547752659*^9, 
   3.8305805932480783`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"8ca38129-8e04-4e4b-90c3-e3af3cd76e0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Process", " ", "data", " ", 
    RowBox[{"(", 
     RowBox[{"New", " ", "optics", " ", "at", " ", "BPMs"}], ")"}]}], " ", 
   "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Formal", " ", "ideal", " ", "model", " ", "data"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{"bpm$countN", "    ", "=", " ", 
    RowBox[{
     RowBox[{"Length", "[", "dataModelNew", "]"}], "-", "1"}]}], 
   "                ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "number"}], " ", "of", " ", "unique", " ", "BPMs"}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$nameN", "     ", "=", " ", 
     RowBox[{
      RowBox[{"dataModelNew", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";"}], "         ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "list"}], " ", "of", " ", "BPM", " ", "names"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$bxN", "       ", "=", " ", 
     RowBox[{
      RowBox[{"dataModelNew", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "3"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";"}], "\n", 
   RowBox[{"Length", "[", "bpm$bxN", " ", "]"}], "               ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "bx"}], " ", "values", " ", "at", " ", "BPMs"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$axN", "       ", "=", " ", 
     RowBox[{
      RowBox[{"dataModelNew", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], "  ", ";"}], "          ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "ax"}], " ", "values", " ", "at", " ", "BPMs"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$fxN", "       ", "=", " ", 
     RowBox[{"Differences", "[", 
      RowBox[{"dataModelNew", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}]}], ";"}], " ", 
   "\n", 
   RowBox[{"Length", "[", "bpm$fxN", "]"}], 
   "                                        ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "x"}], " ", "phase", " ", "advance", " ", "between", 
     " ", "BPMs"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$byN", "       ", "=", " ", 
     RowBox[{
      RowBox[{"dataModelNew", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "6"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";"}], "           ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "by"}], " ", "values", " ", "at", " ", "BPMs"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$ayN", "       ", "=", " ", 
     RowBox[{
      RowBox[{"dataModelNew", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], " ", "//", " ", 
      "Most"}]}], " ", ";"}], "           ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "ay"}], " ", "values", " ", "at", " ", "BPMs"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"bpm$fyN", "       ", "=", " ", 
     RowBox[{"Differences", "[", 
      RowBox[{"dataModelNew", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}]}], " ", ";"}], 
   "      ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", " ", "y"}], " ", "phase", " ", "advance", " ", "between", 
     " ", "BPMs"}], " ", "*)"}]}]}]], "Code",
 CellChangeTimes->{{3.827107417946533*^9, 3.8271074188767233`*^9}, {
   3.827198059193431*^9, 3.8271980748022556`*^9}, {3.827199119495802*^9, 
   3.827199126903598*^9}, 3.82720725096161*^9, {3.827215088950941*^9, 
   3.827215102842969*^9}, {3.8272151692335634`*^9, 3.827215178005029*^9}, {
   3.827900900578096*^9, 3.827900936517803*^9}, {3.8279036032549915`*^9, 
   3.827903618466657*^9}, {3.827904110705126*^9, 3.827904118014843*^9}, 
   3.8292145125490217`*^9, {3.8298885813891363`*^9, 3.829888644481986*^9}, {
   3.8298886854047146`*^9, 3.8298887948543887`*^9}, {3.8298897448264613`*^9, 
   3.8298897451495886`*^9}, {3.8298898114984503`*^9, 3.829889814029374*^9}, {
   3.829889917278942*^9, 3.829890025302967*^9}, 3.8298900698500767`*^9, 
   3.829890190582183*^9, {3.8298907202338085`*^9, 3.8298907273392572`*^9}, {
   3.8298910848467426`*^9, 3.829891171252141*^9}, {3.8298912201586237`*^9, 
   3.8298912901701546`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"a5769926-b177-4ee0-872a-370666a54b92"],

Cell[BoxData["54"], "Output",
 CellChangeTimes->{
  3.829617936321395*^9, 3.829634483200383*^9, 3.8298136519840355`*^9, 
   3.82988394502783*^9, 3.829887847129279*^9, {3.8298886494690714`*^9, 
   3.829888686427411*^9}, 3.829888737356525*^9, {3.8298887748472013`*^9, 
   3.8298887997427473`*^9}, 3.8298892570840006`*^9, {3.8298897251875467`*^9, 
   3.829889745827665*^9}, 3.8298898144137907`*^9, 3.829889890815031*^9, {
   3.8298899226664324`*^9, 3.829890025603189*^9}, 3.8298900702659407`*^9, 
   3.8298902043768067`*^9, 3.829890721387991*^9, {3.8298912702402835`*^9, 
   3.829891291354575*^9}, 3.830580547783903*^9, 3.830580595150285*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"bdb4cbd8-52a2-46be-af42-585697b24c5c"],

Cell[BoxData["54"], "Output",
 CellChangeTimes->{
  3.829617936321395*^9, 3.829634483200383*^9, 3.8298136519840355`*^9, 
   3.82988394502783*^9, 3.829887847129279*^9, {3.8298886494690714`*^9, 
   3.829888686427411*^9}, 3.829888737356525*^9, {3.8298887748472013`*^9, 
   3.8298887997427473`*^9}, 3.8298892570840006`*^9, {3.8298897251875467`*^9, 
   3.829889745827665*^9}, 3.8298898144137907`*^9, 3.829889890815031*^9, {
   3.8298899226664324`*^9, 3.829890025603189*^9}, 3.8298900702659407`*^9, 
   3.8298902043768067`*^9, 3.829890721387991*^9, {3.8298912702402835`*^9, 
   3.829891291354575*^9}, 3.830580547783903*^9, 3.8305805951659355`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"b0834ddd-caa5-4a85-a1fc-416538614aa2"],

Cell[BoxData["54"], "Output",
 CellChangeTimes->{
  3.829617936321395*^9, 3.829634483200383*^9, 3.8298136519840355`*^9, 
   3.82988394502783*^9, 3.829887847129279*^9, {3.8298886494690714`*^9, 
   3.829888686427411*^9}, 3.829888737356525*^9, {3.8298887748472013`*^9, 
   3.8298887997427473`*^9}, 3.8298892570840006`*^9, {3.8298897251875467`*^9, 
   3.829889745827665*^9}, 3.8298898144137907`*^9, 3.829889890815031*^9, {
   3.8298899226664324`*^9, 3.829890025603189*^9}, 3.8298900702659407`*^9, 
   3.8298902043768067`*^9, 3.829890721387991*^9, {3.8298912702402835`*^9, 
   3.829891291354575*^9}, 3.830580547783903*^9, 3.8305805951659355`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"6b8444b0-5cc2-4123-ae13-b1fa566eec21"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"window", " ", "function"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "S$COSINE$WINDOW", "]"}], " ", ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"S$COSINE$WINDOW", "::", "usage"}], " ", "=", " ", 
     "\"\<\nS$COSINE$WINDOW[ORDER,LENGTH] -- generate cosine window data of \
order <ORDER> (integer) and window length <LENGTH> (integer)\n\>\""}], " ", 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"S$COSINE$WINDOW", "[", "                    ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"--", " ", "GENERATE"}], " ", "COSINE", " ", "WINDOW", " ", 
        "DATA", " ", 
        RowBox[{"(", "LIST", ")"}]}], " ", "*)"}], "\n", "  ", 
      RowBox[{
       RowBox[{"ORDER_", "?", "NumericQ"}], ",", "                  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"--", " ", "WINDOW"}], " ", "ORDER", " ", 
         RowBox[{"(", 
          RowBox[{"INTEGER", "/", "REAL"}], ")"}]}], " ", "*)"}], "\n", "  ", 
       "LENGTH_Integer"}], "                    ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"--", " ", "WINDOW"}], " ", "LENGTH", " ", 
        RowBox[{"(", "INTEGER", ")"}]}], " ", "*)"}], "\n", "]"}], " ", ":=", 
     " ", 
     RowBox[{
      RowBox[{"If", "[", "\n", "  ", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{"N", "[", "ORDER", "]"}], ",", 
          RowBox[{"N", "[", "0", "]"}]}], "]"}], ",", "\n", "  ", 
        RowBox[{"N", "[", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", "LENGTH"}], "]"}], "]"}], ",", "\n", "  ", 
        RowBox[{"Times", "[", "\n", "    ", 
         RowBox[{
          RowBox[{"Power", "[", 
           RowBox[{
            RowBox[{"Plus", "[", 
             RowBox[{"1", ",", "1"}], "]"}], ",", "ORDER"}], "]"}], ",", "\n",
           "    ", 
          RowBox[{"Power", "[", 
           RowBox[{
            RowBox[{"Factorial", "[", "ORDER", "]"}], ",", 
            RowBox[{"Plus", "[", 
             RowBox[{"1", ",", "1"}], "]"}]}], "]"}], ",", "\n", "    ", 
          RowBox[{"Power", "[", 
           RowBox[{
            RowBox[{"Factorial", "[", 
             RowBox[{"Times", "[", 
              RowBox[{
               RowBox[{"Plus", "[", 
                RowBox[{"1", ",", "1"}], "]"}], ",", "ORDER"}], "]"}], "]"}], 
            ",", 
            RowBox[{"Subtract", "[", 
             RowBox[{"0", ",", "1"}], "]"}]}], "]"}], ",", "\n", "    ", 
          RowBox[{"Power", "[", 
           RowBox[{
            RowBox[{"Plus", "[", 
             RowBox[{"1", ",", 
              RowBox[{"Cos", "[", 
               RowBox[{"Times", "[", 
                RowBox[{
                 RowBox[{"Plus", "[", 
                  RowBox[{"1", ",", "1"}], "]"}], ",", "Pi", ",", 
                 RowBox[{"Subtract", "[", 
                  RowBox[{
                   RowBox[{"Divide", "[", 
                    RowBox[{
                    RowBox[{"Subtract", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"Range", "[", "LENGTH", "]"}], "]"}], ",", "1"}], 
                    "]"}], ",", "LENGTH"}], "]"}], ",", 
                   RowBox[{"Divide", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"Plus", "[", 
                    RowBox[{"1", ",", "1"}], "]"}]}], "]"}]}], "]"}]}], "]"}],
                "]"}]}], "]"}], ",", "ORDER"}], "]"}]}], "\n", "  ", "]"}]}], 
       "\n", "]"}], " ", "/;", " ", 
      RowBox[{"And", "[", "\n", "  ", 
       RowBox[{
        RowBox[{"GreaterEqual", "[", 
         RowBox[{"ORDER", ",", "0"}], "]"}], ",", "\n", "  ", 
        RowBox[{"GreaterEqual", "[", 
         RowBox[{"LENGTH", ",", "1"}], "]"}]}], "\n", "]"}]}]}], " ", 
    ";"}]}]}]], "Code",
 CellChangeTimes->{
  3.8255858082371845`*^9, {3.825590224940668*^9, 3.8255902367311287`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"17f66576-d936-4350-bda2-7e0d9f663b11"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "CalculateFreq", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CalculateFreq", "[", 
   RowBox[{"sig_", ",", "pad_"}], "]"}], ":=", 
  RowBox[{"Block", "[", "\n", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "res", ",", "max", ",", "len", ",", "sig1", ",", "dat", ",", "pos", ",", 
      "bin", ",", "amp", ",", "fun", ",", "x", ",", "fra", ",", "sigm"}], 
     "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"len", "=", 
      RowBox[{"Length", "[", "sig", "]"}]}], ";", "\n", 
     RowBox[{"sigm", "=", 
      RowBox[{"sig", "-", 
       RowBox[{"Mean", "[", "sig", "]"}]}]}], ";", "\n", 
     RowBox[{"sig1", " ", "=", " ", 
      RowBox[{"sigm", "*", 
       RowBox[{"S$COSINE$WINDOW", "[", 
        RowBox[{"1", ",", "len"}], "]"}]}]}], " ", ";", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"sig1", " ", "=", " ", 
        RowBox[{"PadRight", "[", 
         RowBox[{"sig1", ",", " ", "pad"}], "]"}]}], " ", ";"}], " ", "*)"}], 
     "\n", 
     RowBox[{"amp", " ", "=", " ", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"Fourier", "[", "sig1", "]"}], "]"}], ",", 
        RowBox[{"pad", "/", "2"}]}], "]"}]}], " ", ";", "\n", 
     RowBox[{"bin", " ", "=", " ", 
      RowBox[{"First", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"amp", ",", 
          RowBox[{"Max", "[", 
           RowBox[{"Take", "[", 
            RowBox[{"amp", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "pad"}], "/", "2"}], "+", "2"}]}], "]"}], "]"}]}],
          "]"}], "]"}], "]"}]}], " ", ";", "\n", "\n", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"1", "/", "pad"}], "*", 
        RowBox[{"(", 
         RowBox[{"bin", "-", "1"}], ")"}]}], "]"}]}], ";", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
      "fractional", " ", "fourier", " ", "and", " ", "max", " ", "bin", " ", 
       "of", " ", "fractional", " ", "fourier"}], " ", "*)"}], "\n", 
     RowBox[{"fra", " ", "=", " ", 
      RowBox[{"Abs", "[", 
       RowBox[{"Fourier", "[", 
        RowBox[{
         RowBox[{"sig1", "*", 
          RowBox[{"Exp", "[", 
           RowBox[{"2", "*", "Pi", "*", "I", "*", 
            RowBox[{"(", 
             RowBox[{"bin", "-", "2"}], ")"}], "*", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", 
                RowBox[{"pad", "-", "1"}]}], "]"}], "]"}], "/", "pad"}]}], 
           "]"}]}], ",", " ", 
         RowBox[{"FourierParameters", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"2", "/", "pad"}]}], "}"}]}]}], "]"}], "]"}]}], ";", "\n", 
     RowBox[{"max", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"fra", ",", " ", 
          RowBox[{"Max", "[", "fra", "]"}]}], "]"}], " ", "//", " ", 
        "Flatten"}], " ", "//", " ", "First"}]}], ";", "\n", "\n", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"1", "/", "pad"}], "*", 
         RowBox[{"(", 
          RowBox[{"bin", "-", "2"}], ")"}]}], "]"}], " ", "+", " ", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"pad", "^", "2"}]}], "*", "2", "*", 
         RowBox[{"(", 
          RowBox[{"max", "-", "1"}], ")"}]}], "]"}]}]}], ";", "\n", "\n", 
     RowBox[{"pos", " ", "=", " ", 
      RowBox[{"max", " ", "+", " ", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "10"}], "]"}]}]}], " ", ";", "\n", 
     RowBox[{"dat", " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", 
         RowBox[{"Log10", "[", 
          RowBox[{"fra", "[", 
           RowBox[{"[", "pos", "]"}], "]"}], "]"}]}], "}"}], " ", "//", " ", 
       "Transpose"}]}], " ", ";", "\n", "\n", "\n", 
     RowBox[{"fun", " ", "=", " ", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"dat", ",", " ", 
        RowBox[{"InterpolationOrder", " ", "\[Rule]", " ", "4"}]}], " ", 
       "]"}]}], " ", ";", "\n", "\n", "\n", 
     RowBox[{"max", " ", "=", " ", 
      RowBox[{"x", " ", "/.", " ", 
       RowBox[{"Last", "[", 
        RowBox[{
         RowBox[{"FindMaximum", "[", 
          RowBox[{
           RowBox[{"fun", "[", "x", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"max", "-", "1"}], ",", 
             RowBox[{"max", "+", "1"}]}], "}"}]}], "]"}], " ", "//", " ", 
         "Quiet"}], "]"}]}]}], ";", "\n", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"1", "/", "pad"}], "*", 
         RowBox[{"(", 
          RowBox[{"bin", "-", "2"}], ")"}]}], "]"}], " ", "+", " ", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"pad", "^", "2"}]}], "*", "2", "*", 
         RowBox[{"(", 
          RowBox[{"max", "-", "1"}], ")"}]}], "]"}]}]}]}]}], "\n", "\n", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.8280572699929566`*^9, 3.828057372436961*^9}, {
   3.828057426700857*^9, 3.828057503321555*^9}, 3.828266365644664*^9, {
   3.828407947488987*^9, 3.8284079708227687`*^9}, {3.828408486900875*^9, 
   3.8284084924938784`*^9}, {3.8284139197254343`*^9, 3.8284139215416336`*^9}, 
   3.8284139589201016`*^9, {3.8284141443464546`*^9, 3.8284141488639665`*^9}, {
   3.828414185734503*^9, 3.828414256960594*^9}, {3.8284144084806213`*^9, 
   3.8284144086430817`*^9}, {3.8284145112633076`*^9, 
   3.8284145123645315`*^9}, {3.828414590373176*^9, 3.8284146386990995`*^9}, {
   3.8284160152703495`*^9, 3.8284160324503307`*^9}, {3.829265277443117*^9, 
   3.8292652789340982`*^9}, 3.8296179739208994`*^9, {3.8296320178627467`*^9, 
   3.829632059923089*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"6a29126c-9f93-4c67-91e3-6ed2ff61c69c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "calculateAmplandPhase", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"calculateAmplandPhase", "[", 
   RowBox[{"sig_", ",", "freqMid_"}], "]"}], ":=", 
  RowBox[{"Block", "[", "\n", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
     "pad", ",", " ", "WF", ",", " ", "sumWF", " ", ",", " ", "c", ",", " ", 
      "s", ",", " ", "ampl", ",", " ", "phase", ",", "sig1"}], "}"}], ",", 
    "\n", 
    RowBox[{
     RowBox[{"sig1", "=", " ", 
      RowBox[{"sig", " ", "-", " ", 
       RowBox[{"Mean", "[", "sig", "]"}]}]}], " ", ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"sig", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "-", 
          RowBox[{"Mean", "[", "sig", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "sig", "]"}]}], "}"}]}], "]"}], ";"}], 
      "*)"}], "\n", "\n", 
     RowBox[{"WF", "=", 
      RowBox[{"S$COSINE$WINDOW", "[", 
       RowBox[{"0", ",", 
        RowBox[{"Length", "[", "sig1", "]"}]}], "]"}]}], ";", "\n", 
     RowBox[{"sumWF", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"WF", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "sig1", "]"}]}], "}"}]}], "]"}]}], ";", "\n",
      "\n", 
     RowBox[{"c", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "/", "sumWF"}], ")"}], "*", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"sig1", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"WF", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "*", "Pi", "*", "freqMid", "*", "i"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "sig1", "]"}]}], "}"}]}], "]"}]}]}], ";", 
     "\n", 
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "/", "sumWF"}], ")"}], "*", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"sig1", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"WF", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", "*", "Pi", "*", "freqMid", "*", "i"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "sig1", "]"}]}], "}"}]}], "]"}]}]}], ";", 
     "\n", "\n", 
     RowBox[{"ampl", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"c", "^", "2"}], "+", 
        RowBox[{"s", "^", "2"}]}], "]"}]}], ";", "\n", 
     RowBox[{"phase", "=", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"c", ",", " ", "s"}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{"ampl", ",", "phase", ",", "freqMid"}], "}"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.8255908264113855`*^9, 3.825590861732855*^9}, {
   3.8255913277820315`*^9, 3.82559135981629*^9}, {3.825591437903133*^9, 
   3.8255914512903175`*^9}, {3.8255914858319054`*^9, 3.8255915385598354`*^9}, 
   3.8255918183497143`*^9, {3.8255957748930387`*^9, 3.8255958756873446`*^9}, {
   3.82559590813055*^9, 3.825595918359185*^9}, {3.825595949501896*^9, 
   3.825596013702103*^9}, {3.8255962276227894`*^9, 3.825596531802988*^9}, {
   3.8255966196080666`*^9, 3.8255966623367853`*^9}, {3.825596732185916*^9, 
   3.825596746989304*^9}, {3.8255971698150563`*^9, 3.8255971926280575`*^9}, 
   3.8255977628904696`*^9, {3.825598391023775*^9, 3.8255984222631702`*^9}, {
   3.82619167606707*^9, 3.8261916846382656`*^9}, {3.826191865644725*^9, 
   3.826191896314025*^9}, {3.82620136130409*^9, 3.826201405207695*^9}, {
   3.8262015387098513`*^9, 3.8262015399414997`*^9}, {3.8262023055133357`*^9, 
   3.8262023164896493`*^9}, {3.8262024030308533`*^9, 
   3.8262024125459356`*^9}, {3.8262037553522806`*^9, 
   3.8262037785158725`*^9}, {3.827207465422239*^9, 3.827207507606112*^9}, {
   3.8272254405370913`*^9, 3.8272254488826895`*^9}, 3.8272266366450415`*^9, 
   3.827227020279852*^9, {3.827227254122197*^9, 3.8272272545535507`*^9}, {
   3.8272272958181133`*^9, 3.827227325304256*^9}, {3.8272282416260443`*^9, 
   3.8272282432213945`*^9}, {3.8284413508395185`*^9, 
   3.8284414217033033`*^9}, {3.8285807356703925`*^9, 3.828580839809061*^9}, {
   3.828606925437593*^9, 3.828606937869399*^9}, {3.828607861795918*^9, 
   3.8286078689318476`*^9}, {3.8292196390883265`*^9, 3.8292196398473005`*^9}, 
   3.8292204542032795`*^9, {3.8292233630064754`*^9, 3.8292233803411183`*^9}, {
   3.82922341829362*^9, 3.829223426842763*^9}, {3.8292653202755303`*^9, 
   3.8292653409611616`*^9}, {3.8292663926376934`*^9, 3.8292663929588366`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"95dd9788-8aea-4c6e-bd07-2ce8de38799e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"beta", " ", "from", " ", "ampl"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "betaFromAmpl", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"betaFromAmpl", "[", 
     RowBox[{"amplAndPhaseData_", ",", "betaModelMassive_"}], "]"}], ":=", 
    RowBox[{"Block", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ActionTheor", ",", "betaFromAmpl"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"ActionTheor", "=", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"amplAndPhaseData", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ")"}], "^", "2"}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              RowBox[{"betaModelMassive", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "amplAndPhaseData", "]"}]}], "}"}]}], 
          "]"}], "/", 
         RowBox[{"Length", "[", "amplAndPhaseData", "]"}]}]}], ";", "\n", 
       RowBox[{"betaFromAmpl", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"amplAndPhaseData", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}], "^", "2"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "ActionTheor"}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "amplAndPhaseData", "]"}]}], "}"}]}], 
         "]"}]}]}]}], "\n", "]"}]}]}]}]], "Code",
 CellChangeTimes->{
  3.827197426088817*^9, {3.827198282859421*^9, 3.8271982992686234`*^9}, {
   3.827198336201497*^9, 3.82719838631446*^9}, {3.827198427608919*^9, 
   3.827198429111168*^9}, {3.827198557575631*^9, 3.8271985668368297`*^9}, 
   3.827198617976087*^9, {3.827198658133216*^9, 3.827198952875272*^9}, {
   3.827199022140627*^9, 3.8271990581170745`*^9}, {3.82719909400753*^9, 
   3.8271990941294703`*^9}, {3.827199186154127*^9, 3.827199221445007*^9}, {
   3.827204552560258*^9, 3.8272047278002443`*^9}, {3.8272048218719397`*^9, 
   3.827204822671855*^9}, {3.8272049612873473`*^9, 3.827204961418498*^9}, 
   3.827205151671059*^9, {3.827205330836753*^9, 3.827205359905258*^9}, {
   3.8272054466295385`*^9, 3.827205526461063*^9}, {3.8272055607651744`*^9, 
   3.827205561669833*^9}, {3.827205824409975*^9, 3.827205838894021*^9}, 
   3.8272059037119856`*^9, {3.827206070529018*^9, 3.8272061611695833`*^9}, {
   3.8272067799566483`*^9, 3.8272068056589375`*^9}, {3.8272068576116447`*^9, 
   3.8272070690783167`*^9}, {3.827207108232736*^9, 3.8272071391353865`*^9}, 
   3.82721150749188*^9, 3.8272117036233044`*^9, {3.8272141876187687`*^9, 
   3.8272142070551443`*^9}, {3.827214359430418*^9, 3.8272143600862055`*^9}, 
   3.8272153290073442`*^9, 3.827215376459967*^9, {3.827216664114671*^9, 
   3.8272167307103148`*^9}, {3.827216811980519*^9, 3.8272168154969807`*^9}, {
   3.827216911865579*^9, 3.8272170398699293`*^9}, {3.827217188019002*^9, 
   3.8272171887751827`*^9}, 3.827217331312521*^9, {3.827225607940216*^9, 
   3.827225608109233*^9}, 3.8272256628852215`*^9, {3.827225895350099*^9, 
   3.827225903637212*^9}, {3.827226029114352*^9, 3.827226049928774*^9}, {
   3.827226152183095*^9, 3.827226163783845*^9}, {3.827226194572822*^9, 
   3.827226194888917*^9}, {3.8272262475954037`*^9, 3.8272262477799377`*^9}, 
   3.8272264232620115`*^9, {3.827228139933781*^9, 3.8272281409567957`*^9}, {
   3.8272283213373528`*^9, 3.827228378102493*^9}, {3.8272285724470425`*^9, 
   3.8272287005308075`*^9}, 3.8272290224792233`*^9, {3.8272321136220384`*^9, 
   3.827232311141796*^9}, {3.8272323670353274`*^9, 3.827232415381198*^9}, {
   3.8272324841354713`*^9, 3.8272325814277687`*^9}, 3.827232623217759*^9},
 CellLabel->
  "In[112]:=",ExpressionUUID->"fa0ba695-4a5e-402e-abe5-e171babcf299"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Beta", " ", "from", " ", "phase"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "betaFromPhase", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"betaFromPhase", "[", 
     RowBox[{"amplAndPhaseData_", ",", "betaModel_", ",", "theorPhase_"}], 
     "]"}], ":=", 
    RowBox[{"Block", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "betaModelp", ",", "DeltPhaseExpp", ",", "theorPhasep", ",", 
        "betaFromPhase1", ",", "DeltPhaseEx", ",", "betaFromPhaseMassive", 
        ",", "DeltPhaseExp", ",", "deltPhaseExp9$11", ",", 
        "deltPhaseTheor9$11", ",", "bet9", ",", "bet11"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"betaModelp", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"betaModel", "[", 
            RowBox[{"[", "54", "]"}], "]"}], "}"}], ",", "betaModel", ",", 
          RowBox[{"{", 
           RowBox[{"betaModel", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "]"}]}], ";", "\n", 
       RowBox[{"Length", "[", "betaModelp", "]"}], ";", "\n", 
       RowBox[{"DeltPhaseExp", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"amplAndPhaseData", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{"id", "+", "1"}], ",", " ", "54", ",", " ", "1"}], 
                 "]"}], ",", " ", "2"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"amplAndPhaseData", "[", 
              RowBox[{"[", 
               RowBox[{"id", ",", " ", "2"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"id", " ", "\[Equal]", " ", "1"}], ",", " ", 
               RowBox[{
                RowBox[{"amplAndPhaseData", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], "*", "2", "*", 
                "Pi"}], ",", " ", "0"}], "]"}], "-", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"id", " ", "\[Equal]", " ", "33"}], ",", " ", 
               RowBox[{
                RowBox[{"amplAndPhaseData", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], "*", "2", "*", 
                "Pi"}], ",", " ", "0"}], "]"}], "+", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"id", " ", "\[Equal]", " ", "36"}], ",", " ", 
               RowBox[{
                RowBox[{"amplAndPhaseData", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], "*", "2", "*", 
                "Pi"}], ",", " ", "0"}], "]"}]}], ",", " ", 
            RowBox[{"2", "*", "Pi"}], ",", " ", 
            RowBox[{"-", "Pi"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"id", ",", " ", "1", ",", " ", "54"}], "}"}]}], "]"}]}], 
       " ", ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"DeltPhaseExp", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"amplAndPhaseData", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             RowBox[{
              RowBox[{"amplAndPhaseData", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               RowBox[{"Length", "[", "amplAndPhaseData", "]"}], "-", "1"}]}],
              "}"}]}], "]"}]}], ";"}], "*)"}], "\n", 
       RowBox[{"DeltPhaseExpp", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"DeltPhaseExp", "[", 
            RowBox[{"[", "54", "]"}], "]"}], "}"}], ",", "DeltPhaseExp"}], 
         "]"}]}], ";", "\n", 
       RowBox[{"Length", "[", "DeltPhaseExpp", "]"}], ";", "\n", 
       RowBox[{"theorPhasep", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"theorPhase", "[", 
            RowBox[{"[", "54", "]"}], "]"}], "}"}], ",", "theorPhase"}], 
         "]"}]}], ";", "\n", 
       RowBox[{"Length", "[", "theorPhasep", "]"}], ";", "\n", 
       RowBox[{"betaFromPhase1", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"betaModelp", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cot", "[", 
                RowBox[{"DeltPhaseExpp", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "-", "1"}], "]"}], "]"}], "]"}], "+", 
               RowBox[{"Cot", "[", 
                RowBox[{"DeltPhaseExpp", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cot", "[", 
                RowBox[{"theorPhasep", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "-", "1"}], "]"}], "]"}], "]"}], "+", 
               RowBox[{"Cot", "[", 
                RowBox[{"theorPhasep", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ")"}]}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2", ",", 
            RowBox[{"bpm$count", "+", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
       ";", "\n", 
       RowBox[{
        RowBox[{"betaFromPhase1", "[", 
         RowBox[{"[", "10", "]"}], "]"}], "=", "\"\<non\>\""}], ";", "\n", 
       RowBox[{"deltPhaseExp9$11", "=", 
        RowBox[{
         RowBox[{"amplAndPhaseData", "[", 
          RowBox[{"[", 
           RowBox[{"11", ",", "2"}], "]"}], "]"}], "-", 
         RowBox[{"amplAndPhaseData", "[", 
          RowBox[{"[", 
           RowBox[{"9", ",", "2"}], "]"}], "]"}]}]}], ";", "\n", 
       RowBox[{"deltPhaseTheor9$11", "=", 
        RowBox[{
         RowBox[{"theorPhase", "[", 
          RowBox[{"[", "9", "]"}], "]"}], "+", 
         RowBox[{"theorPhase", "[", 
          RowBox[{"[", "10", "]"}], "]"}]}]}], ";", "\n", 
       RowBox[{"bet9", "=", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"betaModelp", "[", 
           RowBox[{"[", "10", "]"}], "]"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cot", "[", 
              RowBox[{"DeltPhaseExpp", "[", 
               RowBox[{"[", "9", "]"}], "]"}], "]"}], "+", 
             RowBox[{"Cot", "[", "deltPhaseExp9$11", "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cot", "[", 
              RowBox[{"theorPhasep", "[", 
               RowBox[{"[", "9", "]"}], "]"}], "]"}], "+", 
             RowBox[{"Cot", "[", "deltPhaseTheor9$11", "]"}]}], ")"}]}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"bet11", "=", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"betaModelp", "[", 
           RowBox[{"[", "12", "]"}], "]"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cot", "[", "deltPhaseExp9$11", "]"}], "+", 
             RowBox[{"Cot", "[", 
              RowBox[{"DeltPhaseExpp", "[", 
               RowBox[{"[", "12", "]"}], "]"}], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cot", "[", "deltPhaseTheor9$11", "]"}], "+", 
             RowBox[{"Cot", "[", 
              RowBox[{"theorPhasep", "[", 
               RowBox[{"[", "12", "]"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}], 
       ";", "\n", 
       RowBox[{"betaFromPhase1", "=", 
        RowBox[{"ReplacePart", "[", 
         RowBox[{"betaFromPhase1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"9", "\[Rule]", "bet9"}], ",", 
            RowBox[{"11", "\[Rule]", "bet11"}]}], "}"}]}], "]"}]}]}]}], "\n", 
     RowBox[{"(*", 
      RowBox[{"betaFromPhase", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"betaFromPhase1", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "betaFromPhase1", "]"}]}], "}"}]}], "]"}]}],
       "*)"}], "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"betaFromPhase1", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"betaModelp", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cot", "[", 
                   RowBox[{"DeltPhaseExpp", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "2"}], "]"}], "]"}], "]"}], "-", 
                  RowBox[{"Cot", "[", 
                   RowBox[{
                    RowBox[{"DeltPhaseExpp", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "+", 
                    RowBox[{"DeltPhaseExpp", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "2"}], "]"}], "]"}]}], "]"}]}], ")"}], 
                "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cot", "[", 
                   RowBox[{"theorPhasep", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "2"}], "]"}], "]"}], "]"}], "-", 
                  RowBox[{"Cot", "[", 
                   RowBox[{
                    RowBox[{"theorPhasep", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "+", 
                    RowBox[{"theorPhasep", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "2"}], "]"}], "]"}]}], "]"}]}], 
                 ")"}]}]}], "]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"betaModelp", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cot", "[", 
                   RowBox[{"DeltPhaseExpp", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "]"}], "+", 
                  RowBox[{"Cot", "[", 
                   RowBox[{"DeltPhaseExpp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cot", "[", 
                   RowBox[{"theorPhasep", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "]"}], "+", 
                  RowBox[{"Cot", "[", 
                   RowBox[{"theorPhasep", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ")"}]}]}], "]"}],
              "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"betaModelp", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cot", "[", 
                   RowBox[{
                    StyleBox["DeltPhaseExpp",
                    FontWeight->"Bold"], "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}], "-", 
                  RowBox[{"Cot", "[", 
                   RowBox[{
                    RowBox[{"DeltPhaseExpp", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "+", 
                    RowBox[{"DeltPhaseExpp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cot", "[", 
                   RowBox[{"theorPhasep", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}], "-", 
                  RowBox[{"Cot", "[", 
                   RowBox[{
                    RowBox[{"theorPhasep", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "+", 
                    RowBox[{"theorPhasep", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ")"}]}]}], 
              "]"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3", ",", 
            RowBox[{"bpm$count", "+", "2"}], ",", "1"}], "}"}]}], "]"}]}], 
       ";"}], "*)"}], "\n", 
     RowBox[{"(*", 
      RowBox[{"betaFromPhaseMassive", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"betaFromPhase1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"betaFromPhase1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"betaFromPhase1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "}"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"betaFromPhase1", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "3", ",", 
             RowBox[{
              RowBox[{"Length", "[", "betaFromPhase1", "]"}], "-", "2"}]}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"betaFromPhase1", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Length", "[", "betaFromPhase1", "]"}], "-", "1"}], 
               "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"betaFromPhase1", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Length", "[", "betaFromPhase1", "]"}], "-", "1"}], 
               "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"betaFromPhase1", "[", 
             RowBox[{"[", 
              RowBox[{"Length", "[", "betaFromPhase1", "]"}], "]"}], "]"}], 
            "[", 
            RowBox[{"[", "1", "]"}], "]"}], "}"}], "}"}]}], "]"}]}], "*)"}], 
     "\n", "]"}]}]}]}]], "Code",
 CellChangeTimes->{
  3.827197426088817*^9, {3.827198282859421*^9, 3.8271982992686234`*^9}, {
   3.827198336201497*^9, 3.82719838631446*^9}, {3.827198427608919*^9, 
   3.827198429111168*^9}, {3.827198557575631*^9, 3.8271985668368297`*^9}, 
   3.827198617976087*^9, {3.827198658133216*^9, 3.827198952875272*^9}, {
   3.827199022140627*^9, 3.8271990581170745`*^9}, {3.82719909400753*^9, 
   3.8271990941294703`*^9}, {3.827199186154127*^9, 3.827199221445007*^9}, {
   3.827204552560258*^9, 3.8272047278002443`*^9}, {3.8272048218719397`*^9, 
   3.827204822671855*^9}, {3.8272049612873473`*^9, 3.827204961418498*^9}, 
   3.827205151671059*^9, {3.827205330836753*^9, 3.827205359905258*^9}, {
   3.8272054466295385`*^9, 3.827205526461063*^9}, {3.8272055607651744`*^9, 
   3.827205561669833*^9}, {3.827205824409975*^9, 3.827205838894021*^9}, 
   3.8272059037119856`*^9, {3.827206070529018*^9, 3.8272061611695833`*^9}, {
   3.8272067799566483`*^9, 3.8272068056589375`*^9}, {3.8272068576116447`*^9, 
   3.8272070690783167`*^9}, {3.827207108232736*^9, 3.8272071391353865`*^9}, 
   3.82721150749188*^9, 3.8272117036233044`*^9, {3.8272141876187687`*^9, 
   3.8272142070551443`*^9}, {3.827214359430418*^9, 3.8272143600862055`*^9}, 
   3.8272153290073442`*^9, 3.827215376459967*^9, {3.8272823779007864`*^9, 
   3.827282423983735*^9}, {3.8272824872234893`*^9, 3.8272825682141113`*^9}, 
   3.8272828516129737`*^9, {3.8279226608382196`*^9, 3.8279226701166573`*^9}, {
   3.8279227903898253`*^9, 3.8279228797943816`*^9}, {3.8279229321779003`*^9, 
   3.8279229371364813`*^9}, {3.8279241357841096`*^9, 3.8279241440041647`*^9}, 
   3.8279244997581367`*^9, {3.827924938818339*^9, 3.8279249981621175`*^9}, {
   3.8279250741148396`*^9, 3.827925075131493*^9}, {3.8279251085638533`*^9, 
   3.8279252086494665`*^9}, {3.8279252401169233`*^9, 
   3.8279252583353505`*^9}, {3.827925301099075*^9, 3.827925353795431*^9}, {
   3.8279253928325615`*^9, 3.827925486267435*^9}, {3.8279257119724274`*^9, 
   3.8279257217820787`*^9}, {3.827925836575137*^9, 3.827925911671851*^9}, {
   3.827925941733238*^9, 3.827925974436178*^9}, {3.8279260496721797`*^9, 
   3.8279260926845694`*^9}, {3.827926344548684*^9, 3.82792636432353*^9}, {
   3.827926499240838*^9, 3.827926499387643*^9}, {3.8279265631387625`*^9, 
   3.8279265632859077`*^9}, {3.8279267399713383`*^9, 
   3.8279267471505527`*^9}, {3.827927709864891*^9, 3.827927725814393*^9}, 
   3.827927771873475*^9, {3.8279278218817115`*^9, 3.827927828071281*^9}, 
   3.827928013319561*^9, {3.8279284328382187`*^9, 3.827928554505924*^9}, {
   3.8279290347195964`*^9, 3.8279290878872347`*^9}, {3.8279291242115283`*^9, 
   3.8279292768233075`*^9}, {3.8279293076292105`*^9, 3.827929458207901*^9}, {
   3.827929525025894*^9, 3.8279295336662335`*^9}, 3.8279298956290913`*^9, {
   3.8279317020528765`*^9, 3.8279317081778817`*^9}, {3.827931751901884*^9, 
   3.8279317658781796`*^9}, {3.8279318058867693`*^9, 
   3.8279318528340282`*^9}, {3.8279318919886465`*^9, 3.827932063211644*^9}, {
   3.827932210290639*^9, 3.827932227277639*^9}, {3.827933130557108*^9, 
   3.8279331338442907`*^9}, {3.827933258238948*^9, 3.827933259403513*^9}, {
   3.8280089022939963`*^9, 3.8280089078246284`*^9}, {3.828008937858917*^9, 
   3.828008990860978*^9}, {3.828009665774168*^9, 3.8280097063244777`*^9}, {
   3.8280097441684475`*^9, 3.8280097695336337`*^9}, {3.8280099620413647`*^9, 
   3.8280099626386175`*^9}, {3.828009996433916*^9, 3.8280100245375395`*^9}, 
   3.8280122421796236`*^9, {3.828012286732626*^9, 3.8280123877739444`*^9}, {
   3.8280124253755836`*^9, 3.8280125869680862`*^9}, 3.828016374232724*^9, {
   3.8280190678634815`*^9, 3.8280190853428097`*^9}, {3.828268172398432*^9, 
   3.828268222327898*^9}, {3.828268258978706*^9, 3.8282683053643923`*^9}, {
   3.828268343002713*^9, 3.8282685240889425`*^9}, {3.828268554995661*^9, 
   3.8282685794937687`*^9}, {3.828269042842805*^9, 3.828269059106718*^9}, {
   3.828269261366499*^9, 3.828269660891148*^9}, {3.828269821566449*^9, 
   3.828269899900519*^9}, 3.828269972980322*^9, {3.8282700729351826`*^9, 
   3.828270073700779*^9}, {3.828270285971681*^9, 3.8282702861435165`*^9}, {
   3.828270584278449*^9, 3.828270637249265*^9}, {3.828270725125577*^9, 
   3.8282707321557236`*^9}, {3.8282707648607206`*^9, 3.828270772099696*^9}, {
   3.8282712633452435`*^9, 3.8282713821756325`*^9}, {3.8282714576639194`*^9, 
   3.828271503142728*^9}, {3.8282716150175285`*^9, 3.8282717000729666`*^9}, {
   3.828271742706545*^9, 3.82827175223921*^9}, {3.8282719742161646`*^9, 
   3.8282720124921*^9}, {3.828272292189502*^9, 3.828272398346738*^9}, {
   3.828272454123045*^9, 3.8282724609644566`*^9}, {3.8282724959129586`*^9, 
   3.8282725027558317`*^9}, {3.8282725554234867`*^9, 3.828272592780015*^9}, {
   3.828272634617296*^9, 3.8282726533853073`*^9}, {3.828272822436057*^9, 
   3.828272890165168*^9}, {3.828272955726567*^9, 3.828273017585728*^9}, {
   3.8282731071995087`*^9, 3.82827327022622*^9}, {3.8282733641395507`*^9, 
   3.8282735467325373`*^9}, {3.828273578454198*^9, 3.8282736464480944`*^9}, {
   3.828273732468233*^9, 3.828273735482459*^9}, {3.8282737668237286`*^9, 
   3.828273796069688*^9}, 3.828274149414448*^9, {3.8282763523886175`*^9, 
   3.8282763526045237`*^9}, {3.8283505529595394`*^9, 
   3.8283506098072205`*^9}, {3.828517416125991*^9, 3.828517430205721*^9}, {
   3.8285175582219725`*^9, 3.8285175646989927`*^9}, {3.828517705509946*^9, 
   3.8285177119454403`*^9}, {3.8285181666625757`*^9, 3.82851816722529*^9}, 
   3.8285188300283837`*^9, 3.828518879235729*^9, {3.82851923893116*^9, 
   3.8285192391782165`*^9}, {3.8285267929016943`*^9, 
   3.8285267944189863`*^9}, {3.828530148540061*^9, 3.828530158814907*^9}, 
   3.82853020249203*^9, {3.8292244828323317`*^9, 3.8292244860078125`*^9}, {
   3.829224725992037*^9, 3.8292248164956574`*^9}, {3.8292291061209517`*^9, 
   3.8292291460561867`*^9}, {3.8296258402963424`*^9, 
   3.8296258456183453`*^9}, {3.8296260720782137`*^9, 
   3.8296260774137173`*^9}, {3.829626855036058*^9, 3.8296268786810675`*^9}, {
   3.8296270424598475`*^9, 3.829627047870241*^9}, {3.829627184492219*^9, 
   3.829627194072403*^9}, {3.829628303554182*^9, 3.8296283044489126`*^9}, {
   3.8296308852361937`*^9, 3.829630889209688*^9}, {3.8296310651228385`*^9, 
   3.829631070127206*^9}, 3.8296314593103347`*^9, 3.829631494005138*^9, {
   3.8296315570847273`*^9, 3.8296316110349383`*^9}, {3.829631656698023*^9, 
   3.829631664504328*^9}, {3.8296317730417385`*^9, 3.8296318370509415`*^9}, {
   3.829631897527207*^9, 3.829631951100871*^9}, 3.8296403439413176`*^9, {
   3.829814390847829*^9, 3.8298144037510524`*^9}, 3.8298146136293564`*^9, {
   3.829814649956599*^9, 3.8298147555866423`*^9}, {3.829814799335704*^9, 
   3.8298148349751377`*^9}, {3.829815025001884*^9, 3.829815044595564*^9}, {
   3.829815257710801*^9, 3.829815257995077*^9}, 3.829815289032714*^9, 
   3.8298153213357773`*^9, {3.829815417152254*^9, 3.829815420787573*^9}, {
   3.8298155127098775`*^9, 3.829815515494272*^9}, 3.829815833001113*^9, {
   3.8298159307696805`*^9, 3.8298159308857136`*^9}, {3.8298161275806723`*^9, 
   3.82981623626413*^9}, {3.8298165361752357`*^9, 3.8298165363440957`*^9}, {
   3.829816678743116*^9, 3.8298166837157373`*^9}, {3.8298167193985643`*^9, 
   3.8298167345208693`*^9}, {3.829816970688548*^9, 3.829816996962777*^9}, {
   3.829817036177074*^9, 3.8298171531045723`*^9}, {3.829817236627269*^9, 
   3.8298174415358286`*^9}, {3.829817596007121*^9, 3.8298176557780356`*^9}, {
   3.829817700584589*^9, 3.829817716095399*^9}, {3.8298177705702395`*^9, 
   3.8298177851806507`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"91f571e2-00d4-4bc6-812e-98dc5134f070"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Calculate", " ", "Signal"}], "  ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"X", ":", "k"}], "=", "1"}], ";", "  ", 
    RowBox[{
     RowBox[{"Y", ":", "k"}], "=", "2"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"signalProc", "[", 
    RowBox[{"data_", ",", "k_", ",", "len_"}], "]"}], ":=", 
   RowBox[{"Block", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"signal", ",", "midlefreq", ",", "Ampl"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"signal", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "k", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "data", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"data", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"midlefreq", "=", 
       RowBox[{"Mean", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"CalculateFreq", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Drop", "[", 
              RowBox[{"signal", ",", 
               RowBox[{"{", 
                RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"Length", "[", 
             RowBox[{"signal", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "signal", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}], "]"}]}], ";", "\n", 
      RowBox[{"Ampl", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"calculateAmplandPhase", "[", 
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", 
              RowBox[{"1", ";;", "len"}], ",", " ", "k"}], "]"}], "]"}], ",", 
           "midlefreq"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "signal", "]"}]}], "}"}]}], "]"}]}]}]}], 
    "\n", "\n", "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.827197426088817*^9, {3.827198282859421*^9, 3.8271982992686234`*^9}, {
   3.827198336201497*^9, 3.82719838631446*^9}, {3.827198427608919*^9, 
   3.827198429111168*^9}, {3.827198557575631*^9, 3.8271985668368297`*^9}, 
   3.827198617976087*^9, {3.827198658133216*^9, 3.827198952875272*^9}, {
   3.827199022140627*^9, 3.8271990581170745`*^9}, {3.82719909400753*^9, 
   3.8271990941294703`*^9}, {3.827199186154127*^9, 3.827199221445007*^9}, {
   3.827204552560258*^9, 3.8272047278002443`*^9}, {3.8272048218719397`*^9, 
   3.827204822671855*^9}, {3.8272049612873473`*^9, 3.827204961418498*^9}, 
   3.827205151671059*^9, {3.827205330836753*^9, 3.827205359905258*^9}, {
   3.8272054466295385`*^9, 3.827205526461063*^9}, {3.8272055607651744`*^9, 
   3.827205561669833*^9}, {3.827205824409975*^9, 3.827205838894021*^9}, 
   3.8272059037119856`*^9, {3.827206070529018*^9, 3.8272061611695833`*^9}, {
   3.8272067799566483`*^9, 3.8272068056589375`*^9}, {3.8272068576116447`*^9, 
   3.8272070690783167`*^9}, {3.827207108232736*^9, 3.8272071391353865`*^9}, 
   3.82721150749188*^9, 3.8272117036233044`*^9, {3.8272141876187687`*^9, 
   3.8272142070551443`*^9}, {3.827214359430418*^9, 3.8272143600862055`*^9}, 
   3.8272153290073442`*^9, 3.827215376459967*^9, {3.827216664114671*^9, 
   3.8272167307103148`*^9}, {3.827216811980519*^9, 3.8272168154969807`*^9}, {
   3.827216911865579*^9, 3.8272170398699293`*^9}, {3.827217188019002*^9, 
   3.8272171887751827`*^9}, 3.827217331312521*^9, {3.827225607940216*^9, 
   3.827225608109233*^9}, 3.8272256628852215`*^9, {3.827225895350099*^9, 
   3.827225903637212*^9}, {3.827226029114352*^9, 3.827226049928774*^9}, {
   3.827226152183095*^9, 3.827226163783845*^9}, {3.827226194572822*^9, 
   3.827226194888917*^9}, {3.8272262475954037`*^9, 3.8272262477799377`*^9}, 
   3.8272264232620115`*^9, {3.827228139933781*^9, 3.8272281409567957`*^9}, 
   3.8284291705486765`*^9, {3.8284295539830837`*^9, 3.828429586215954*^9}, 
   3.8284296188216143`*^9, {3.828429695436594*^9, 3.8284297060090384`*^9}, {
   3.8292197306238008`*^9, 3.829219768244198*^9}, {3.8292198048203816`*^9, 
   3.8292198934563093`*^9}, {3.8292199385617175`*^9, 3.829219982711648*^9}, {
   3.8292200247103367`*^9, 3.829220039738661*^9}, {3.8292200713451653`*^9, 
   3.8292201062088995`*^9}, {3.8292203319272757`*^9, 
   3.8292204419401035`*^9}, {3.829220582569029*^9, 3.829220599226482*^9}, {
   3.8292206739396515`*^9, 3.829220751260302*^9}, {3.829220839356714*^9, 
   3.8292208452758555`*^9}, {3.82922088166457*^9, 3.8292208824384985`*^9}, 
   3.8292215033061485`*^9, {3.8292235067336206`*^9, 3.829223516306994*^9}, {
   3.8292237507531033`*^9, 3.8292237528564467`*^9}, {3.8296182000906935`*^9, 
   3.8296182004752493`*^9}, {3.829618470289775*^9, 3.8296185213167443`*^9}, {
   3.8298139657585216`*^9, 3.829814046681361*^9}, {3.8298141568015876`*^9, 
   3.8298141778553753`*^9}, {3.829814248507146*^9, 3.829814272291072*^9}, {
   3.829814314321057*^9, 3.82981431535296*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"4857fdaa-0fc8-446f-a120-342a01d88dba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"signalProc", "[", 
    RowBox[{"dataExp", ",", "1", ",", "128"}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[977]:=",ExpressionUUID->"12ecd1f4-8ffc-48f2-9cda-51e21a60e86a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmpX", " ", "=", " ", 
   RowBox[{"Table", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"bpm$fx", "[", 
        RowBox[{"[", "id", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"tmp", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"id", "+", "1"}], ",", " ", "54", ",", " ", "1"}], 
              "]"}], ",", " ", "2"}], "]"}], "]"}], " ", "-", " ", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", 
            RowBox[{"id", ",", " ", "2"}], "]"}], "]"}], " ", "-", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"id", " ", "\[Equal]", " ", "1"}], ",", " ", 
            RowBox[{
             RowBox[{"tmp", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], "*", "2", "*", 
             "Pi"}], ",", " ", "0"}], "]"}], "-", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"id", " ", "\[Equal]", " ", "33"}], ",", " ", 
            RowBox[{
             RowBox[{"tmp", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], "*", "2", "*", 
             "Pi"}], ",", " ", "0"}], "]"}], "+", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"id", " ", "\[Equal]", " ", "36"}], ",", " ", 
            RowBox[{
             RowBox[{"tmp", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], "*", "2", "*", 
             "Pi"}], ",", " ", "0"}], "]"}]}], ",", " ", 
         RowBox[{"2", "*", "Pi"}], ",", " ", 
         RowBox[{"-", "Pi"}]}], "]"}]}], "\n", "\t\t", "\n", "\t", "}"}], ",",
      "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"id", ",", " ", "1", ",", " ", "54"}], "}"}]}], "\n", "]"}]}], 
  " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "tmpX", "]"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"PointSize", "[", "Large", "]"}], ",", " ", "Black"}], 
           "]"}], ",", " ", "Red"}], "}"}]}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Delt phase model\>\"", ",", "\"\<Calculated Delt phase\>\""}], 
         "}"}]}], ",", 
       RowBox[{"ImageSize", " ", "\[Rule]", " ", "500"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Delt phase\>\""}]}], "]"}], ",", 
     "\n", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Cot", "[", 
        RowBox[{"Transpose", "[", "tmpX", "]"}], "]"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"PointSize", "[", "Large", "]"}], ",", " ", "Black"}], 
           "]"}], ",", " ", "Red"}], "}"}]}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Delt phase model\>\"", ",", "\"\<Calculated Delt phase\>\""}], 
         "}"}]}], ",", 
       RowBox[{"ImageSize", " ", "\[Rule]", " ", "500"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Cot(Delt phase)\>\""}]}], "]"}]}],
     "\n", "}"}], "//", "List"}], "//", "Grid"}]}], "Code",
 CellChangeTimes->{
  3.827197426088817*^9, {3.827198282859421*^9, 3.8271982992686234`*^9}, {
   3.827198336201497*^9, 3.82719838631446*^9}, {3.827198427608919*^9, 
   3.827198429111168*^9}, {3.827198557575631*^9, 3.8271985668368297`*^9}, 
   3.827198617976087*^9, {3.827198658133216*^9, 3.827198952875272*^9}, {
   3.827199022140627*^9, 3.8271990581170745`*^9}, {3.82719909400753*^9, 
   3.8271990941294703`*^9}, {3.827199186154127*^9, 3.827199221445007*^9}, {
   3.827204552560258*^9, 3.8272047278002443`*^9}, {3.8272048218719397`*^9, 
   3.827204822671855*^9}, {3.8272049612873473`*^9, 3.827204961418498*^9}, 
   3.827205151671059*^9, {3.827205330836753*^9, 3.827205359905258*^9}, {
   3.8272054466295385`*^9, 3.827205526461063*^9}, {3.8272055607651744`*^9, 
   3.827205561669833*^9}, {3.827205824409975*^9, 3.827205838894021*^9}, 
   3.8272059037119856`*^9, {3.827206070529018*^9, 3.8272061611695833`*^9}, {
   3.8272067799566483`*^9, 3.8272068056589375`*^9}, {3.8272068576116447`*^9, 
   3.8272070690783167`*^9}, {3.827207108232736*^9, 3.8272071391353865`*^9}, 
   3.82721150749188*^9, 3.8272117036233044`*^9, {3.8272141876187687`*^9, 
   3.8272142070551443`*^9}, {3.827214359430418*^9, 3.8272143600862055`*^9}, 
   3.8272153290073442`*^9, 3.827215376459967*^9, 3.827902129792162*^9, {
   3.827902915594882*^9, 3.827902916333785*^9}, 3.827908503583885*^9, {
   3.8279085636484876`*^9, 3.8279085644114456`*^9}, {3.828016065346431*^9, 
   3.82801608593821*^9}, 3.8280172322826242`*^9, 3.8280172625037465`*^9, {
   3.828017301672845*^9, 3.8280173022280164`*^9}, {3.8280184401093483`*^9, 
   3.8280184463890123`*^9}, 3.828018963326889*^9, 3.828019299298891*^9, 
   3.828056256557631*^9, {3.8280577335896826`*^9, 3.8280577343137493`*^9}, {
   3.8280580832854295`*^9, 3.828058087439319*^9}, {3.828058121811386*^9, 
   3.8280581225145054`*^9}, {3.8280581527187214`*^9, 3.828058179238793*^9}, {
   3.8280593470729127`*^9, 3.828059364815459*^9}, {3.8282754299103217`*^9, 
   3.8282756617123423`*^9}, {3.82827633142671*^9, 3.8282763317429085`*^9}, {
   3.8283489147498913`*^9, 3.828348942937025*^9}, {3.828348980534913*^9, 
   3.82834902712753*^9}, {3.8284343645096836`*^9, 3.8284344073364625`*^9}, {
   3.8284344506727734`*^9, 3.828434452557824*^9}, 3.828434532052945*^9, {
   3.8284346805957417`*^9, 3.828434704513351*^9}, {3.828434803724147*^9, 
   3.8284348230321097`*^9}, {3.8284348629748545`*^9, 
   3.8284348679142694`*^9}, {3.8285176501958523`*^9, 3.828517686696538*^9}, {
   3.8285179338443947`*^9, 3.82851794485418*^9}, {3.8285180507839513`*^9, 
   3.828518068784422*^9}, 3.8285198663894725`*^9, {3.8285232261130953`*^9, 
   3.8285232651943254`*^9}, {3.8285240049525757`*^9, 
   3.8285240092956715`*^9}, {3.8285288282864847`*^9, 3.8285288791846423`*^9}, 
   3.8285289149597006`*^9, {3.828528978105982*^9, 3.828528996452592*^9}, {
   3.828529070671118*^9, 3.828529081015851*^9}, {3.829638274285959*^9, 
   3.8296382852666864`*^9}, 3.829638521474373*^9, {3.8296385517019396`*^9, 
   3.8296385615353975`*^9}, {3.8296387217102027`*^9, 
   3.8296387640086718`*^9}, {3.8296388440431557`*^9, 3.8296388958967257`*^9}, 
   3.829638929719447*^9, {3.8296390891476836`*^9, 3.8296390953104687`*^9}, {
   3.8296393524936886`*^9, 3.829639385411916*^9}, {3.8296400216205606`*^9, 
   3.8296400291926622`*^9}, 3.829640176102764*^9, {3.8296402403319874`*^9, 
   3.829640257373907*^9}, {3.829640311298774*^9, 3.8296403245248375`*^9}, 
   3.8296405452090845`*^9, {3.8296405760236387`*^9, 3.8296405928974857`*^9}, {
   3.8296406275201216`*^9, 3.8296407565608034`*^9}, {3.829640788719697*^9, 
   3.829640865452622*^9}, {3.8296409051330695`*^9, 3.829640943766222*^9}, {
   3.829813736326651*^9, 3.8298137738854733`*^9}, {3.8298138151827774`*^9, 
   3.8298138574498024`*^9}, {3.829813896498881*^9, 3.829813927185247*^9}, {
   3.829814065451295*^9, 3.8298140836852055`*^9}, {3.82981433273569*^9, 
   3.8298143521458406`*^9}, {3.829817849510941*^9, 3.829817893057517*^9}, {
   3.829817966410164*^9, 3.82981797445193*^9}, {3.8306067157707834`*^9, 
   3.8306067433679504`*^9}, {3.830606894721352*^9, 3.8306069441701*^9}, {
   3.8306071843931665`*^9, 3.8306073341802583`*^9}, {3.8306074607560687`*^9, 
   3.8306074824158745`*^9}, 3.830607596055524*^9, {3.8306088869715123`*^9, 
   3.830608892809155*^9}},
 CellLabel->
  "In[1075]:=",ExpressionUUID->"069d5113-f8d0-4da4-acf3-c44228a5cde5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[Large], 
             GrayLevel[0]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQDQEf7NddlaidY/vRHirgsMDPwHDKwldQPofDmp4z
8+crf4LyBRy4vCbEJZ+FqRdxWPFOc2GFHUxewmHCW3nj+pcweRmHP7xcJ388
gvEVHH54ZV7Wd4CpV3JgWNw989hFmLyKwwzHlkbH/zC+mkNHLcc2exOYeg2H
itMqFxdH/YDytRw2GDjs+DjhAZSv42Dg+f7vZzGYej0Hh3m18gfbYXwDB4Hb
AXNjM2DmGzp8YHDd4W0LkzdySHijUvHBD8Y3drjA8u4zXwpMvQnQ/KD41dUw
eVOHAqaFhx+zwvhmDg5fv898M+sulG/ucMD6tP8unpdQvoXDg5krs5dtfQzl
WzowrH7MFMp2Dsq3cmDgmPSE5d56KN/awcI6QdP+MasDhG+DJm/rwLAcWb+d
w4JpyObbOzRYINvv4MDwE8l9DQ4OE1iQ3e/o0OCK5L8GR4cFrMj+d3JoeIcU
Pg1ODg/+uSCFn7PDgbtI4dvg7NCAEv4uDg3ND9VyFj6Dyrs4HLC37c2VfQeV
d3U4cAYpfhtcHRyqkePfzUHBFSl9NLg5JCxETj/uDgzI6avB3SFBADn9eTg4
vEZKnw1A/nvk9OvpwOCLlL4bPB0aupDTv5fDAeT80eDlwHADOf94OzCsDXtq
9fy6PQB1L/wU
             "]]}, {
            Directive[
             PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1:eJw10WtIk1EYB/C5kqSJjFxoUbKJmoSYS52XzP29bOqcCC5hlX1R01zZTVDT
yLeWUCBWH1wflNJQF93UHHmpKFQYmmXF8IIXNsOcUjQvqxWFFTvPCy8vv/f/
nHN4niPJP5NznM/j8WT/3v9f9+OQN9v1+wzRK3L2AzPdompz4jKzFx7J3nio
+JQLoSgtWJvikUWw5tTGnhKuM/tDoFPlla07mHfh11pwW5VslVmMgL7eI1uc
5EB0FahfCso8X7sdBG/Tk5W2Gecrt0MAyfhQjI3qQzEqdVkN7T+Y98LYt7j1
5LiNOQy66u4HEhGdH44T4sUWk9cacwS0DXt+SudpPymeCS3GHbFUvx/Fp79w
xWrqJxIOP1vc3XLqNwr9F7P0fQJyNHIvrcquSqheBm3Np9mE7bPMMYhQX1CJ
Sz8zx6Ip+F7tkN3KHIfK0DFNi/875ng019+3m81dzAfwh9+UN1jvCbcT0Hts
unFOSvlB2L/etn54T+sTYRob1IdV0Tzk+CgdUvQI7cyAq8wYfujytNsc4L0w
f7T/PM0jCSPmjVs1I8xcEjQTHTcgoX6TkeuLeOcU5clw6vgleiWtT0Hlb+Ny
6zlWz6VAnK1oWJ6mPBXX1KNng6PZPLhU3EywPh+8TvNXgNsZYLGNuliuQKDH
07ptbylXovN7lqGI7odTotw3xKfDRXkaSjTy7E1FdH4agnzy7vgN0/2no8JX
N7BUwOq5dEwKMqtb8ynPQE+nwVFRR/1l4PDuyM1zD7+xXIXHlsJhrXqJ5Sp0
R20MFC7Q+kz4TzZeKX0xIf8Ly84DmQ==
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Delt phase\"", TraditionalForm], 
         PlotRange -> {{0, 54.}, {-2.6811747349679185`, 2.7359603149883718`}},
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Delt phase model\"", "\"Calculated Delt phase\""}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[Large], 
             GrayLevel[0]], 
            PointBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQDQEf7Ddv5PO8ZPzQHirg0BfyoGyO0lson8PBm7cr
2PP5XShfwKFxq9Dqo/33oXwRB7Vtano3U2DyEg5RyudKy1hg8jIOj3d3vNiu
AuMrOHR/FbbuioGpV3K4vsOS/XslTF7F4WjxBTWnmfegfDUHK573pdnTYOo1
HFh7vR79er8Cytdy0Dh5WstG4g+Ur+OwroklUF4Vpl/P4eNmc969LHegfAOH
UHaDYrNjD6B8Q4clqzY/78qCmW/ksDfE1cJKFMY3driyrsLP+CJMvYnDSp3e
L1l2MPNMHZpL/p1aVwGzz8yhlE2m7hMXgwOEb+7AtvGunr/oB6i8hQOnUn2a
5uxvUL6lQ40Wm770XgGoeisHq/MRy/ZzG0D51g4TVwTceLGA6QCEb4Mmb+tw
RgdZv53DCzVk8+0dvLcg2+/gIM2C5L4GBwfxLGT3Ozp42iH5r8HR4eAaZP87
OdR4IYVPg5PD4i3I4efsUM2AFL4Nzg4HNiGHv4tD6L+4yfk7PkHlXRykJUVY
jQKfQ+VdHd4kI8Vvg6uDrzhy/Ls5ZCchpY8GN4cXB5DTj7uDzS+k9NXg7sC/
ATn9eTic0ENKnw0eDm6bkdOvp8OJZUjpu8HT4YE4cvr3cghCzh8NXg7bVyPn
H2+H63uu7hDMYnEAABcw7JU=
             "]]}, {
            Directive[
             PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1:eJw1kXtI01EUx39agUg0rchKybTwESq+8q37bjr3MEG0HCWNiBQDK4qof5R+
zEhsJCYMRNNhmYZRw9EwFZqG0hQXiY+5ZpipSAznmmHL9UfFzr1wuXzu59xz
7zk34vKN0kp/juPS/s3/q2+4hFpLx3SDbFlIG1BHu+bLbBvEAWhqVvZsW5gP
wqcQ3ezQNOOD0A/srB/zzhIfxrCmb7HQzXwY3s41lLVqvhAfx0Rknvq932fi
SDxvLaqXR3Dw8Uk42tT3HzdOmnwcBVNwwhWJisXHoK5S2Wn4MEB8CrIY1/pY
32/iOMR6rJ3lZavECTgbe/1jdo+NOBECQbPFcJ7lS4I+aqB+07lCnAxvqcD7
wj1DnIKpA2s3nV1fiVOxZ9wcLzOy+k5DZdef4PWs/jQMt4+OiC6xetLxqPva
zMK2m3wGniWVpORWe4kz8T38iUFjCKL4LPiplC12UxxxNtL/HKnq6udGfJwD
hzMwp3g4nnwuMqtnVxwKdj4PjjNKla50h/ILUXHIvGk5+oMYuNjv9spv+/ni
ecBUrRxNvLpIXoSmsWXntJn6w4vQMRlfk1rH6hVjv/iWLZ9nXozePm5jI5f9
bz50g/7d2tfULz4fg3tFgSF3Wb8L0Fjxrt2YtUW+APUj1nbvPtZ/CVz2Nn2M
VEteAk/ouWLVhW/kCzEebOResf/hC3EvbrQmep29T4pw09KDtCl2vxRwlXu2
MubJy7DaO/kz9A7dx8uQbP1llgYskJdDqFyqlTrt5OWQe2ofPt21Rl4BsW2i
7s3LTfIKlGiaGquG5sgXwRCWJW9o2Y2/J2cF/g==
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Cot(Delt phase)\"", TraditionalForm], 
         PlotRange -> {{0, 54.}, {-2.3285691165556917`, 16.04589309375954}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Delt phase model\"", "\"Calculated Delt phase\""}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.829640723935175*^9, 3.8296407580468407`*^9}, 
   3.829640824069931*^9, 3.8296408673384295`*^9, {3.829640934921189*^9, 
   3.829640944982889*^9}, 3.829813660352518*^9, {3.8298137519399376`*^9, 
   3.8298137744859734`*^9}, {3.8298138255563865`*^9, 
   3.8298138580347023`*^9}, {3.829813898284743*^9, 3.8298139277792053`*^9}, 
   3.8298140512342405`*^9, {3.8298140841701183`*^9, 3.82981409264659*^9}, 
   3.82981414997152*^9, {3.829814180934631*^9, 3.8298141956679115`*^9}, {
   3.829814254293544*^9, 3.829814283435936*^9}, {3.8298143239485283`*^9, 
   3.829814353892949*^9}, 3.8298144353458486`*^9, 3.829815537444171*^9, 
   3.8298178243577266`*^9, {3.82981785807059*^9, 3.8298178941803503`*^9}, {
   3.829817967726514*^9, 3.829817976894167*^9}, 3.829819030041795*^9, 
   3.8298190874720173`*^9, 3.8298192998260713`*^9, {3.8298839668059726`*^9, 
   3.8298839821803427`*^9}, {3.829887906458947*^9, 3.8298879190018044`*^9}, 
   3.829889278357267*^9, 3.8305805486548643`*^9, 3.8305806169603214`*^9, 
   3.8305848280642724`*^9, 3.8305848898395443`*^9, 3.830585019015333*^9, 
   3.8306063178097305`*^9, 3.8306064302030354`*^9, {3.830606720275237*^9, 
   3.830606744316453*^9}, {3.830606895859645*^9, 3.830606945271219*^9}, 
   3.830607170336769*^9, {3.83060722177456*^9, 3.830607271638633*^9}, {
   3.8306074640291033`*^9, 3.830607479129641*^9}, 3.830607566176723*^9, 
   3.8306075972408466`*^9, {3.8306088882737293`*^9, 3.8306088945794706`*^9}},
 CellLabel->
  "Out[1076]=",ExpressionUUID->"edd5298c-d8dc-442d-abe7-3339d4965348"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nBPM", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "54"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"betaFromPhaseX", "=", 
     RowBox[{"betaFromPhase", "[", 
      RowBox[{"tmp", ",", "bpm$bx", ",", "bpm$fx"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"betaXFromAmpl", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"nBPM", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"betaFromAmpl", "[", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{"tmp", ",", 
              RowBox[{"{", 
               RowBox[{"10", ",", "10"}], "}"}]}], "]"}], ",", 
            RowBox[{"Drop", "[", 
             RowBox[{"bpm$bx", " ", ",", 
              RowBox[{"{", 
               RowBox[{"10", ",", "10"}], "}"}]}], "]"}]}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "nBPM", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ModelBetAndBetaFromAmpl", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"nBPM", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"betaXFromAmpl", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             RowBox[{
              RowBox[{"Drop", "[", 
               RowBox[{"bpm$bx", " ", ",", 
                RowBox[{"{", 
                 RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "/", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{"bpm$bx", " ", ",", 
              RowBox[{"{", 
               RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "*", "100"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "nBPM", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                 "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
          "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "*******)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"tmp", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", "ax"}], 
          "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"PointSize", "[", "Large", "]"}], ",", " ", "Black"}], 
             "]"}], ",", " ", "Red"}], "}"}]}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<Ampl from data and calculated ampl\>\""}], ",", " ", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "2"}]}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Nbpm\>\"", ",", " ", "\"\<ampl\>\""}], "}"}]}], ",", 
         " ", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Ampl from data\>\"", ",", "\"\<Calculated ampl\>\""}],
            "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"nBPM", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Drop", "[", 
                   RowBox[{
                    RowBox[{"tmp", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{
                  RowBox[{"Drop", "[", 
                   RowBox[{"ax", ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "/", 
               RowBox[{
                RowBox[{"Drop", "[", 
                 RowBox[{"ax", ",", 
                  RowBox[{"{", 
                   RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "*", "100"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "nBPM", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<(%)(CalculatedAmpl-AmplFromData)/AmplFromData\>\""}], ",", " ", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "2"}]}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Nbpm\>\"", ",", " ", "\"\<error(%)\>\""}], "}"}]}]}], 
        "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "//", 
     "List"}], "//", "Grid"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotBetaX", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"betaXFromAmpl", ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", " ", "Red"}], 
          "]"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Beta from ampl\>\"", "}"}]}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotBetaModelX", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"nBPM", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"Drop", "[", 
              RowBox[{"bpm$bx", ",", 
               RowBox[{"{", 
                RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "nBPM", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", "Black"}], "]"}]}],
         ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Beta from model\>\"", "}"}]}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotBetaModelXN", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"nBPM", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"Drop", "[", 
              RowBox[{"bpm$bxN", ",", 
               RowBox[{"{", 
                RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "nBPM", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", " ", "Black"}], 
          "]"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Beta from model\>\"", "}"}]}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotBetaRealX", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"bx", ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", " ", "Green"}], 
          "]"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Beta real\>\"", "}"}]}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotBetaPhaseX", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"betaFromPhaseX", ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", " ", "Purple"}], 
          "]"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Beta from Phase\>\"", "}"}]}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plot$bpm", " ", "=", " ", 
     RowBox[{"Graphics", "[", "\n", "\t", 
      RowBox[{"Table", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Style", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Text", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"Rotate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StringTemplate", "[", "\"\<`2`-`1`\>\"", "]"}], "[", 
               RowBox[{
                RowBox[{"bpm$name", "[", 
                 RowBox[{"[", "id", "]"}], "]"}], ",", " ", 
                RowBox[{"IntegerString", "[", 
                 RowBox[{"id", ",", " ", "10", ",", " ", "2"}], "]"}]}], 
               "]"}], ",", " ", 
              RowBox[{
               RowBox[{"-", "90"}], " ", "Degree"}]}], "]"}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"id", ",", " ", 
              RowBox[{"-", "1"}]}], "}"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "1"}], "}"}]}], "\n", "\t\t\t", "]"}], 
          ",", "\n", "\t\t\t", "8"}], "\n", "\t\t", "]"}], ",", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"id", ",", " ", "1", ",", " ", "bpm$count"}], "}"}]}], "\n", 
       "\t", "]"}], "\n", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{"plot$beta", " ", "=", " ", 
    RowBox[{"Show", "[", "\n", "\t", 
     RowBox[{
     "plotBetaX", ",", " ", "\n", "\t", "plotBetaModelX", ",", 
      "\[IndentingNewLine]", "plot$bpm", " ", ",", "\[IndentingNewLine]", 
      "plotBetaPhaseX", ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"All", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", " ", "All"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<BETA (OLD MODEL DATA)\>\""}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<BPM names\>\"", ",", " ", "\"\<Beta\>\""}], "}"}]}], ",",
       "\n", "\t", 
      RowBox[{"ImageSize", " ", "\[Rule]", " ", "900"}]}], "\n", "]"}]}], " ",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{"ModelBetAndBetaFromAmpl", ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<(%)(BetaFromAmpl-ModelBeta)/ModelBeta\>\""}], ",", " ", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "2"}]}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Nbpm\>\"", ",", " ", "\"\<error(%)\>\""}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"betaFromPhaseX", "-", "bpm$bx"}], ")"}], "/", "bpm$bx"}],
           "*", "100"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<(%)(BetaFromPhase-ModelBeta)/ModelBeta\>\""}], ",", " ", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "2"}]}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Nbpm\>\"", ",", " ", "\"\<error(%)\>\""}], "}"}]}]}], 
        "]"}]}], "\[IndentingNewLine]", "}"}], "//", "List"}], "//", "Grid"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**"}], "*******)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.829618169372303*^9, 3.829618188954553*^9}, {
   3.8296183920968976`*^9, 3.829618397296671*^9}, {3.829618551545023*^9, 
   3.8296185626983995`*^9}, {3.829618800745964*^9, 3.8296188011154227`*^9}, {
   3.829618920387555*^9, 3.8296189549102125`*^9}, 3.829618992551549*^9, {
   3.829619099655219*^9, 3.8296191748600173`*^9}, {3.8296196078812103`*^9, 
   3.8296196270613103`*^9}, {3.8296196734575357`*^9, 3.8296196737736154`*^9}, 
   3.8296198912284155`*^9, {3.8296199921395435`*^9, 3.82962003338142*^9}, {
   3.8296200862951665`*^9, 3.829620125787877*^9}, {3.8296204887815065`*^9, 
   3.8296205376519723`*^9}, 3.829620573624823*^9, {3.829620838561872*^9, 
   3.829620869908047*^9}, {3.8296209065731196`*^9, 3.829621073949585*^9}, {
   3.8296211188376913`*^9, 3.8296211349263887`*^9}, {3.8296216140206137`*^9, 
   3.8296216291265645`*^9}, {3.829621720684843*^9, 3.82962189117773*^9}, {
   3.8296220239739065`*^9, 3.8296220648229136`*^9}, {3.829622232222217*^9, 
   3.829622272692799*^9}, {3.829622310961693*^9, 3.829622317882908*^9}, {
   3.8296223501453533`*^9, 3.8296225051800227`*^9}, {3.8296225500801077`*^9, 
   3.8296225937052402`*^9}, {3.8296226269283843`*^9, 
   3.8296226708555765`*^9}, {3.8296227398028636`*^9, 
   3.8296228065933275`*^9}, {3.829622887107476*^9, 3.8296229513880863`*^9}, {
   3.829623019731415*^9, 3.829623030345662*^9}, 3.829623068544873*^9, {
   3.829623118446474*^9, 3.82962316605029*^9}, {3.8296233016990843`*^9, 
   3.829623337173185*^9}, {3.829623423669058*^9, 3.829623459268669*^9}, {
   3.829623492559741*^9, 3.829623551498787*^9}, {3.829623601442627*^9, 
   3.8296237628668737`*^9}, {3.829623794886768*^9, 3.8296238130545034`*^9}, {
   3.829623902371518*^9, 3.8296239802889695`*^9}, {3.829624025208415*^9, 
   3.829624044210679*^9}, {3.82962408312409*^9, 3.829624092805127*^9}, {
   3.829624150020189*^9, 3.8296241888119783`*^9}, {3.8296242817215643`*^9, 
   3.8296242858242884`*^9}, {3.8296243270586967`*^9, 
   3.8296243339572797`*^9}, {3.829624432064375*^9, 3.829624434180721*^9}, {
   3.8296245775103617`*^9, 3.829624585615199*^9}, {3.8296247340482774`*^9, 
   3.8296247343265553`*^9}, 3.829625416439164*^9, {3.8296254584053073`*^9, 
   3.829625493643697*^9}, {3.829625985126682*^9, 3.8296259936138473`*^9}, {
   3.8296262028267813`*^9, 3.829626315403964*^9}, {3.8296272261479087`*^9, 
   3.8296272288651795`*^9}, {3.8296272661493216`*^9, 3.829627292551578*^9}, {
   3.82962904290868*^9, 3.829629053432435*^9}, 3.829629202286118*^9, {
   3.8296294330244474`*^9, 3.8296294552364435`*^9}, {3.82962950867338*^9, 
   3.829629558843916*^9}, {3.8296295922623973`*^9, 3.829629604539007*^9}, {
   3.82962967650686*^9, 3.8296296769384847`*^9}, 3.8296297244868593`*^9, {
   3.829630318738618*^9, 3.82963032037134*^9}, {3.829630904540101*^9, 
   3.8296309147953415`*^9}, {3.8296310881823387`*^9, 3.8296310984488926`*^9}, 
   3.829632759355863*^9, {3.8296333188293886`*^9, 3.829633336777824*^9}, {
   3.8296334427229304`*^9, 3.829633451882594*^9}, {3.829633486452692*^9, 
   3.829633487522402*^9}, {3.8296387854329042`*^9, 3.8296388018693523`*^9}, {
   3.8296410107113457`*^9, 3.829641047361068*^9}, {3.829641540488596*^9, 
   3.8296415659591165`*^9}, {3.829641609891522*^9, 3.8296417204316907`*^9}, {
   3.8296417605298815`*^9, 3.829641860309639*^9}, {3.829641902180899*^9, 
   3.8296419850463324`*^9}, {3.8296421128896933`*^9, 3.829642119648625*^9}, {
   3.8296421541799564`*^9, 3.8296423099271345`*^9}, {3.8296424245708137`*^9, 
   3.8296424370179462`*^9}, 3.8296425072338676`*^9, {3.8298180917084184`*^9, 
   3.8298180922554703`*^9}, {3.829818122796958*^9, 3.829818135706196*^9}, {
   3.829882495920641*^9, 3.8298825287254972`*^9}, 3.829883750821653*^9, {
   3.8298877023706884`*^9, 3.8298877081855907`*^9}, 3.829887910978161*^9, {
   3.829887970117035*^9, 3.8298879719492006`*^9}, {3.8298903295666604`*^9, 
   3.829890336273425*^9}, {3.830589734872882*^9, 3.830589827789209*^9}},
 CellLabel->
  "In[978]:=",ExpressionUUID->"ade08007-e6b4-4b99-8268-809e716dc210"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             AbsoluteThickness[1.6], 
             PointSize[Large], 
             GrayLevel[0]], 
            PointBox[CompressedData["
1:eJw1kmtIk1EYx1e5qaGk2AetIXNrammSqVvZ1v5eXy8FFSTtQyOGppRNpCxM
szdDcCZahAwLyylWUhZ4aTnRLjNnX8oRVKJEfUnRcs6sadlW4XleOLz8zu85
D/9zidCXHCpYKxAIFP/G///qN69566+T6jo9GjYBk+N6XfjPRcZ+KDWY08qH
ZxkHYVAYzl8wuRhvRHN7W6LV5mQcisDBO2OX15MXI+yU6Fv0jwXGEhjLZKpP
jnnGUtTte5WqclD9Fpzsb/BB0X6sciRqzZFqk4Tqo5EXNtJlPUv126Do09sr
xV7GsZgM6X2Rf/Ur4zhwNd4rhkXKtwNd5+TO7nXULx7ij8faXyoo3074fn48
qh4gn4Bou+1ZbTxxIowJlpICN9UnYeqWb5y6mrwC1xaSjK5RYiW01pXGrdpl
xrvg/a3lLhavYfvbje6abInx0grzyVgq7BD4KIKY34OnzTMHNmuEjFWQfRnx
5FYQq2G2u9wBh6l+Lz48yJfP9lA/DVqHDMvoEDAPuCe5Kp1zadXzgKl9okF/
ms4zBdvHbFVzepafT8G7mDPHAyTkUzF9W5QhKWPMp8LSIx2v6qT9pqFoMKTX
cpR8GqKCW2bPN9H6dNyU3xAe1M4xn44Jf3l99T06nwxMmmbyLYnsPfIZKC5X
Dvn1Uf9M/GlR9Uc8p3yZsNzdNN5mI89h+lHpYngTux+eQ6D7oe6Xk3wWKupP
LMnslC8LjT6v39wXUb5scGbu/QDYe+GzEVsZ4/KE0n3nYINf8pMUEeXPQd9w
XlTw1Hfmc1F4RMxFKj2av3RA/sU=
             "]]}, {
            Directive[
             PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1:eJw1kjtIQmEUx69SEdUQFD2gQRsiIjQty573aprZg6CgMS5RU4gtRS5xS2hp
iAiaJWoKGiJoC6klSprS2QZxyEqzd2L5/T3nwr0fv/s73zn/+zDO+6cX9ZIk
2QqnWItHWi5cVGfVn0w3FMG+pzficsFK4vqRuBpePc8Q14JrjGniBsHhiwr2
TfAlpiyxQbC0Vsa+WbCWiDK3wN8McL9W9IttsW+Dn9rmvO3w9bcpYhM4q+P9
HYLj5klmi2DDr+OV2Ip+iXv2nchrXWfugg/+cr0N/d1n7LuRX/5k7sG85Mo3
sR2c8OuUIveKNWQ/zZHvw7zgXDX5ftRfrpYSDyBvbpd5EPWNS1w/hDXzzv1k
5JtNSuQV9LuyUB4NHHrY4PfpEKx8LlB+DRyK+tg74b82iTWwdhDj5x1G/5kd
9mDJs8f7XcjvvXgmX+RI5Q95N+bFXHnyYLUuzf1HMD+Q4nxgtS/C3gOvv6Pv
oxV5v4Tnj2KeOc75wMqRh70X/tj2Qh6sqRP8vccw73CZ84PDTR/8P49j/0kg
L/8D/vOoIw==
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[
           Rational[1, 2], 0.5], Axes -> {False, False}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"ampl\"", TraditionalForm], None}, {
            FormBox["\"Nbpm\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Ampl from data and calculated ampl\"", TraditionalForm], 
         PlotRange -> {{0., 54.}, {0, 3.20124888420105}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Ampl from data\"", "\"Calculated ampl\""}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, 
       {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw10mtIU2EYB/ApQRIZxZRkJOnwxtzMk5umTv1P59w0FlkDFYuSnIHV/LKY
OtqJbh+SyCxJqCQxdCRGE80UM0nIS7ScU6PLyExZTc1LUrmKij3nwMvh9/45
7/s8PCe8xJBf6s/j8WT/1v+371nKsDW06mTu1X7agK7c2n90cDDDxwAIhCYn
nA8o34rtT3nLpyxz5CB8XJw7f/XMD3IIHj5Jr4i5bSTvwJ+Y3NOCSyvkMIwd
eBxbq+XuE0IaNCeTC3vIUTBsiOqN65wlx2D2snq2Zn2SLII39KYgfG2NLEa9
0i5trv5MjsPoZKNlk2iIHA/nmHloWvyLzMBW2XNDZXtJ3o2T790lEYEz5ATo
RevHdgb+Jksx6i4yMO2dZBnqnDNNJ7q5fhKRUNBX+HbLMjkJbaN2tTT5HXkP
CgIOf33OdpCToW/pruXLuP5SsNHWK5mYXySnwhi6mbFJl8hyuNevNTTnvSGn
IbNdoj44/IGcjnzLjElkmSdnoK1+oTTJwM0DKD7kt3DFROexAFN337K3w0m5
An786EeTr1opV6CgxT/Y8clLeSZel9+xVj4bpzwTVmfZkdgBrr4s8ENcxfta
qX82C2L+9cX4bVb6f5Roqg/74rj4jXIlJGZj5K7x7/R9NnQ/zQG37o5Qng2v
NqK6cISbrwpVRX3HG/24+lV4YfCuBNUNU56D/Sld0Vo3zYPNwYTwbFWVykW5
GhcYuX/kuWnK1dDw9HEMy92vQXBqmkPaM+Crl9XAU6bo6qvh5pmLxFLbqmuK
6mFzYWKE9+xTDsrzwLRUVng0nv6/eQcP7Q==
         "]]}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 2], 0.5],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"error(%)\"", TraditionalForm], None}, {
         FormBox["\"Nbpm\"", TraditionalForm], None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImageSize->500,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"(%)(CalculatedAmpl-AmplFromData)/AmplFromData\"", TraditionalForm],
      PlotRange->{{0, 54.}, {-1.8157037681982273`, 0.16224309786306415`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8298839773865023`*^9, 3.829887741961478*^9, 3.8298879218200703`*^9, 
   3.829887979466814*^9, 3.8298892806547174`*^9, 3.8298903395070114`*^9, 
   3.829891413419357*^9, 3.829893184420267*^9, 3.830580558007975*^9, 
   3.83058061225323*^9, 3.8305848233216677`*^9, 3.830584882861709*^9, 
   3.8305850144090633`*^9, 3.8305894748786697`*^9, 3.8305897465031486`*^9, 
   3.830589778002986*^9, {3.8305898100687933`*^9, 3.830589828305834*^9}, 
   3.8306063125018167`*^9, 3.8306064252967324`*^9, 3.830607166314293*^9},
 CellLabel->
  "Out[982]=",ExpressionUUID->"218d0cfd-3572-4fd8-bba6-bed98c3495f4"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Medium], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBWIQDQEf7Lcfr3rt9EfXASrgsJhRf60auwyUz+HwN/7+
wa7pHFC+gENIblTaxr3CUL6Ig5D7p5tW4gJQvoSDq8OVYvs2IShfxkHk8uXk
D2/EoHwFh4qyS1tfcMPklRxunN61Q95BBMpXc1jR8Xi5/3SYeRoOf55Efswr
gdmn5aASW8YhfF8Pytdx6P+a/+01KxeUr+fwO3DGmh0eMP0GDhvXG78RioHx
DR2+hjc31WuKQvlGDk3ye73LbwtC+cYOU/W/Ftvtgqk3cRB+dDop8hPM/aYO
9Y+2Fs1Mgqk3c6jZsen2oR8wvrnDkQK211F1KlC+hcOTit09K2ONoXxLB16G
9/kPXmlC+VYOR1JLnjUeDoDyrR1uHOKRXnXaBsq3cTDwLjLfkW8L5ds6dFR6
sr9nDoTy7Ry02WyZzrtpQfn2Dl8ZfvxctsYQyndwyBZnXbv+ijKE3+Dg8PuB
kMmfHFh4OjrMUdm05LkC1P0Njg7HH15+qLsVFj9ODtP7lbbeKYCqb3ByOHno
ocyqrTD/OjusOHPj2R0bmLyzg8thlcN6O2HmuzgIN7X8rEnghcq7OOx99/Jf
wX9Y+Lg66N+cMvuMJDT9Nbg6/HBvvmB5Dma+mwOXwewQnhcw97k5FMr5qqa/
hcm7O7i2Rfz7wgaNnwZ3h6c8ay7u8oG538PBVYjvgrEmNH01eDjs0e0SfVoL
k/d0SC2U/6atzg+V93TQ+sPO1v4Elh69HA4fr8/sOcADlfdyOMJRbTvTRRIq
7+2w/LbUnxo5XQcA4qDcEg==
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Medium], 
          GrayLevel[0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBWIQDQEf7K8tcT1Q807XASrgEBR591g3jxyUz+GwbGWW
20p+TihfwCH1zYWt2guEoHwRh33rrut7+MH4Eg7LvAU4i1RgfBmHdAXW3E+r
YHwFh20/90sv1obxlRycN6o+sXGF8dUcXM+sN1IWhvE1HOa7/s1fkgXjazmc
Sqs+cqZPA8rXcQjkeKWdxi8C5es5fPPcWy29VhDKN3CYM7PRy7sWpt/Qgc9h
TtL+FzC+kYOxjNm33Ikw9cYOhyalntt5FSZv4uC1q1bHfCqMb+pQaPz1FPci
mHozh+XLFtXEiAhD+eYOgrbb5kZVKkP5Fg6pc6O3XmY1hPItHeK/FO+9oKMF
5Vs5/HnWZfpzXxCUb+0gt96q52WgE5Rv4zBjHTLf1uElino7h+pvyObZO2xf
gGyfg8M2GyT3NDg4FCxGdq+jwzVk/zQ4OizYg+xfJwf+fqTwaHBycJRDDi9n
h+fI4dng7GA8DTm8XRwMfJHio8HFIZB9Z/0Ta1WovKvDxUSk+GxwdUj1RI5v
N4e9p5DSQ4Obw8pAe7+oJTB5dweFrUjpp8Hd4dA35PTl4RCMnP4aPBxm+iGn
T08H/tVI6bfB04HxHXL69nLYuhop/Td4OewORs4f3g4uyyD5BwAacNF+
          "]]}}}, {{}, {}}}, {
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"01-STP0\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {1, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"02-STP2\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {2, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"03-STP4\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {3, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"04-SRP1\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {4, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"05-SRP2\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {5, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"06-SRP3\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {6, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"07-SRP4\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {7, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"08-SRP5\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {8, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"09-SRP6\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {9, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"10-SRP7\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {10, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"11-SRP8\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {11, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"12-SRP9\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {12, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"13-SIP1\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {13, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"14-SIP2\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {14, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"15-SRP10\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {15, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"16-SRP11\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {16, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"17-SRP12\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {17, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"18-SRP13\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {18, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"19-SRP14\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {19, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"20-SRP15\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {20, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"21-SRP16\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {21, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"22-SRP17\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {22, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"23-SEP5\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {23, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"24-SEP4\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {24, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"25-SEP3\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {25, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"26-SEP1\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {26, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"27-SEP0\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {27, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"28-NEP0\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {28, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"29-NEP1\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {29, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"30-NEP3\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {30, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"31-NEP4\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {31, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"32-NEP5\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {32, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"33-NRP17\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {33, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"34-NRP16\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {34, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"35-NRP15\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {35, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"36-NRP14\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {36, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"37-NRP13\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {37, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"38-NRP12\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {38, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"39-NRP11\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {39, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"40-NRP10\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {40, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"41-NIP3\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {41, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"42-NIP1\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {42, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"43-NRP9\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {43, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"44-NRP8\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {44, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"45-NRP7\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {45, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"46-NRP6\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {46, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"47-NRP5\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {47, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"48-NRP4\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {48, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"49-NRP3\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {49, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"50-NRP2\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {50, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"51-NRP1\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {51, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"52-NTP4\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {52, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"53-NTP2\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {53, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False], 
      StyleBox[
       InsetBox[
        FormBox[
         RotationBox["\"54-NTP0\"", BoxRotation -> -1.5707963267948966`], 
         TraditionalForm], {54, -1}, 
        ImageScaled[{
          Rational[1, 2], 1}]], {8}, StripOnInput -> False]}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[Medium], 
          RGBColor[0.5, 0, 0.5]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBWIQDQEf7B+KT192UFXPASrgUCJdMb1sghyUz+FQW3JW
cK0YN5Qv4HBTJmgt73RRKF/Ewf2p3afXDIJQvoTDhspNKRUiML6MQ2vunuZn
y4ShfAWHWzOlPe6tE4DylRyamJsYrF+JQPlqDn9uLXBSnwXjazhkMVpuMjES
gvK1HOY3SvBrSqhD+ToOZeac3YI6MPV6DitXN1poqMH4Bg5xJf4qzdb8UL6h
w3y5LwKnHsHcY+SwpazEbcI3mHuNHSwc007xf4OpN3FYMiOh324BzDxTh97v
H0QUbsLcb+agZbJkepIlzH3mDvZ14TuaXqhA+RYOlvteisukm0D5lg5XTd25
1rVrQ/lWDj/2pElKGQRC+dYOdfGnuKwyHaB8G4cuZgZWJUFHKN/WIWLnxavT
e2Dq7Rzm84XKpO/VgvLtHXpUFFY3SRtD+Q4OD6/nn7ZjV4XwGxwcdifKHXQz
gPnH0cEtu3Jz/mSofxocHdZ/s4gJ6YH5x8lhtvAhv64yKL/BycHbWl6scy/M
/84Oy3YF52qchck7O7xTsL237jssPF0c1J4piwccgvIbXBzKnTxVPkjCwsfV
4bRexfbVFcpQeVeHr7JcklrZsPTl5nAtaeP3Scww/W4Ou5lnd8Tvg9nv7nD2
/zeNGdeh/mlwdzi5sZLB5zBM3sPBpeTt6TsxMPd5ODxf/ruX8QXMf54Ovp1n
OB6ZQuO7wdOhUuRYgZQxzH4vh7ITkSfvfuKFyns5uNxV22c9VRoq7+1Qy5wc
bGqi4wAAcZTGjQ==
          "]]}}}, {{}, {}}}}, {
    PlotRange -> {All, {-10, All}}, PlotLabel -> 
     FormBox["\"BETA (OLD MODEL DATA)\"", TraditionalForm], FrameLabel -> {
       FormBox["\"BPM names\"", TraditionalForm], 
       FormBox["\"Beta\"", TraditionalForm]}, ImageSize -> 900, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 54.}, {0, 30.103154599227885`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Beta from ampl\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Beta from model\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Beta from Phase\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium], 
                    RGBColor[0.5, 0, 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[Medium], 
                    RGBColor[0.5, 0, 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8298839773865023`*^9, 3.829887741961478*^9, 3.8298879218200703`*^9, 
   3.829887979466814*^9, 3.8298892806547174`*^9, 3.8298903395070114`*^9, 
   3.829891413419357*^9, 3.829893184420267*^9, 3.830580558007975*^9, 
   3.83058061225323*^9, 3.8305848233216677`*^9, 3.830584882861709*^9, 
   3.8305850144090633`*^9, 3.8305894748786697`*^9, 3.8305897465031486`*^9, 
   3.830589778002986*^9, {3.8305898100687933`*^9, 3.830589828305834*^9}, 
   3.8306063125018167`*^9, 3.8306064252967324`*^9, 3.8306071666374006`*^9},
 CellLabel->
  "Out[989]=",ExpressionUUID->"21d035c4-7748-4787-a682-3a8b8c912d99"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, 
       {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwtj2tIUwEUx6eSuRWjx9AaS+d8ZmrmnDpr+t/UqTMIHzQssFQMKUqWIZaa
Q8Roig/yg+kHHa4ge2GwDDO2cpY1NXUqkvUhzDdSSytzaA/uuXC5/O7/cc7x
zi1Mz3dmsViSf+//L/N8i2vqnJbmOL+Jox8Q9ip3Zs3zzQy6odhX5/i4tmli
eBckX8b8hlY9wDAPznfrH2eKA8m/D5M+CnbnFIt0ATLq0urmhiOJhQg1vp7u
sM1SnwgFveqFrgd+pPvDnB5UOnleSH2BuM5pmP1U6056EMqKrgZVGqXEwejf
OFfb2CgnfyietGna+7RexGHgtrlkGtgBxEfgNd5+PHo8gPLhmBEJmkdObtD9
YgTL3ubUnPUnfwQ2bXXZ+tIo8ktgSt3v6l7+k/aPBN/wvbtD6kH+KJTbbD+c
7DzyR0Ouj40punGIWAqLVD+I8q+Uj8HktR6Ot78f5Y+ipWG51VogIT4Ghc+l
lzvuiYllMPWXGC3FIuJYpMZwHDrbFO0fh/XfLmX8di7NAx7eZBcun9hkdC2w
sfeRcG07MUsO0ynP03tmXJk+rRyKCbVcrJ0lXYGmvHx1xgs206dVoEc1seA7
sEh6PCpbz4guDDmoPx4tnrsvrnTxaX4C3n8YyObNh1F/AkbzZMNcq53uT8RT
c/Piq4pw6k/EL3uV220dh+5TQmepyjUMrjB+rRKyGsFz3n0u6UmocHxeelcf
QfkkOEpWVfa+OdovGSlF607GLS/SkyFY6tJ0jmyRnoLLB2/1to6G0H4p+JN1
oNqqDqT9VTCI+uPvXAmhvArelmqNeuwwzU9FrmH6WVr3NvNfCy32cQ==
         "]]}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 2], 0.5],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"error(%)\"", TraditionalForm], None}, {
         FormBox["\"Nbpm\"", TraditionalForm], None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImageSize->500,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"(%)(BetaFromAmpl-ModelBeta)/ModelBeta\"", TraditionalForm],
      PlotRange->{{0, 54.}, {-35.13725428608226, 25.709017424250746`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBWIQDQEf7N+FunnfFHluDxVw0C9xWCJT8BvK53A4mKYy
97euggOEL+DQnvV404kr+lC+iMMq+Y5epxKZAxC+hAPzh72a5TniUL6MQ01i
+Ib1YqJQ9QoO/11m1gjHK0DllRzOc8p+OvlJByqv5tBj/+pdyHdtKF/D4fUz
7ztS6p/3Q/haDtbfXb5rXoOZr+NgN79TJ+ruQ6h79Rz0d/H57/kF02/gcOan
4EE/EX2oekOH9CkHMoNWikDljRzYVwQnRP1lhPKNHVR1ZRi++elB1Zs43HV9
5qz2VxUqb+qw/95V7WtnBaHyZg4sQg+rzr2D8c0dpmT3lZSWykLVWzjIqfbs
Er9tDOVbOjz3y1i3fgvMfisHl1l71bvmw8LD2sHm3U1OxusqUL6Nw7HoM/ve
RktD+bYOQY0sVs2dklC+nUNbVvMqMWeY++0d0pcn77au04DyHRxYuSxZDr6R
h/AbHBwM08187RzEofKODr/Y3u7Y9gsang2ODkXPtz3Z+eI4NLydHBav51j9
bOp/CL/ByeF4y5wjrTeEoPY7O+Q/e3aRwfYRVN7Z4XqizX7hqWxQeReHZRtb
GW/+vQuJnwYXB3Ov1nzxMFGovKvDEoM+Ht9tJlD7XR36Wjew/vMxgLrPzSHg
1MXCE5Uw97k5WHw5I3UhFhY+7g5LFE55n1SDpp8GdweOmFeGhX/koPIeDpZx
Ld4TVH5B3efhUOlmOXHDdQGo+Z4OEVx5c+wadaHmezqExJu5dCyGpR8vBzGv
T3mzGqDx1+DlcC0x/P+jTFh8eTu8r7H83S4mfgAAQMfpPw==
         "]]}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 2], 0.5],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"error(%)\"", TraditionalForm], None}, {
         FormBox["\"Nbpm\"", TraditionalForm], None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImageSize->500,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"(%)(BetaFromPhase-ModelBeta)/ModelBeta\"", TraditionalForm],
      PlotRange->{{0., 54.}, {-20.71211317511974, 19.855830821242414`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8298839773865023`*^9, 3.829887741961478*^9, 3.8298879218200703`*^9, 
   3.829887979466814*^9, 3.8298892806547174`*^9, 3.8298903395070114`*^9, 
   3.829891413419357*^9, 3.829893184420267*^9, 3.830580558007975*^9, 
   3.83058061225323*^9, 3.8305848233216677`*^9, 3.830584882861709*^9, 
   3.8305850144090633`*^9, 3.8305894748786697`*^9, 3.8305897465031486`*^9, 
   3.830589778002986*^9, {3.8305898100687933`*^9, 3.830589828305834*^9}, 
   3.8306063125018167`*^9, 3.8306064252967324`*^9, 3.830607166753328*^9},
 CellLabel->
  "Out[990]=",ExpressionUUID->"5f67e54a-5564-488c-9e6c-16ab3cf659c9"]
}, Open  ]]
},
WindowSize->{1141.2, 580.1999999999999},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1cad2618-7bef-4802-bf48-5e206f5aff14"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 760, 15, 85, "Code",ExpressionUUID->"ef3fa8d3-4578-44fb-bde5-dd388c2cabe9"],
Cell[1343, 39, 1565, 25, 72, "Output",ExpressionUUID->"a0145592-f067-43ef-b2d0-73e6438b4c41"],
Cell[2911, 66, 915, 15, 32, "Output",ExpressionUUID->"f4af5823-0cfb-4963-98b0-0ae74e1e737f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3863, 86, 378, 9, 49, "Code",ExpressionUUID->"64ddd3de-cbf7-4b14-a652-239a59267a06"],
Cell[4244, 97, 572, 10, 32, "Output",ExpressionUUID->"30deb97e-9aea-4fc2-b0af-8246990f9b55"]
}, Open  ]],
Cell[4831, 110, 2669, 61, 223, "Code",ExpressionUUID->"f423771b-ea4f-4ab4-8b14-82420984accd"],
Cell[7503, 173, 954, 18, 68, "Code",ExpressionUUID->"9a0140c3-e33d-4712-aa1c-d65b98e2283f"],
Cell[8460, 193, 1124, 20, 68, "Code",ExpressionUUID->"4eb92024-4091-4911-ae3b-d476ea045f8d"],
Cell[9587, 215, 2149, 50, 154, "Code",ExpressionUUID->"017d61e2-5027-47b6-b2be-b48746f02155"],
Cell[CellGroupData[{
Cell[11761, 269, 4824, 127, 292, "Code",ExpressionUUID->"d2c23efe-5191-4c66-b8fe-beaf264e4fe1"],
Cell[16588, 398, 457, 7, 32, "Output",ExpressionUUID->"2f40b701-8a03-480e-8c24-8b76967f575c"],
Cell[17048, 407, 457, 7, 32, "Output",ExpressionUUID->"c39d5ccc-5273-4128-88b6-474a09418db6"],
Cell[17508, 416, 457, 7, 32, "Output",ExpressionUUID->"8ca38129-8e04-4e4b-90c3-e3af3cd76e0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18002, 428, 4445, 112, 257, "Code",ExpressionUUID->"a5769926-b177-4ee0-872a-370666a54b92"],
Cell[22450, 542, 718, 10, 32, "Output",ExpressionUUID->"bdb4cbd8-52a2-46be-af42-585697b24c5c"],
Cell[23171, 554, 720, 10, 32, "Output",ExpressionUUID->"b0834ddd-caa5-4a85-a1fc-416538614aa2"],
Cell[23894, 566, 724, 11, 32, "Output",ExpressionUUID->"6b8444b0-5cc2-4123-ae13-b1fa566eec21"]
}, Open  ]],
Cell[24633, 580, 4035, 100, 395, "Code",ExpressionUUID->"17f66576-d936-4350-bda2-7e0d9f663b11"],
Cell[28671, 682, 5989, 152, 516, "Code",ExpressionUUID->"6a29126c-9f93-4c67-91e3-6ed2ff61c69c"],
Cell[34663, 836, 4909, 113, 292, "Code",ExpressionUUID->"95dd9788-8aea-4c6e-bd07-2ce8de38799e"],
Cell[39575, 951, 4153, 82, 154, "Code",ExpressionUUID->"fa0ba695-4a5e-402e-abe5-e171babcf299"],
Cell[43731, 1035, 22766, 485, 430, "Code",ExpressionUUID->"91f571e2-00d4-4bc6-812e-98dc5134f070"],
Cell[66500, 1522, 5529, 112, 188, "Code",ExpressionUUID->"4857fdaa-0fc8-446f-a120-342a01d88dba"],
Cell[72032, 1636, 233, 6, 28, "Input",ExpressionUUID->"12ecd1f4-8ffc-48f2-9cda-51e21a60e86a"],
Cell[CellGroupData[{
Cell[72290, 1646, 8130, 157, 223, "Code",ExpressionUUID->"069d5113-f8d0-4da4-acf3-c44228a5cde5"],
Cell[80423, 1805, 28447, 580, 353, "Output",ExpressionUUID->"edd5298c-d8dc-442d-abe7-3339d4965348"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108907, 2390, 20293, 472, 1669, "Input",ExpressionUUID->"ade08007-e6b4-4b99-8268-809e716dc210"],
Cell[129203, 2864, 16540, 351, 331, "Output",ExpressionUUID->"218d0cfd-3572-4fd8-bba6-bed98c3495f4"],
Cell[145746, 3217, 35721, 836, 604, "Output",ExpressionUUID->"21d035c4-7748-4787-a682-3a8b8c912d99"],
Cell[181470, 4055, 5584, 130, 298, "Output",ExpressionUUID->"5f67e54a-5564-488c-9e6c-16ab3cf659c9"]
}, Open  ]]
}
]
*)

